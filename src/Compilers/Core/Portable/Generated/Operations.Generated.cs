// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.
// < auto-generated />
#nullable enable
using System;
using System.Collections.Generic;
using System.Threading;
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using Microsoft.CodeAnalysis.FlowAnalysis;
using Microsoft.CodeAnalysis.PooledObjects;
using Roslyn.Utilities;

namespace Microsoft.CodeAnalysis.Operations
{
    /// <summary>
    /// Represents an invalid operation with one or more child operations.
    /// <para>
    /// Current usage:
    ///  (1) C# invalid expression or invalid statement.
    ///  (2) VB invalid expression or invalid statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Invalid"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInvalidOperation : IOperation
    {
    }
    /// <summary>
    /// Represents a block containing a sequence of operations and local declarations.
    /// <para>
    /// Current usage:
    ///  (1) C# "{ ... }" block statement.
    ///  (2) VB implicit block statement for method bodies and other block scoped statements.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Block"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IBlockOperation : IOperation
    {

        ImmutableArray<IOperation> Operations { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }
    }
    /// <summary>
    /// Represents a variable declaration statement.
    /// </summary>
    /// <para>
    /// Current Usage:
    ///   (1) C# local declaration statement
    ///   (2) C# fixed statement
    ///   (3) C# using statement
    ///   (4) C# using declaration
    ///   (5) VB Dim statement
    ///   (6) VB Using statement
    /// </para>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.VariableDeclarationGroup"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IVariableDeclarationGroupOperation : IOperation
    {

        ImmutableArray<IVariableDeclarationOperation> Declarations { get; }
    }
    /// <summary>
    /// Represents a switch operation with a value to be switched upon and switch cases.
    /// <para>
    /// Current usage:
    ///  (1) C# switch statement.
    ///  (2) VB Select Case statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Switch"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISwitchOperation : IOperation
    {

        ImmutableArray<ILocalSymbol> Locals { get; }

        IOperation Value { get; }

        ImmutableArray<ISwitchCaseOperation> Cases { get; }

        ILabelSymbol ExitLabel { get; }
    }
    /// <summary>
    /// Represents a loop operation.
    /// <para>
    /// Current usage:
    ///   (1) C# 'while', 'for', 'foreach' and 'do' loop statements
    ///   (2) VB 'While', 'ForTo', 'ForEach', 'Do While' and 'Do Until' loop statements
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILoopOperation : IOperation
    {

        LoopKind LoopKind { get; }

        IOperation Body { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }

        ILabelSymbol ContinueLabel { get; }

        ILabelSymbol ExitLabel { get; }
    }
    /// <summary>
    /// Represents a for each loop.
    /// <para>
    /// Current usage:
    ///  (1) C# 'foreach' loop statement
    ///  (2) VB 'For Each' loop statement
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IForEachLoopOperation : ILoopOperation
    {

        IOperation LoopControlVariable { get; }

        IOperation Collection { get; }

        ImmutableArray<IOperation> NextVariables { get; }

        bool IsAsynchronous { get; }
    }
    /// <summary>
    /// Represents a for loop.
    /// <para>
    /// Current usage:
    ///  (1) C# 'for' loop statement
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IForLoopOperation : ILoopOperation
    {

        ImmutableArray<IOperation> Before { get; }

        ImmutableArray<ILocalSymbol> ConditionLocals { get; }

        IOperation? Condition { get; }

        ImmutableArray<IOperation> AtLoopBottom { get; }
    }
    /// <summary>
    /// Represents a for to loop with loop control variable and initial, limit and step values for the control variable.
    /// <para>
    /// Current usage:
    ///  (1) VB 'For ... To ... Step' loop statement
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IForToLoopOperation : ILoopOperation
    {

        IOperation LoopControlVariable { get; }

        IOperation InitialValue { get; }

        IOperation LimitValue { get; }

        IOperation StepValue { get; }

        bool IsChecked { get; }

        ImmutableArray<IOperation> NextVariables { get; }
    }
    /// <summary>
    /// Represents a while or do while loop.
    /// <para>
    /// Current usage:
    ///  (1) C# 'while' and 'do while' loop statements.
    ///  (2) VB 'While', 'Do While' and 'Do Until' loop statements.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IWhileLoopOperation : ILoopOperation
    {

        IOperation? Condition { get; }

        bool ConditionIsTop { get; }

        bool ConditionIsUntil { get; }

        IOperation? IgnoredCondition { get; }
    }
    /// <summary>
    /// Represents an operation with a label.
    /// <para>
    /// Current usage:
    ///  (1) C# labeled statement.
    ///  (2) VB label statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Labeled"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILabeledOperation : IOperation
    {

        ILabelSymbol Label { get; }

        IOperation? Operation { get; }
    }
    /// <summary>
    /// Represents a branch operation.
    /// <para>
    /// Current usage:
    ///  (1) C# goto, break, or continue statement.
    ///  (2) VB GoTo, Exit ***, or Continue *** statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Branch"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IBranchOperation : IOperation
    {

        ILabelSymbol Target { get; }

        BranchKind BranchKind { get; }
    }
    /// <summary>
    /// Represents an empty or no-op operation.
    /// <para>
    /// Current usage:
    ///  (1) C# empty statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Empty"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IEmptyOperation : IOperation
    {
    }
    /// <summary>
    /// Represents a return from the method with an optional return value.
    /// <para>
    /// Current usage:
    ///  (1) C# return statement and yield statement.
    ///  (2) VB Return statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Return"/></description></item>
    /// <item><description><see cref="OperationKind.YieldBreak"/></description></item>
    /// <item><description><see cref="OperationKind.YieldReturn"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IReturnOperation : IOperation
    {

        IOperation? ReturnedValue { get; }
    }
    /// <summary>
    /// Represents a <see cref="Body" /> of operations that are executed while holding a lock onto the <see cref="LockedValue" />.
    /// <para>
    /// Current usage:
    ///  (1) C# lock statement.
    ///  (2) VB SyncLock statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Lock"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILockOperation : IOperation
    {

        IOperation LockedValue { get; }

        IOperation Body { get; }
    }
    /// <summary>
    /// Represents a try operation for exception handling code with a body, catch clauses and a finally handler.
    /// <para>
    /// Current usage:
    ///  (1) C# try statement.
    ///  (2) VB Try statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Try"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITryOperation : IOperation
    {

        IBlockOperation Body { get; }

        ImmutableArray<ICatchClauseOperation> Catches { get; }

        IBlockOperation? Finally { get; }

        ILabelSymbol? ExitLabel { get; }
    }
    /// <summary>
    /// Represents a <see cref="Body" /> of operations that are executed while using disposable <see cref="Resources" />.
    /// <para>
    /// Current usage:
    ///  (1) C# using statement.
    ///  (2) VB Using statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Using"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IUsingOperation : IOperation
    {

        IOperation Resources { get; }

        IOperation Body { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }

        bool IsAsynchronous { get; }
    }
    /// <summary>
    /// Represents an operation that drops the resulting value and the type of the underlying wrapped <see cref="Operation" />.
    /// <para>
    /// Current usage:
    ///  (1) C# expression statement.
    ///  (2) VB expression statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ExpressionStatement"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IExpressionStatementOperation : IOperation
    {

        IOperation Operation { get; }
    }
    /// <summary>
    /// Represents a local function defined within a method.
    /// <para>
    /// Current usage:
    ///  (1) C# local function statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.LocalFunction"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILocalFunctionOperation : IOperation
    {

        IMethodSymbol Symbol { get; }

        IBlockOperation? Body { get; }

        IBlockOperation? IgnoredBody { get; }
    }
    /// <summary>
    /// Represents an operation to stop or suspend execution of code.
    /// <para>
    /// Current usage:
    ///  (1) VB Stop statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Stop"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IStopOperation : IOperation
    {
    }
    /// <summary>
    /// Represents an operation that stops the execution of code abruptly.
    /// <para>
    /// Current usage:
    ///  (1) VB End Statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.End"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IEndOperation : IOperation
    {
    }
    /// <summary>
    /// Represents an operation for raising an event.
    /// <para>
    /// Current usage:
    ///  (1) VB raise event statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.RaiseEvent"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRaiseEventOperation : IOperation
    {

        IEventReferenceOperation EventReference { get; }

        ImmutableArray<IArgumentOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents a textual literal numeric, string, etc.
    /// <para>
    /// Current usage:
    ///  (1) C# literal expression.
    ///  (2) VB literal expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Literal"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILiteralOperation : IOperation
    {
    }
    /// <summary>
    /// Represents a type conversion.
    /// <para>
    /// Current usage:
    ///  (1) C# conversion expression.
    ///  (2) VB conversion expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Conversion"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConversionOperation : IOperation
    {

        IOperation Operand { get; }

        IMethodSymbol? OperatorMethod { get; }

        CommonConversion Conversion { get; }

        bool IsTryCast { get; }

        bool IsChecked { get; }
    }
    /// <summary>
    /// Represents an invocation of a method.
    /// <para>
    /// Current usage:
    ///  (1) C# method invocation expression.
    ///  (2) C# collection element initializer.
    ///      For example, in the following collection initializer: <code>new C() { 1, 2, 3 }</code>, we will have
    ///      3 <see cref="IInvocationOperation" /> nodes, each of which will be a call to the corresponding Add method
    ///      with either 1, 2, 3 as the argument.
    ///  (3) VB method invocation expression.
    ///  (4) VB collection element initializer.
    ///      Similar to the C# example, <code>New C() From {1, 2, 3}</code> will have 3 <see cref="IInvocationOperation" />
    ///      nodes with 1, 2, and 3 as their arguments, respectively.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Invocation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInvocationOperation : IOperation
    {

        IMethodSymbol TargetMethod { get; }

        IOperation? Instance { get; }

        bool IsVirtual { get; }

        ImmutableArray<IArgumentOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents a reference to an array element.
    /// <para>
    /// Current usage:
    ///  (1) C# array element reference expression.
    ///  (2) VB array element reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ArrayElementReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IArrayElementReferenceOperation : IOperation
    {

        IOperation ArrayReference { get; }

        ImmutableArray<IOperation> Indices { get; }
    }
    /// <summary>
    /// Represents a reference to a declared local variable.
    /// <para>
    /// Current usage:
    ///  (1) C# local reference expression.
    ///  (2) VB local reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.LocalReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ILocalReferenceOperation : IOperation
    {

        ILocalSymbol Local { get; }

        bool IsDeclaration { get; }
    }
    /// <summary>
    /// Represents a reference to a parameter.
    /// <para>
    /// Current usage:
    ///  (1) C# parameter reference expression.
    ///  (2) VB parameter reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ParameterReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IParameterReferenceOperation : IOperation
    {

        IParameterSymbol Parameter { get; }
    }
    /// <summary>
    /// Represents a reference to a member of a class, struct, or interface.
    /// <para>
    /// Current usage:
    ///  (1) C# member reference expression.
    ///  (2) VB member reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IMemberReferenceOperation : IOperation
    {

        IOperation? Instance { get; }

        ISymbol Member { get; }
    }
    /// <summary>
    /// Represents a reference to a field.
    /// <para>
    /// Current usage:
    ///  (1) C# field reference expression.
    ///  (2) VB field reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.FieldReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IFieldReferenceOperation : IMemberReferenceOperation
    {

        IFieldSymbol Field { get; }

        bool IsDeclaration { get; }
    }
    /// <summary>
    /// Represents a reference to a method other than as the target of an invocation.
    /// <para>
    /// Current usage:
    ///  (1) C# method reference expression.
    ///  (2) VB method reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.MethodReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IMethodReferenceOperation : IMemberReferenceOperation
    {

        IMethodSymbol Method { get; }

        bool IsVirtual { get; }
    }
    /// <summary>
    /// Represents a reference to a property.
    /// <para>
    /// Current usage:
    ///  (1) C# property reference expression.
    ///  (2) VB property reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.PropertyReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IPropertyReferenceOperation : IMemberReferenceOperation
    {

        IPropertySymbol Property { get; }

        ImmutableArray<IArgumentOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents a reference to an event.
    /// <para>
    /// Current usage:
    ///  (1) C# event reference expression.
    ///  (2) VB event reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.EventReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IEventReferenceOperation : IMemberReferenceOperation
    {

        IEventSymbol Event { get; }
    }
    /// <summary>
    /// Represents an operation with one operand and a unary operator.
    /// <para>
    /// Current usage:
    ///  (1) C# unary operation expression.
    ///  (2) VB unary operation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Unary"/></description></item>
    /// <item><description><see cref="OperationKind.UnaryOperator"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IUnaryOperation : IOperation
    {

        UnaryOperatorKind OperatorKind { get; }

        IOperation Operand { get; }

        bool IsLifted { get; }

        bool IsChecked { get; }

        IMethodSymbol? OperatorMethod { get; }
    }
    /// <summary>
    /// Represents an operation with two operands and a binary operator that produces a result with a non-null type.
    /// <para>
    /// Current usage:
    ///  (1) C# binary operator expression.
    ///  (2) VB binary operator expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Binary"/></description></item>
    /// <item><description><see cref="OperationKind.BinaryOperator"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IBinaryOperation : IOperation
    {

        BinaryOperatorKind OperatorKind { get; }

        IOperation LeftOperand { get; }

        IOperation RightOperand { get; }

        bool IsLifted { get; }

        bool IsChecked { get; }

        bool IsCompareText { get; }

        IMethodSymbol? OperatorMethod { get; }
    }
    /// <summary>
    /// Represents a conditional operation with:
    /// (1) <see cref="Condition" /> to be tested,
    /// (2) <see cref="WhenTrue" /> operation to be executed when <see cref="Condition" /> is true and
    /// (3) <see cref="WhenFalse" /> operation to be executed when the <see cref="Condition" /> is false.
    /// <para>
    /// Current usage:
    ///  (1) C# ternary expression "a ? b : c" and if statement.
    ///  (2) VB ternary expression "If(a, b, c)" and If Else statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Conditional"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConditionalOperation : IOperation
    {

        IOperation Condition { get; }

        IOperation WhenTrue { get; }

        IOperation? WhenFalse { get; }

        bool IsRef { get; }
    }
    /// <summary>
    /// Represents a coalesce operation with two operands:
    /// (1) <see cref="Value" />, which is the first operand that is unconditionally evaluated and is the result of the operation if non null.
    /// (2) <see cref="WhenNull" />, which is the second operand that is conditionally evaluated and is the result of the operation if <see cref="Value" /> is null.
    /// <para>
    /// Current usage:
    ///  (1) C# null-coalescing expression "Value ?? WhenNull".
    ///  (2) VB binary conditional expression "If(Value, WhenNull)".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Coalesce"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ICoalesceOperation : IOperation
    {

        IOperation Value { get; }

        IOperation WhenNull { get; }

        CommonConversion ValueConversion { get; }
    }
    /// <summary>
    /// Represents an anonymous function operation.
    /// <para>
    /// Current usage:
    ///  (1) C# lambda expression.
    ///  (2) VB anonymous delegate expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.AnonymousFunction"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IAnonymousFunctionOperation : IOperation
    {

        IMethodSymbol Symbol { get; }

        IBlockOperation Body { get; }
    }
    /// <summary>
    /// Represents creation of an object instance.
    /// <para>
    /// Current usage:
    ///  (1) C# new expression.
    ///  (2) VB New expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ObjectCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IObjectCreationOperation : IOperation
    {

        IMethodSymbol? Constructor { get; }

        IObjectOrCollectionInitializerOperation? Initializer { get; }

        ImmutableArray<IArgumentOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents a creation of a type parameter object, i.e. new T(), where T is a type parameter with new constraint.
    /// <para>
    /// Current usage:
    ///  (1) C# type parameter object creation expression.
    ///  (2) VB type parameter object creation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.TypeParameterObjectCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITypeParameterObjectCreationOperation : IOperation
    {

        IObjectOrCollectionInitializerOperation? Initializer { get; }
    }
    /// <summary>
    /// Represents the creation of an array instance.
    /// <para>
    /// Current usage:
    ///  (1) C# array creation expression.
    ///  (2) VB array creation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ArrayCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IArrayCreationOperation : IOperation
    {

        ImmutableArray<IOperation> DimensionSizes { get; }

        IArrayInitializerOperation? Initializer { get; }
    }
    /// <summary>
    /// Represents an implicit/explicit reference to an instance.
    /// <para>
    /// Current usage:
    ///  (1) C# this or base expression.
    ///  (2) VB Me, MyClass, or MyBase expression.
    ///  (3) C# object or collection or 'with' expression initializers.
    ///  (4) VB With statements, object or collection initializers.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.InstanceReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInstanceReferenceOperation : IOperation
    {

        InstanceReferenceKind ReferenceKind { get; }
    }
    /// <summary>
    /// Represents an operation that tests if a value is of a specific type.
    /// <para>
    /// Current usage:
    ///  (1) C# "is" operator expression.
    ///  (2) VB "TypeOf" and "TypeOf IsNot" expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.IsType"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IIsTypeOperation : IOperation
    {

        IOperation ValueOperand { get; }

        ITypeSymbol TypeOperand { get; }

        bool IsNegated { get; }
    }
    /// <summary>
    /// Represents an await operation.
    /// <para>
    /// Current usage:
    ///  (1) C# await expression.
    ///  (2) VB await expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Await"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IAwaitOperation : IOperation
    {

        IOperation Operation { get; }
    }
    /// <summary>
    /// Represents a base interface for assignments.
    /// <para>
    /// Current usage:
    ///  (1) C# simple, compound and deconstruction assignment expressions.
    ///  (2) VB simple and compound assignment expressions.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IAssignmentOperation : IOperation
    {

        IOperation Target { get; }

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents a simple assignment operation.
    /// <para>
    /// Current usage:
    ///  (1) C# simple assignment expression.
    ///  (2) VB simple assignment expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.SimpleAssignment"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISimpleAssignmentOperation : IAssignmentOperation
    {

        bool IsRef { get; }
    }
    /// <summary>
    /// Represents a compound assignment that mutates the target with the result of a binary operation.
    /// <para>
    /// Current usage:
    ///  (1) C# compound assignment expression.
    ///  (2) VB compound assignment expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.CompoundAssignment"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ICompoundAssignmentOperation : IAssignmentOperation
    {

        CommonConversion InConversion { get; }

        CommonConversion OutConversion { get; }

        BinaryOperatorKind OperatorKind { get; }

        bool IsLifted { get; }

        bool IsChecked { get; }

        IMethodSymbol? OperatorMethod { get; }
    }
    /// <summary>
    /// Represents a parenthesized operation.
    /// <para>
    /// Current usage:
    ///  (1) VB parenthesized expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Parenthesized"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IParenthesizedOperation : IOperation
    {

        IOperation Operand { get; }
    }
    /// <summary>
    /// Represents a binding of an event.
    /// <para>
    /// Current usage:
    ///  (1) C# event assignment expression.
    ///  (2) VB Add/Remove handler statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.EventAssignment"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IEventAssignmentOperation : IOperation
    {

        IOperation EventReference { get; }

        IOperation HandlerValue { get; }

        bool Adds { get; }
    }
    /// <summary>
    /// Represents a conditionally accessed operation. Note that <see cref="IConditionalAccessInstanceOperation" /> is used to refer to the value
    /// of <see cref="Operation" /> within <see cref="WhenNotNull" />.
    /// <para>
    /// Current usage:
    ///  (1) C# conditional access expression (? or ?. operator).
    ///  (2) VB conditional access expression (? or ?. operator).
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ConditionalAccess"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConditionalAccessOperation : IOperation
    {

        IOperation Operation { get; }

        IOperation WhenNotNull { get; }
    }
    /// <summary>
    /// Represents the value of a conditionally-accessed operation within <see cref="IConditionalAccessOperation.WhenNotNull" />.
    /// For a conditional access operation of the form <c>someExpr?.Member</c>, this operation is used as the InstanceReceiver for the right operation <c>Member</c>.
    /// See https://github.com/dotnet/roslyn/issues/21279#issuecomment-323153041 for more details.
    /// <para>
    /// Current usage:
    ///  (1) C# conditional access instance expression.
    ///  (2) VB conditional access instance expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ConditionalAccessInstance"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConditionalAccessInstanceOperation : IOperation
    {
    }
    /// <summary>
    /// Represents an interpolated string.
    /// <para>
    /// Current usage:
    ///  (1) C# interpolated string expression.
    ///  (2) VB interpolated string expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.InterpolatedString"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInterpolatedStringOperation : IOperation
    {

        ImmutableArray<IInterpolatedStringContentOperation> Parts { get; }
    }
    /// <summary>
    /// Represents a creation of anonymous object.
    /// <para>
    /// Current usage:
    ///  (1) C# "new { ... }" expression
    ///  (2) VB "New With { ... }" expression
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.AnonymousObjectCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IAnonymousObjectCreationOperation : IOperation
    {

        ImmutableArray<IOperation> Initializers { get; }
    }
    /// <summary>
    /// Represents an initialization for an object or collection creation.
    /// <para>
    /// Current usage:
    ///  (1) C# object or collection initializer expression.
    ///  (2) VB object or collection initializer expression.
    /// For example, object initializer "{ X = x }" within object creation "new Class() { X = x }" and
    /// collection initializer "{ x, y, 3 }" within collection creation "new MyList() { x, y, 3 }".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ObjectOrCollectionInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IObjectOrCollectionInitializerOperation : IOperation
    {

        ImmutableArray<IOperation> Initializers { get; }
    }
    /// <summary>
    /// Represents an initialization of member within an object initializer with a nested object or collection initializer.
    /// <para>
    /// Current usage:
    ///  (1) C# nested member initializer expression.
    ///   For example, given an object creation with initializer "new Class() { X = x, Y = { x, y, 3 }, Z = { X = z } }",
    ///   member initializers for Y and Z, i.e. "Y = { x, y, 3 }", and "Z = { X = z }" are nested member initializers represented by this operation.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.MemberInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IMemberInitializerOperation : IOperation
    {

        IOperation InitializedMember { get; }

        IObjectOrCollectionInitializerOperation Initializer { get; }
    }
    [Obsolete("ICollectionElementInitializerOperation has been replaced with " + nameof(IInvocationOperation) + " and " + nameof(IDynamicInvocationOperation), error: true)]
    public interface ICollectionElementInitializerOperation : IOperation
    {
        IMethodSymbol AddMethod { get; }
        ImmutableArray<IOperation> Arguments { get; }
        bool IsDynamic { get; }
    }

    /// <summary>
    /// Represents an operation that gets a string value for the <see cref="Argument" /> name.
    /// <para>
    /// Current usage:
    ///  (1) C# nameof expression.
    ///  (2) VB NameOf expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.NameOf"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface INameOfOperation : IOperation
    {

        IOperation Argument { get; }
    }
    /// <summary>
    /// Represents a tuple with one or more elements.
    /// <para>
    /// Current usage:
    ///  (1) C# tuple expression.
    ///  (2) VB tuple expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Tuple"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITupleOperation : IOperation
    {

        ImmutableArray<IOperation> Elements { get; }

        ITypeSymbol? NaturalType { get; }
    }
    /// <summary>
    /// Represents an object creation with a dynamically bound constructor.
    /// <para>
    /// Current usage:
    ///  (1) C# "new" expression with dynamic argument(s).
    ///  (2) VB late bound "New" expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DynamicObjectCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDynamicObjectCreationOperation : IOperation
    {

        IObjectOrCollectionInitializerOperation? Initializer { get; }

        ImmutableArray<IOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents a reference to a member of a class, struct, or module that is dynamically bound.
    /// <para>
    /// Current usage:
    ///  (1) C# dynamic member reference expression.
    ///  (2) VB late bound member reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DynamicMemberReference"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDynamicMemberReferenceOperation : IOperation
    {

        IOperation? Instance { get; }

        string MemberName { get; }

        ImmutableArray<ITypeSymbol> TypeArguments { get; }

        ITypeSymbol? ContainingType { get; }
    }
    /// <summary>
    /// Represents a invocation that is dynamically bound.
    /// <para>
    /// Current usage:
    ///  (1) C# dynamic invocation expression.
    ///  (2) C# dynamic collection element initializer.
    ///      For example, in the following collection initializer: <code>new C() { do1, do2, do3 }</code> where
    ///      the doX objects are of type dynamic, we'll have 3 <see cref="IDynamicInvocationOperation" /> with do1, do2, and
    ///      do3 as their arguments.
    ///  (3) VB late bound invocation expression.
    ///  (4) VB dynamic collection element initializer.
    ///      Similar to the C# example, <code>New C() From {do1, do2, do3}</code> will generate 3 <see cref="IDynamicInvocationOperation" />
    ///      nodes with do1, do2, and do3 as their arguments, respectively.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DynamicInvocation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDynamicInvocationOperation : IOperation
    {

        IOperation Operation { get; }

        ImmutableArray<IOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents an indexer access that is dynamically bound.
    /// <para>
    /// Current usage:
    ///  (1) C# dynamic indexer access expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DynamicIndexerAccess"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDynamicIndexerAccessOperation : IOperation
    {

        IOperation Operation { get; }

        ImmutableArray<IOperation> Arguments { get; }
    }
    /// <summary>
    /// Represents an unrolled/lowered query operation.
    /// For example, for a C# query expression "from x in set where x.Name != null select x.Name", the Operation tree has the following shape:
    ///   ITranslatedQueryExpression
    ///     IInvocationExpression ('Select' invocation for "select x.Name")
    ///       IInvocationExpression ('Where' invocation for "where x.Name != null")
    ///         IInvocationExpression ('From' invocation for "from x in set")
    /// <para>
    /// Current usage:
    ///  (1) C# query expression.
    ///  (2) VB query expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.TranslatedQuery"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITranslatedQueryOperation : IOperation
    {

        IOperation Operation { get; }
    }
    /// <summary>
    /// Represents a delegate creation. This is created whenever a new delegate is created.
    /// <para>
    /// Current usage:
    ///  (1) C# delegate creation expression.
    ///  (2) VB delegate creation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DelegateCreation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDelegateCreationOperation : IOperation
    {

        IOperation Target { get; }
    }
    /// <summary>
    /// Represents a default value operation.
    /// <para>
    /// Current usage:
    ///  (1) C# default value expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DefaultValue"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDefaultValueOperation : IOperation
    {
    }
    /// <summary>
    /// Represents an operation that gets <see cref="System.Type" /> for the given <see cref="TypeOperand" />.
    /// <para>
    /// Current usage:
    ///  (1) C# typeof expression.
    ///  (2) VB GetType expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.TypeOf"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITypeOfOperation : IOperation
    {

        ITypeSymbol TypeOperand { get; }
    }
    /// <summary>
    /// Represents an operation to compute the size of a given type.
    /// <para>
    /// Current usage:
    ///  (1) C# sizeof expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.SizeOf"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISizeOfOperation : IOperation
    {

        ITypeSymbol TypeOperand { get; }
    }
    /// <summary>
    /// Represents an operation that creates a pointer value by taking the address of a reference.
    /// <para>
    /// Current usage:
    ///  (1) C# address of expression
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.AddressOf"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IAddressOfOperation : IOperation
    {

        IOperation Reference { get; }
    }
    /// <summary>
    /// Represents an operation that tests if a value matches a specific pattern.
    /// <para>
    /// Current usage:
    ///  (1) C# is pattern expression. For example, "x is int i".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.IsPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IIsPatternOperation : IOperation
    {

        IOperation Value { get; }

        IPatternOperation Pattern { get; }
    }
    /// <summary>
    /// Represents an <see cref="OperationKind.Increment" /> or <see cref="OperationKind.Decrement" /> operation.
    /// Note that this operation is different from an <see cref="IUnaryOperation" /> as it mutates the <see cref="Target" />,
    /// while unary operator expression does not mutate it's operand.
    /// <para>
    /// Current usage:
    ///  (1) C# increment expression or decrement expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Increment"/></description></item>
    /// <item><description><see cref="OperationKind.Decrement"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IIncrementOrDecrementOperation : IOperation
    {

        bool IsPostfix { get; }

        bool IsLifted { get; }

        bool IsChecked { get; }

        IOperation Target { get; }

        IMethodSymbol? OperatorMethod { get; }
    }
    /// <summary>
    /// Represents an operation to throw an exception.
    /// <para>
    /// Current usage:
    ///  (1) C# throw expression.
    ///  (2) C# throw statement.
    ///  (2) VB Throw statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Throw"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IThrowOperation : IOperation
    {

        IOperation? Exception { get; }
    }
    /// <summary>
    /// Represents a assignment with a deconstruction.
    /// <para>
    /// Current usage:
    ///  (1) C# deconstruction assignment expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DeconstructionAssignment"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDeconstructionAssignmentOperation : IAssignmentOperation
    {
    }
    /// <summary>
    /// Represents a declaration expression operation. Unlike a regular variable declaration <see cref="IVariableDeclaratorOperation" /> and <see cref="IVariableDeclarationOperation" />, this operation represents an "expression" declaring a variable.
    /// <para>
    /// Current usage:
    ///  (1) C# declaration expression. For example,
    ///  (a) "var (x, y)" is a deconstruction declaration expression with variables x and y.
    ///  (b) "(var x, var y)" is a tuple expression with two declaration expressions.
    ///  (c) "M(out var x);" is an invocation expression with an out "var x" declaration expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DeclarationExpression"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDeclarationExpressionOperation : IOperation
    {

        IOperation Expression { get; }
    }
    /// <summary>
    /// Represents an argument value that has been omitted in an invocation.
    /// <para>
    /// Current usage:
    ///  (1) VB omitted argument in an invocation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.OmittedArgument"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IOmittedArgumentOperation : IOperation
    {
    }
    /// <summary>
    /// Represents an initializer for a field, property, parameter or a local variable declaration.
    /// <para>
    /// Current usage:
    ///  (1) C# field, property, parameter or local variable initializer.
    ///  (2) VB field(s), property, parameter or local variable initializer.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISymbolInitializerOperation : IOperation
    {

        ImmutableArray<ILocalSymbol> Locals { get; }

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents an initialization of a field.
    /// <para>
    /// Current usage:
    ///  (1) C# field initializer with equals value clause.
    ///  (2) VB field(s) initializer with equals value clause or AsNew clause. Multiple fields can be initialized with AsNew clause in VB.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.FieldInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IFieldInitializerOperation : ISymbolInitializerOperation
    {

        ImmutableArray<IFieldSymbol> InitializedFields { get; }
    }
    /// <summary>
    /// Represents an initialization of a local variable.
    /// <para>
    /// Current usage:
    ///  (1) C# local variable initializer with equals value clause.
    ///  (2) VB local variable initializer with equals value clause or AsNew clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.VariableInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IVariableInitializerOperation : ISymbolInitializerOperation
    {
    }
    /// <summary>
    /// Represents an initialization of a property.
    /// <para>
    /// Current usage:
    ///  (1) C# property initializer with equals value clause.
    ///  (2) VB property initializer with equals value clause or AsNew clause. Multiple properties can be initialized with 'WithEvents' declaration with AsNew clause in VB.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.PropertyInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IPropertyInitializerOperation : ISymbolInitializerOperation
    {

        ImmutableArray<IPropertySymbol> InitializedProperties { get; }
    }
    /// <summary>
    /// Represents an initialization of a parameter at the point of declaration.
    /// <para>
    /// Current usage:
    ///  (1) C# parameter initializer with equals value clause.
    ///  (2) VB parameter initializer with equals value clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ParameterInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IParameterInitializerOperation : ISymbolInitializerOperation
    {

        IParameterSymbol Parameter { get; }
    }
    /// <summary>
    /// Represents the initialization of an array instance.
    /// <para>
    /// Current usage:
    ///  (1) C# array initializer.
    ///  (2) VB array initializer.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ArrayInitializer"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IArrayInitializerOperation : IOperation
    {

        ImmutableArray<IOperation> ElementValues { get; }
    }
    /// <summary>
    /// Represents a single variable declarator and initializer.
    /// </summary>
    /// <para>
    /// Current Usage:
    ///   (1) C# variable declarator
    ///   (2) C# catch variable declaration
    ///   (3) VB single variable declaration
    ///   (4) VB catch variable declaration
    /// </para>
    /// <remarks>
    /// In VB, the initializer for this node is only ever used for explicit array bounds initializers. This node corresponds to
    /// the VariableDeclaratorSyntax in C# and the ModifiedIdentifierSyntax in VB.
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.VariableDeclarator"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IVariableDeclaratorOperation : IOperation
    {

        ILocalSymbol Symbol { get; }

        IVariableInitializerOperation? Initializer { get; }

        ImmutableArray<IOperation> IgnoredArguments { get; }
    }
    /// <summary>
    /// Represents a declarator that declares multiple individual variables.
    /// </summary>
    /// <para>
    /// Current Usage:
    ///   (1) C# VariableDeclaration
    ///   (2) C# fixed declarations
    ///   (3) VB Dim statement declaration groups
    ///   (4) VB Using statement variable declarations
    /// </para>
    /// <remarks>
    /// The initializer of this node is applied to all individual declarations in <see cref="Declarators" />. There cannot
    /// be initializers in both locations except in invalid code scenarios.
    /// In C#, this node will never have an initializer.
    /// This corresponds to the VariableDeclarationSyntax in C#, and the VariableDeclaratorSyntax in Visual Basic.
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.VariableDeclaration"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IVariableDeclarationOperation : IOperation
    {

        ImmutableArray<IVariableDeclaratorOperation> Declarators { get; }

        IVariableInitializerOperation? Initializer { get; }

        ImmutableArray<IOperation> IgnoredDimensions { get; }
    }
    /// <summary>
    /// Represents an argument to a method invocation.
    /// <para>
    /// Current usage:
    ///  (1) C# argument to an invocation expression, object creation expression, etc.
    ///  (2) VB argument to an invocation expression, object creation expression, etc.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Argument"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IArgumentOperation : IOperation
    {

        ArgumentKind ArgumentKind { get; }

        IParameterSymbol? Parameter { get; }

        IOperation Value { get; }

        CommonConversion InConversion { get; }

        CommonConversion OutConversion { get; }
    }
    /// <summary>
    /// Represents a catch clause.
    /// <para>
    /// Current usage:
    ///  (1) C# catch clause.
    ///  (2) VB Catch clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.CatchClause"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ICatchClauseOperation : IOperation
    {

        IOperation? ExceptionDeclarationOrExpression { get; }

        ITypeSymbol ExceptionType { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }

        IOperation? Filter { get; }

        IBlockOperation Handler { get; }
    }
    /// <summary>
    /// Represents a switch case section with one or more case clauses to match and one or more operations to execute within the section.
    /// <para>
    /// Current usage:
    ///  (1) C# switch section for one or more case clause and set of statements to execute.
    ///  (2) VB case block with a case statement for one or more case clause and set of statements to execute.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.SwitchCase"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISwitchCaseOperation : IOperation
    {

        ImmutableArray<ICaseClauseOperation> Clauses { get; }

        ImmutableArray<IOperation> Body { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }
    }
    /// <summary>
    /// Represents a case clause.
    /// <para>
    /// Current usage:
    ///  (1) C# case clause.
    ///  (2) VB Case clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ICaseClauseOperation : IOperation
    {

        CaseKind CaseKind { get; }

        ILabelSymbol? Label { get; }
    }
    /// <summary>
    /// Represents a default case clause.
    /// <para>
    /// Current usage:
    ///  (1) C# default clause.
    ///  (2) VB Case Else clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDefaultCaseClauseOperation : ICaseClauseOperation
    {
    }
    /// <summary>
    /// Represents a case clause with a pattern and an optional guard operation.
    /// <para>
    /// Current usage:
    ///  (1) C# pattern case clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IPatternCaseClauseOperation : ICaseClauseOperation
    {

        new ILabelSymbol Label { get; }

        IPatternOperation Pattern { get; }

        IOperation? Guard { get; }
    }
    /// <summary>
    /// Represents a case clause with range of values for comparison.
    /// <para>
    /// Current usage:
    ///  (1) VB range case clause of the form "Case x To y".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRangeCaseClauseOperation : ICaseClauseOperation
    {

        IOperation MinimumValue { get; }

        IOperation MaximumValue { get; }
    }
    /// <summary>
    /// Represents a case clause with custom relational operator for comparison.
    /// <para>
    /// Current usage:
    ///  (1) VB relational case clause of the form "Case Is op x".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRelationalCaseClauseOperation : ICaseClauseOperation
    {

        IOperation Value { get; }

        BinaryOperatorKind Relation { get; }
    }
    /// <summary>
    /// Represents a case clause with a single value for comparison.
    /// <para>
    /// Current usage:
    ///  (1) C# case clause of the form "case x"
    ///  (2) VB case clause of the form "Case x".
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISingleValueCaseClauseOperation : ICaseClauseOperation
    {

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents a constituent part of an interpolated string.
    /// <para>
    /// Current usage:
    ///  (1) C# interpolated string content.
    ///  (2) VB interpolated string content.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInterpolatedStringContentOperation : IOperation
    {
    }
    /// <summary>
    /// Represents a constituent string literal part of an interpolated string operation.
    /// <para>
    /// Current usage:
    ///  (1) C# interpolated string text.
    ///  (2) VB interpolated string text.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.InterpolatedStringText"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInterpolatedStringTextOperation : IInterpolatedStringContentOperation
    {

        IOperation Text { get; }
    }
    /// <summary>
    /// Represents a constituent interpolation part of an interpolated string operation.
    /// <para>
    /// Current usage:
    ///  (1) C# interpolation part.
    ///  (2) VB interpolation part.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Interpolation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IInterpolationOperation : IInterpolatedStringContentOperation
    {

        IOperation Expression { get; }

        IOperation? Alignment { get; }

        IOperation? FormatString { get; }
    }
    /// <summary>
    /// Represents a pattern matching operation.
    /// <para>
    /// Current usage:
    ///  (1) C# pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IPatternOperation : IOperation
    {

        ITypeSymbol InputType { get; }

        ITypeSymbol NarrowedType { get; }
    }
    /// <summary>
    /// Represents a pattern with a constant value.
    /// <para>
    /// Current usage:
    ///  (1) C# constant pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ConstantPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConstantPatternOperation : IPatternOperation
    {

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents a pattern that declares a symbol.
    /// <para>
    /// Current usage:
    ///  (1) C# declaration pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DeclarationPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDeclarationPatternOperation : IPatternOperation
    {

        ITypeSymbol? MatchedType { get; }

        bool MatchesNull { get; }

        ISymbol? DeclaredSymbol { get; }
    }
    /// <summary>
    /// Represents a comparison of two operands that returns a bool type.
    /// <para>
    /// Current usage:
    ///  (1) C# tuple binary operator expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.TupleBinary"/></description></item>
    /// <item><description><see cref="OperationKind.TupleBinaryOperator"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITupleBinaryOperation : IOperation
    {

        BinaryOperatorKind OperatorKind { get; }

        IOperation LeftOperand { get; }

        IOperation RightOperand { get; }
    }
    /// <summary>
    /// Represents a method body operation.
    /// <para>
    /// Current usage:
    ///  (1) C# method body
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IMethodBodyBaseOperation : IOperation
    {

        IBlockOperation? BlockBody { get; }

        IBlockOperation? ExpressionBody { get; }
    }
    /// <summary>
    /// Represents a method body operation.
    /// <para>
    /// Current usage:
    ///  (1) C# method body for non-constructor
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.MethodBody"/></description></item>
    /// <item><description><see cref="OperationKind.MethodBodyOperation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IMethodBodyOperation : IMethodBodyBaseOperation
    {
    }
    /// <summary>
    /// Represents a constructor method body operation.
    /// <para>
    /// Current usage:
    ///  (1) C# method body for constructor declaration
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ConstructorBody"/></description></item>
    /// <item><description><see cref="OperationKind.ConstructorBodyOperation"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IConstructorBodyOperation : IMethodBodyBaseOperation
    {

        ImmutableArray<ILocalSymbol> Locals { get; }

        IOperation? Initializer { get; }
    }
    /// <summary>
    /// Represents a discard operation.
    /// <para>
    /// Current usage: C# discard expressions
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Discard"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDiscardOperation : IOperation
    {

        IDiscardSymbol DiscardSymbol { get; }
    }
    /// <summary>
    /// Represents a coalesce assignment operation with a target and a conditionally-evaluated value:
    /// (1) <see cref="IAssignmentOperation.Target" /> is evaluated for null. If it is null, <see cref="IAssignmentOperation.Value" /> is evaluated and assigned to target.
    /// (2) <see cref="IAssignmentOperation.Value" /> is conditionally evaluated if <see cref="IAssignmentOperation.Target" /> is null, and the result is assigned into <see cref="IAssignmentOperation.Target" />.
    /// The result of the entire expression is<see cref="IAssignmentOperation.Target" />, which is only evaluated once.
    /// <para>
    /// Current usage:
    ///  (1) C# null-coalescing assignment operation <code>Target ??= Value</code>.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.CoalesceAssignment"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ICoalesceAssignmentOperation : IAssignmentOperation
    {
    }
    /// <summary>
    /// Represents a range operation.
    /// <para>
    /// Current usage:
    ///  (1) C# range expressions
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.Range"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRangeOperation : IOperation
    {

        IOperation? LeftOperand { get; }

        IOperation? RightOperand { get; }

        bool IsLifted { get; }

        IMethodSymbol? Method { get; }
    }
    /// <summary>
    /// Represents the ReDim operation to re-allocate storage space for array variables.
    /// <para>
    /// Current usage:
    ///  (1) VB ReDim statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ReDim"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IReDimOperation : IOperation
    {

        ImmutableArray<IReDimClauseOperation> Clauses { get; }

        bool Preserve { get; }
    }
    /// <summary>
    /// Represents an individual clause of an <see cref="IReDimOperation" /> to re-allocate storage space for a single array variable.
    /// <para>
    /// Current usage:
    ///  (1) VB ReDim clause.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.ReDimClause"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IReDimClauseOperation : IOperation
    {

        IOperation Operand { get; }

        ImmutableArray<IOperation> DimensionSizes { get; }
    }
    /// <summary>
    /// Represents a C# recursive pattern.
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.RecursivePattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRecursivePatternOperation : IPatternOperation
    {

        ITypeSymbol MatchedType { get; }

        ISymbol? DeconstructSymbol { get; }

        ImmutableArray<IPatternOperation> DeconstructionSubpatterns { get; }

        ImmutableArray<IPropertySubpatternOperation> PropertySubpatterns { get; }

        ISymbol? DeclaredSymbol { get; }
    }
    /// <summary>
    /// Represents a discard pattern.
    /// <para>
    /// Current usage: C# discard pattern
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.DiscardPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IDiscardPatternOperation : IPatternOperation
    {
    }
    /// <summary>
    /// Represents a switch expression.
    /// <para>
    /// Current usage:
    ///  (1) C# switch expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.SwitchExpression"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISwitchExpressionOperation : IOperation
    {

        IOperation Value { get; }

        ImmutableArray<ISwitchExpressionArmOperation> Arms { get; }
    }
    /// <summary>
    /// Represents one arm of a switch expression.
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.SwitchExpressionArm"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ISwitchExpressionArmOperation : IOperation
    {

        IPatternOperation Pattern { get; }

        IOperation? Guard { get; }

        IOperation Value { get; }

        ImmutableArray<ILocalSymbol> Locals { get; }
    }
    /// <summary>
    /// Represents an element of a property subpattern, which identifies a member to be matched and the
    /// pattern to match it against.
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.PropertySubpattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IPropertySubpatternOperation : IOperation
    {

        IOperation Member { get; }

        IPatternOperation Pattern { get; }
    }
    /// <summary>
    /// Represents a standalone VB query Aggregate operation with more than one item in Into clause.
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface IAggregateQueryOperation : IOperation
    {

        IOperation Group { get; }

        IOperation Aggregation { get; }
    }
    /// <summary>
    /// Represents a C# fixed statement.
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface IFixedOperation : IOperation
    {

        ImmutableArray<ILocalSymbol> Locals { get; }

        IVariableDeclarationGroupOperation Variables { get; }

        IOperation Body { get; }
    }
    /// <summary>
    /// Represents a creation of an instance of a NoPia interface, i.e. new I(), where I is an embedded NoPia interface.
    /// <para>
    /// Current usage:
    ///  (1) C# NoPia interface instance creation expression.
    ///  (2) VB NoPia interface instance creation expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface INoPiaObjectCreationOperation : IOperation
    {

        IObjectOrCollectionInitializerOperation? Initializer { get; }
    }
    /// <summary>
    /// Represents a general placeholder when no more specific kind of placeholder is available.
    /// A placeholder is an expression whose meaning is inferred from context.
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface IPlaceholderOperation : IOperation
    {

        PlaceholderKind PlaceholderKind { get; }
    }
    /// <summary>
    /// Represents a reference through a pointer.
    /// <para>
    /// Current usage:
    ///  (1) C# pointer indirection reference expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface IPointerIndirectionReferenceOperation : IOperation
    {

        IOperation Pointer { get; }
    }
    /// <summary>
    /// Represents a <see cref="Body" /> of operations that are executed with implicit reference to the <see cref="Value" /> for member references.
    /// <para>
    /// Current usage:
    ///  (1) VB With statement.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    internal interface IWithStatementOperation : IOperation
    {

        IOperation Body { get; }

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents using variable declaration, with scope spanning across the parent <see cref="IBlockOperation" />.
    /// <para>
    /// Current Usage:
    ///  (1) C# using declaration
    ///  (1) C# asynchronous using declaration
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.UsingDeclaration"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IUsingDeclarationOperation : IOperation
    {

        IVariableDeclarationGroupOperation DeclarationGroup { get; }

        bool IsAsynchronous { get; }
    }
    /// <summary>
    /// Represents a negated pattern.
    /// <para>
    ///   Current usage:
    ///   (1) C# negated pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.NegatedPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface INegatedPatternOperation : IPatternOperation
    {

        IPatternOperation Pattern { get; }
    }
    /// <summary>
    /// Represents a binary ("and" or "or") pattern.
    /// <para>
    ///   Current usage:
    ///   (1) C# "and" and "or" patterns.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.BinaryPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IBinaryPatternOperation : IPatternOperation
    {

        BinaryOperatorKind OperatorKind { get; }

        IPatternOperation LeftPattern { get; }

        IPatternOperation RightPattern { get; }
    }
    /// <summary>
    /// Represents a pattern comparing the input with a given type.
    /// <para>
    ///   Current usage:
    ///   (1) C# type pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.TypePattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface ITypePatternOperation : IPatternOperation
    {

        ITypeSymbol MatchedType { get; }
    }
    /// <summary>
    /// Represents a pattern comparing the input with a constant value using a relational operator.
    /// <para>
    /// Current usage:
    ///  (1) C# relational pattern.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.RelationalPattern"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IRelationalPatternOperation : IPatternOperation
    {

        BinaryOperatorKind OperatorKind { get; }

        IOperation Value { get; }
    }
    /// <summary>
    /// Represents cloning of an object instance.
    /// <para>
    ///   Current usage:
    ///   (1) C# with expression.
    /// </para>
    /// </summary>
    /// <remarks>
    /// <para>This node is associated with the following operation kinds:</para>
    /// <list type="bullet">
    /// <item><description><see cref="OperationKind.With"/></description></item>
    /// </list>
    /// <para>This interface is reserved for implementation by its associated APIs. We reserve the right to
    /// change it in the future.</para>
    /// </remarks>
    public interface IWithOperation : IOperation
    {

        IOperation Operand { get; }

        IMethodSymbol? CloneMethod { get; }

        IObjectOrCollectionInitializerOperation Initializer { get; }
    }
    internal sealed partial class BlockOperation : Operation, IBlockOperation
    {
        internal BlockOperation(ImmutableArray<IOperation> operations, ImmutableArray<ILocalSymbol> locals, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_137087_137100_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 136901, 137237);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 137146, 137196);

                Operations = f_306_137159_137195(operations, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 137210, 137226);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 136901, 137237);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 136901, 137237);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 136901, 137237);
            }
        }

        public ImmutableArray<IOperation> Operations { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 137446, 137662);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 137449, 137662);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 137495, 137525) || true) && (index < f_306_137508_137518().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 137495, 137525) || true)
                        => f_306_137550_137560()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 137586, 137646) && DynAbs.Tracing.TraceSender.Expression_True(306, 137586, 137646))
    => throw f_306_137597_137646((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 137446, 137662);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 137446, 137662);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 137446, 137662);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_137508_137518()
            {
                var return_v = Operations;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 137508, 137518);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_137550_137560()
            {
                var return_v = Operations;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 137550, 137560);
                return return_v;
            }


            System.Exception
            f_306_137597_137646((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 137597, 137646);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Operations.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Operations.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 138383, 138390);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 138386, 138390);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 138383, 138390);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138383, 138390);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138383, 138390);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 138457, 138464);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 138460, 138464);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 138457, 138464);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138457, 138464);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138457, 138464);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 138510, 138532);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 138513, 138532);
                    return OperationKind.Block; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 138510, 138532);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138510, 138532);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138510, 138532);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 138597, 138624);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 138600, 138624);
                f_306_138600_138624(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 138597, 138624);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138597, 138624);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138597, 138624);
            }

            int
            f_306_138600_138624(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.BlockOperation
            operation)
            {
                this_param.VisitBlock((Microsoft.CodeAnalysis.Operations.IBlockOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 138600, 138624);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 138777, 138814);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 138780, 138814);
                return f_306_138780_138814(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 138777, 138814);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138777, 138814);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138777, 138814);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_138780_138814(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.BlockOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitBlock((Microsoft.CodeAnalysis.Operations.IBlockOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 138780, 138814);
                return return_v;
            }

        }

        static BlockOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 136811, 138822);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 136811, 138822);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 136811, 138822);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 136811, 138822);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_137159_137195(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.BlockOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 137159, 137195);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_137087_137100_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 136901, 137237);
            return return_v;
        }

    }
    internal sealed partial class VariableDeclarationGroupOperation : Operation, IVariableDeclarationGroupOperation
    {
        internal VariableDeclarationGroupOperation(ImmutableArray<IVariableDeclarationOperation> declarations, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_139145_139158_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 138956, 139269);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 139204, 139258);

                Declarations = f_306_139219_139257(declarations, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 138956, 139269);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 138956, 139269);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138956, 139269);
            }
        }

        public ImmutableArray<IVariableDeclarationOperation> Declarations { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 139438, 139658);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 139441, 139658);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 139487, 139519) || true) && (index < f_306_139500_139512().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 139487, 139519) || true)
                        => f_306_139544_139556()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 139582, 139642) && DynAbs.Tracing.TraceSender.Expression_True(306, 139582, 139642))
    => throw f_306_139593_139642((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 139438, 139658);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 139438, 139658);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 139438, 139658);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
            f_306_139500_139512()
            {
                var return_v = Declarations;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 139500, 139512);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
            f_306_139544_139556()
            {
                var return_v = Declarations;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 139544, 139556);
                return return_v;
            }


            System.Exception
            f_306_139593_139642((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 139593, 139642);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Declarations.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Declarations.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 140383, 140390);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 140386, 140390);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 140383, 140390);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140383, 140390);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140383, 140390);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 140457, 140464);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 140460, 140464);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 140457, 140464);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140457, 140464);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140457, 140464);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 140510, 140551);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 140513, 140551);
                    return OperationKind.VariableDeclarationGroup; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 140510, 140551);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140510, 140551);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140510, 140551);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 140616, 140662);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 140619, 140662);
                f_306_140619_140662(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 140616, 140662);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140616, 140662);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140616, 140662);
            }

            int
            f_306_140619_140662(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
            operation)
            {
                this_param.VisitVariableDeclarationGroup((Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 140619, 140662);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 140815, 140871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 140818, 140871);
                return f_306_140818_140871(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 140815, 140871);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140815, 140871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140815, 140871);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_140818_140871(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitVariableDeclarationGroup((Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 140818, 140871);
                return return_v;
            }

        }

        static VariableDeclarationGroupOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 138828, 140879);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 138828, 140879);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 138828, 140879);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 138828, 140879);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
        f_306_139219_139257(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
        operations, Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 139219, 139257);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_139145_139158_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 138956, 139269);
            return return_v;
        }

    }
    internal sealed partial class SwitchOperation : Operation, ISwitchOperation
    {
        internal SwitchOperation(ImmutableArray<ILocalSymbol> locals, IOperation value, ImmutableArray<ISwitchCaseOperation> cases, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_141211_141224_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 140977, 141441);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141512, 141544);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141622, 141660);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141270, 141286);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141300, 141340);

                Value = f_306_141308_141339(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141354, 141394);

                Cases = f_306_141362_141393(cases, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141408, 141430);

                ExitLabel = exitLabel;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 140977, 141441);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 140977, 141441);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140977, 141441);
            }
        }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IOperation Value { get; }

        public ImmutableArray<ISwitchCaseOperation> Cases { get; }

        public ILabelSymbol ExitLabel { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 141745, 142020);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141748, 142020);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141794, 141812) || true) && (f_306_141799_141804() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 141794, 141812) || true)
                        => f_306_141837_141842(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141863, 141888) || true) && (index < f_306_141876_141881().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 141863, 141888) || true)
                        => f_306_141913_141918()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 141944, 142004) && DynAbs.Tracing.TraceSender.Expression_True(306, 141944, 142004))
    => throw f_306_141955_142004((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 141745, 142020);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 141745, 142020);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 141745, 142020);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_141799_141804()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 141799, 141804);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_141837_141842()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 141837, 141842);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
            f_306_141876_141881()
            {
                var return_v = Cases;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 141876, 141881);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
            f_306_141913_141918()
            {
                var return_v = Cases;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 141913, 141918);
                return return_v;
            }


            System.Exception
            f_306_141955_142004((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 141955, 142004);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Cases.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Cases.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 142856, 142863);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 142859, 142863);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 142856, 142863);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 142856, 142863);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 142856, 142863);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 142930, 142937);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 142933, 142937);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 142930, 142937);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 142930, 142937);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 142930, 142937);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 142983, 143006);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 142986, 143006);
                    return OperationKind.Switch; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 142983, 143006);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 142983, 143006);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 142983, 143006);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 143071, 143099);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143074, 143099);
                f_306_143074_143099(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 143071, 143099);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 143071, 143099);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 143071, 143099);
            }

            int
            f_306_143074_143099(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SwitchOperation
            operation)
            {
                this_param.VisitSwitch((Microsoft.CodeAnalysis.Operations.ISwitchOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 143074, 143099);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 143252, 143290);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143255, 143290);
                return f_306_143255_143290(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 143252, 143290);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 143252, 143290);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 143252, 143290);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_143255_143290(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SwitchOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSwitch((Microsoft.CodeAnalysis.Operations.ISwitchOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 143255, 143290);
                return return_v;
            }

        }

        static SwitchOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 140885, 143298);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 140885, 143298);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 140885, 143298);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 140885, 143298);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_141308_141339(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.SwitchOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 141308, 141339);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
        f_306_141362_141393(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
        operations, Microsoft.CodeAnalysis.Operations.SwitchOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 141362, 141393);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_141211_141224_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 140977, 141441);
            return return_v;
        }

    }
    internal abstract partial class BaseLoopOperation : Operation, ILoopOperation
    {
        protected BaseLoopOperation(IOperation body, ImmutableArray<ILocalSymbol> locals, ILabelSymbol continueLabel, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_143618_143631_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 143398, 143836);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143898, 143929);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144000, 144042);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144052, 144090);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143677, 143715);

                Body = f_306_143684_143714(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143729, 143745);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143759, 143789);

                ContinueLabel = continueLabel;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 143803, 143825);

                ExitLabel = exitLabel;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 143398, 143836);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 143398, 143836);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 143398, 143836);
            }
        }

        public abstract LoopKind LoopKind { get; }

        public IOperation Body { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public ILabelSymbol ContinueLabel { get; }

        public ILabelSymbol ExitLabel { get; }

        static BaseLoopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 143304, 144097);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 143304, 144097);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 143304, 144097);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 143304, 144097);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_143684_143714(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BaseLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 143684, 143714);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_143618_143631_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 143398, 143836);
            return return_v;
        }

    }
    internal sealed partial class ForEachLoopOperation : BaseLoopOperation, IForEachLoopOperation
    {
        internal ForEachLoopOperation(IOperation loopControlVariable, IOperation collection, ImmutableArray<IOperation> nextVariables, ForEachLoopOperationInfo? info, bool isAsynchronous, IOperation body, ImmutableArray<ILocalSymbol> locals, ILabelSymbol continueLabel, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_144585_144589_C(body), locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 144213, 144969);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144979, 145025);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145035, 145072);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145148, 145194);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145204, 145239);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144684, 144752);

                LoopControlVariable = f_306_144706_144751(loopControlVariable, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144766, 144816);

                Collection = f_306_144779_144815(collection, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144830, 144886);

                NextVariables = f_306_144846_144885(nextVariables, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144900, 144912);

                Info = info;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 144926, 144958);

                IsAsynchronous = isAsynchronous;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 144213, 144969);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 144213, 144969);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 144213, 144969);
            }
        }

        public IOperation LoopControlVariable { get; }

        public IOperation Collection { get; }

        public ImmutableArray<IOperation> NextVariables { get; }

        public ForEachLoopOperationInfo? Info { get; }

        public bool IsAsynchronous { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 145324, 145789);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145327, 145789);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145373, 145396) || true) && (f_306_145378_145388() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 145373, 145396) || true)
                        => f_306_145421_145431(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145452, 145484) || true) && (f_306_145457_145476() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 145452, 145484) || true)
                        => f_306_145509_145528(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145549, 145566) || true) && (f_306_145554_145558() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 145549, 145566) || true)
                        => f_306_145591_145595(),
                    3 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145616, 145649) || true) && (index < f_306_145629_145642().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 145616, 145649) || true)
                        => f_306_145674_145687()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 145713, 145773) && DynAbs.Tracing.TraceSender.Expression_True(306, 145713, 145773))
    => throw f_306_145724_145773((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 145324, 145789);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 145324, 145789);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 145324, 145789);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_145378_145388()
            {
                var return_v = Collection;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145378, 145388);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_145421_145431()
            {
                var return_v = Collection;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145421, 145431);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_145457_145476()
            {
                var return_v = LoopControlVariable;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145457, 145476);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_145509_145528()
            {
                var return_v = LoopControlVariable;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145509, 145528);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_145554_145558()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145554, 145558);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_145591_145595()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145591, 145595);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_145629_145642()
            {
                var return_v = NextVariables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145629, 145642);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_145674_145687()
            {
                var return_v = NextVariables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 145674, 145687);
                return return_v;
            }


            System.Exception
            f_306_145724_145773((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 145724, 145773);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Collection != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (LoopControlVariable != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (Body != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                    if (!NextVariables.IsEmpty) return (true, 3, 0);
                    else goto case 3;
                case 3 when previousIndex + 1 < NextVariables.Length:
                    return (true, 3, previousIndex + 1);
                case 3:
                case 4:
                    return (false, 4, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 146909, 146916);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 146912, 146916);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 146909, 146916);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 146909, 146916);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 146909, 146916);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 146983, 146990);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 146986, 146990);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 146983, 146990);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 146983, 146990);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 146983, 146990);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 147036, 147057);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 147039, 147057);
                    return OperationKind.Loop; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 147036, 147057);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 147036, 147057);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 147036, 147057);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 147122, 147155);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 147125, 147155);
                f_306_147125_147155(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 147122, 147155);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 147122, 147155);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 147122, 147155);
            }

            int
            f_306_147125_147155(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
            operation)
            {
                this_param.VisitForEachLoop((Microsoft.CodeAnalysis.Operations.IForEachLoopOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 147125, 147155);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 147308, 147351);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 147311, 147351);
                return f_306_147311_147351(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 147308, 147351);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 147308, 147351);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 147308, 147351);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_147311_147351(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitForEachLoop((Microsoft.CodeAnalysis.Operations.IForEachLoopOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 147311, 147351);
                return return_v;
            }

        }

        static ForEachLoopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 144103, 147359);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 144103, 147359);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 144103, 147359);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 144103, 147359);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_144706_144751(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 144706, 144751);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_144779_144815(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 144779, 144815);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_144846_144885(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 144846, 144885);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation
        f_306_144585_144589_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 144213, 144969);
            return return_v;
        }

    }
    internal sealed partial class ForLoopOperation : BaseLoopOperation, IForLoopOperation
    {
        internal ForLoopOperation(ImmutableArray<IOperation> before, ImmutableArray<ILocalSymbol> conditionLocals, IOperation? condition, ImmutableArray<IOperation> atLoopBottom, IOperation body, ImmutableArray<ILocalSymbol> locals, ILabelSymbol continueLabel, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_147830_147834_C(body), locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 147467, 148160);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148299, 148336);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 147929, 147971);

                Before = f_306_147938_147970(before, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 147985, 148019);

                ConditionLocals = conditionLocals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148033, 148081);

                Condition = f_306_148045_148080(condition, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148095, 148149);

                AtLoopBottom = f_306_148110_148148(atLoopBottom, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 147467, 148160);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 147467, 148160);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 147467, 148160);
            }
        }

        public ImmutableArray<IOperation> Before { get; }

        public ImmutableArray<ILocalSymbol> ConditionLocals { get; }

        public IOperation? Condition { get; }

        public ImmutableArray<IOperation> AtLoopBottom { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 148486, 148935);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148489, 148935);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148535, 148561) || true) && (index < f_306_148548_148554().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 148535, 148561) || true)
                        => f_306_148586_148592()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148620, 148642) || true) && (f_306_148625_148634() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 148620, 148642) || true)
                        => f_306_148667_148676(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148697, 148714) || true) && (f_306_148702_148706() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 148697, 148714) || true)
                        => f_306_148739_148743(),
                    3 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148764, 148796) || true) && (index < f_306_148777_148789().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 148764, 148796) || true)
                        => f_306_148821_148833()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 148859, 148919) && DynAbs.Tracing.TraceSender.Expression_True(306, 148859, 148919))
    => throw f_306_148870_148919((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 148486, 148935);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 148486, 148935);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 148486, 148935);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_148548_148554()
            {
                var return_v = Before;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148548, 148554);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_148586_148592()
            {
                var return_v = Before;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148586, 148592);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_148625_148634()
            {
                var return_v = Condition;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148625, 148634);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_148667_148676()
            {
                var return_v = Condition;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148667, 148676);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_148702_148706()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148702, 148706);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_148739_148743()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148739, 148743);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_148777_148789()
            {
                var return_v = AtLoopBottom;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148777, 148789);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_148821_148833()
            {
                var return_v = AtLoopBottom;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 148821, 148833);
                return return_v;
            }


            System.Exception
            f_306_148870_148919((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 148870, 148919);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Before.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Before.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (Condition != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (Body != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                    if (!AtLoopBottom.IsEmpty) return (true, 3, 0);
                    else goto case 3;
                case 3 when previousIndex + 1 < AtLoopBottom.Length:
                    return (true, 3, previousIndex + 1);
                case 3:
                case 4:
                    return (false, 4, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 150162, 150169);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 150165, 150169);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 150162, 150169);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150162, 150169);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150162, 150169);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 150236, 150243);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 150239, 150243);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 150236, 150243);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150236, 150243);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150236, 150243);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 150289, 150310);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 150292, 150310);
                    return OperationKind.Loop; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 150289, 150310);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150289, 150310);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150289, 150310);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 150375, 150404);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 150378, 150404);
                f_306_150378_150404(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 150375, 150404);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150375, 150404);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150375, 150404);
            }

            int
            f_306_150378_150404(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ForLoopOperation
            operation)
            {
                this_param.VisitForLoop((Microsoft.CodeAnalysis.Operations.IForLoopOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 150378, 150404);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 150557, 150596);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 150560, 150596);
                return f_306_150560_150596(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 150557, 150596);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150557, 150596);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150557, 150596);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_150560_150596(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ForLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitForLoop((Microsoft.CodeAnalysis.Operations.IForLoopOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 150560, 150596);
                return return_v;
            }

        }

        static ForLoopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 147365, 150604);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 147365, 150604);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 147365, 150604);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 147365, 150604);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_147938_147970(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ForLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 147938, 147970);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_148045_148080(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.ForLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 148045, 148080);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_148110_148148(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ForLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 148110, 148148);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation
        f_306_147830_147834_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 147467, 148160);
            return return_v;
        }

    }
    internal sealed partial class ForToLoopOperation : BaseLoopOperation, IForToLoopOperation
    {
        internal ForToLoopOperation(IOperation loopControlVariable, IOperation initialValue, IOperation limitValue, IOperation stepValue, bool isChecked, ImmutableArray<IOperation> nextVariables, (ILocalSymbol LoopObject, ForToLoopOperationUserDefinedInfo UserDefinedInfo) info, IOperation body, ImmutableArray<ILocalSymbol> locals, ILabelSymbol continueLabel, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_151179_151183_C(body), locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 150716, 151683);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151693, 151739);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151749, 151788);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151798, 151835);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151845, 151881);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151891, 151921);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151278, 151346);

                LoopControlVariable = f_306_151300_151345(loopControlVariable, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151360, 151414);

                InitialValue = f_306_151375_151413(initialValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151428, 151478);

                LimitValue = f_306_151441_151477(limitValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151492, 151540);

                StepValue = f_306_151504_151539(stepValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151554, 151576);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151590, 151646);

                NextVariables = f_306_151606_151645(nextVariables, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 151660, 151672);

                Info = info;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 150716, 151683);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 150716, 151683);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150716, 151683);
            }
        }

        public IOperation LoopControlVariable { get; }

        public IOperation InitialValue { get; }

        public IOperation LimitValue { get; }

        public IOperation StepValue { get; }

        public bool IsChecked { get; }

        public ImmutableArray<IOperation> NextVariables { get; }

        public (ILocalSymbol LoopObject, ForToLoopOperationUserDefinedInfo UserDefinedInfo) Info { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 152179, 152804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152182, 152804);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152228, 152260) || true) && (f_306_152233_152252() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152228, 152260) || true)
                        => f_306_152285_152304(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152325, 152350) || true) && (f_306_152330_152342() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152325, 152350) || true)
                        => f_306_152375_152387(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152408, 152431) || true) && (f_306_152413_152423() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152408, 152431) || true)
                        => f_306_152456_152466(),
                    3 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152487, 152509) || true) && (f_306_152492_152501() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152487, 152509) || true)
                        => f_306_152534_152543(),
                    4 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152564, 152581) || true) && (f_306_152569_152573() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152564, 152581) || true)
                        => f_306_152606_152610(),
                    5 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152631, 152664) || true) && (index < f_306_152644_152657().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 152631, 152664) || true)
                        => f_306_152689_152702()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 152728, 152788) && DynAbs.Tracing.TraceSender.Expression_True(306, 152728, 152788))
    => throw f_306_152739_152788((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 152179, 152804);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 152179, 152804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 152179, 152804);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_152233_152252()
            {
                var return_v = LoopControlVariable;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152233, 152252);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152285_152304()
            {
                var return_v = LoopControlVariable;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152285, 152304);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152330_152342()
            {
                var return_v = InitialValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152330, 152342);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152375_152387()
            {
                var return_v = InitialValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152375, 152387);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152413_152423()
            {
                var return_v = LimitValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152413, 152423);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152456_152466()
            {
                var return_v = LimitValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152456, 152466);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152492_152501()
            {
                var return_v = StepValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152492, 152501);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152534_152543()
            {
                var return_v = StepValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152534, 152543);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152569_152573()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152569, 152573);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_152606_152610()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152606, 152610);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_152644_152657()
            {
                var return_v = NextVariables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152644, 152657);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_152689_152702()
            {
                var return_v = NextVariables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 152689, 152702);
                return return_v;
            }


            System.Exception
            f_306_152739_152788((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 152739, 152788);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LoopControlVariable != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (InitialValue != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (LimitValue != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                    if (StepValue != null) return (true, 3, 0);
                    else goto case 3;
                case 3:
                    if (Body != null) return (true, 4, 0);
                    else goto case 4;
                case 4:
                    if (!NextVariables.IsEmpty) return (true, 5, 0);
                    else goto case 5;
                case 5 when previousIndex + 1 < NextVariables.Length:
                    return (true, 5, previousIndex + 1);
                case 5:
                case 6:
                    return (false, 6, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 154185, 154192);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 154188, 154192);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 154185, 154192);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154185, 154192);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154185, 154192);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 154259, 154266);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 154262, 154266);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 154259, 154266);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154259, 154266);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154259, 154266);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 154312, 154333);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 154315, 154333);
                    return OperationKind.Loop; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 154312, 154333);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154312, 154333);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154312, 154333);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 154398, 154429);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 154401, 154429);
                f_306_154401_154429(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 154398, 154429);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154398, 154429);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154398, 154429);
            }

            int
            f_306_154401_154429(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
            operation)
            {
                this_param.VisitForToLoop((Microsoft.CodeAnalysis.Operations.IForToLoopOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 154401, 154429);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 154582, 154623);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 154585, 154623);
                return f_306_154585_154623(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 154582, 154623);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154582, 154623);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154582, 154623);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_154585_154623(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitForToLoop((Microsoft.CodeAnalysis.Operations.IForToLoopOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 154585, 154623);
                return return_v;
            }

        }

        static ForToLoopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 150610, 154631);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 150610, 154631);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 150610, 154631);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 150610, 154631);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_151300_151345(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 151300, 151345);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_151375_151413(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 151375, 151413);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_151441_151477(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 151441, 151477);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_151504_151539(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 151504, 151539);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_151606_151645(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ForToLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 151606, 151645);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation
        f_306_151179_151183_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 150716, 151683);
            return return_v;
        }

    }
    internal sealed partial class WhileLoopOperation : BaseLoopOperation, IWhileLoopOperation
    {
        internal WhileLoopOperation(IOperation? condition, bool conditionIsTop, bool conditionIsUntil, IOperation? ignoredCondition, IOperation body, ImmutableArray<ILocalSymbol> locals, ILabelSymbol continueLabel, ILabelSymbol exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_155060_155064_C(body), locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 154743, 155390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155400, 155437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155447, 155482);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155492, 155529);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155539, 155583);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155159, 155207);

                Condition = f_306_155171_155206(condition, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155221, 155253);

                ConditionIsTop = conditionIsTop;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155267, 155303);

                ConditionIsUntil = conditionIsUntil;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155317, 155379);

                IgnoredCondition = f_306_155336_155378(ignoredCondition, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 154743, 155390);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 154743, 155390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154743, 155390);
            }
        }

        public IOperation? Condition { get; }

        public bool ConditionIsTop { get; }

        public bool ConditionIsUntil { get; }

        public IOperation? IgnoredCondition { get; }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 155627, 155634);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155630, 155634);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 155627, 155634);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 155627, 155634);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 155627, 155634);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 155701, 155708);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155704, 155708);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 155701, 155708);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 155701, 155708);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 155701, 155708);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 155754, 155775);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155757, 155775);
                    return OperationKind.Loop; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 155754, 155775);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 155754, 155775);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 155754, 155775);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 155840, 155871);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 155843, 155871);
                f_306_155843_155871(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 155840, 155871);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 155840, 155871);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 155840, 155871);
            }

            int
            f_306_155843_155871(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.WhileLoopOperation
            operation)
            {
                this_param.VisitWhileLoop((Microsoft.CodeAnalysis.Operations.IWhileLoopOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 155843, 155871);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 156024, 156065);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156027, 156065);
                return f_306_156027_156065(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 156024, 156065);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 156024, 156065);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 156024, 156065);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_156027_156065(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.WhileLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitWhileLoop((Microsoft.CodeAnalysis.Operations.IWhileLoopOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 156027, 156065);
                return return_v;
            }

        }

        static WhileLoopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 154637, 156073);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 154637, 156073);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 154637, 156073);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 154637, 156073);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_155171_155206(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.WhileLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 155171, 155206);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_155336_155378(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.WhileLoopOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 155336, 155378);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation
        f_306_155060_155064_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 154743, 155390);
            return return_v;
        }

    }
    internal sealed partial class LabeledOperation : Operation, ILabeledOperation
    {
        internal LabeledOperation(ILabelSymbol label, IOperation? operation, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_156328_156341_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 156173, 156474);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156484, 156518);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156528, 156565);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156387, 156401);

                Label = label;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156415, 156463);

                Operation = f_306_156427_156462(operation, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 156173, 156474);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 156173, 156474);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 156173, 156474);
            }
        }

        public ILabelSymbol Label { get; }

        public IOperation? Operation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 156650, 156850);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156653, 156850);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156699, 156721) || true) && (f_306_156704_156713() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 156699, 156721) || true)
                        => f_306_156746_156755(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 156774, 156834) && DynAbs.Tracing.TraceSender.Expression_True(306, 156774, 156834))
    => throw f_306_156785_156834((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 156650, 156850);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 156650, 156850);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 156650, 156850);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_156704_156713()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 156704, 156713);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_156746_156755()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 156746, 156755);
                return return_v;
            }


            System.Exception
            f_306_156785_156834((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 156785, 156834);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operation != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 157443, 157450);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 157446, 157450);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 157443, 157450);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157443, 157450);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157443, 157450);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 157517, 157524);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 157520, 157524);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 157517, 157524);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157517, 157524);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157517, 157524);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 157570, 157594);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 157573, 157594);
                    return OperationKind.Labeled; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 157570, 157594);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157570, 157594);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157570, 157594);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 157659, 157688);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 157662, 157688);
                f_306_157662_157688(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 157659, 157688);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157659, 157688);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157659, 157688);
            }

            int
            f_306_157662_157688(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.LabeledOperation
            operation)
            {
                this_param.VisitLabeled((Microsoft.CodeAnalysis.Operations.ILabeledOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 157662, 157688);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 157841, 157880);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 157844, 157880);
                return f_306_157844_157880(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 157841, 157880);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157841, 157880);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157841, 157880);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_157844_157880(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.LabeledOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitLabeled((Microsoft.CodeAnalysis.Operations.ILabeledOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 157844, 157880);
                return return_v;
            }

        }

        static LabeledOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 156079, 157888);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 156079, 157888);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 156079, 157888);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 156079, 157888);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_156427_156462(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.LabeledOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 156427, 156462);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_156328_156341_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 156173, 156474);
            return return_v;
        }

    }
    internal sealed partial class BranchOperation : Operation, IBranchOperation
    {
        internal BranchOperation(ILabelSymbol target, BranchKind branchKind, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_158141_158154_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 157986, 158265);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158275, 158310);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158320, 158357);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158200, 158216);

                Target = target;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158230, 158254);

                BranchKind = branchKind;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 157986, 158265);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 157986, 158265);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157986, 158265);
            }
        }

        public ILabelSymbol Target { get; }

        public BranchKind BranchKind { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158429, 158487);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158432, 158487);
                throw f_306_158438_158487((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158429, 158487);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158429, 158487);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158429, 158487);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_158438_158487((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 158438, 158487);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158607, 158645);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158610, 158645);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158607, 158645);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158607, 158645);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158607, 158645);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158690, 158697);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158693, 158697);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158690, 158697);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158690, 158697);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158690, 158697);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158764, 158771);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158767, 158771);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158764, 158771);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158764, 158771);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158764, 158771);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158817, 158840);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158820, 158840);
                    return OperationKind.Branch; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158817, 158840);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158817, 158840);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158817, 158840);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 158905, 158933);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 158908, 158933);
                f_306_158908_158933(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 158905, 158933);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 158905, 158933);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 158905, 158933);
            }

            int
            f_306_158908_158933(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.BranchOperation
            operation)
            {
                this_param.VisitBranch((Microsoft.CodeAnalysis.Operations.IBranchOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 158908, 158933);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159086, 159124);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159089, 159124);
                return f_306_159089_159124(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159086, 159124);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159086, 159124);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159086, 159124);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_159089_159124(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.BranchOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitBranch((Microsoft.CodeAnalysis.Operations.IBranchOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 159089, 159124);
                return return_v;
            }

        }

        static BranchOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 157894, 159132);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 157894, 159132);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 157894, 159132);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 157894, 159132);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_158141_158154_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 157986, 158265);
            return return_v;
        }

    }
    internal sealed partial class EmptyOperation : Operation, IEmptyOperation
    {
        internal EmptyOperation(SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_159338_159351_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 159228, 159376);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 159228, 159376);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159228, 159376);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159228, 159376);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159448, 159506);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159451, 159506);
                throw f_306_159457_159506((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159448, 159506);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159448, 159506);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159448, 159506);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_159457_159506((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 159457, 159506);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159626, 159664);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159629, 159664);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159626, 159664);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159626, 159664);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159626, 159664);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159709, 159716);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159712, 159716);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159709, 159716);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159709, 159716);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159709, 159716);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159783, 159790);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159786, 159790);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159783, 159790);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159783, 159790);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159783, 159790);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159836, 159858);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159839, 159858);
                    return OperationKind.Empty; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159836, 159858);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159836, 159858);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159836, 159858);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 159923, 159950);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 159926, 159950);
                f_306_159926_159950(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 159923, 159950);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 159923, 159950);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159923, 159950);
            }

            int
            f_306_159926_159950(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.EmptyOperation
            operation)
            {
                this_param.VisitEmpty((Microsoft.CodeAnalysis.Operations.IEmptyOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 159926, 159950);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 160103, 160140);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160106, 160140);
                return f_306_160106_160140(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 160103, 160140);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 160103, 160140);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 160103, 160140);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_160106_160140(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.EmptyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitEmpty((Microsoft.CodeAnalysis.Operations.IEmptyOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 160106, 160140);
                return return_v;
            }

        }

        static EmptyOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 159138, 160148);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 159138, 160148);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 159138, 160148);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 159138, 160148);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_159338_159351_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 159228, 159376);
            return return_v;
        }

    }
    internal sealed partial class ReturnOperation : Operation, IReturnOperation
    {
        internal ReturnOperation(IOperation? returnedValue, OperationKind kind, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_160404_160417_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 160246, 160556);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160566, 160607);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 161589, 161632);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160463, 160519);

                ReturnedValue = f_306_160479_160518(returnedValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160533, 160545);

                Kind = kind;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 160246, 160556);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 160246, 160556);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 160246, 160556);
            }
        }

        public IOperation? ReturnedValue { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 160692, 160900);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160695, 160900);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160741, 160767) || true) && (f_306_160746_160759() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 160741, 160767) || true)
                        => f_306_160792_160805(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 160824, 160884) && DynAbs.Tracing.TraceSender.Expression_True(306, 160824, 160884))
    => throw f_306_160835_160884((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 160692, 160900);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 160692, 160900);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 160692, 160900);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_160746_160759()
            {
                var return_v = ReturnedValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 160746, 160759);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_160792_160805()
            {
                var return_v = ReturnedValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 160792, 160805);
                return return_v;
            }


            System.Exception
            f_306_160835_160884((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 160835, 160884);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (ReturnedValue != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 161497, 161504);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 161500, 161504);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 161497, 161504);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 161497, 161504);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 161497, 161504);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 161571, 161578);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 161574, 161578);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 161571, 161578);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 161571, 161578);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 161571, 161578);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind { get; }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 161696, 161724);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 161699, 161724);
                f_306_161699_161724(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 161696, 161724);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 161696, 161724);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 161696, 161724);
            }

            int
            f_306_161699_161724(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ReturnOperation
            operation)
            {
                this_param.VisitReturn((Microsoft.CodeAnalysis.Operations.IReturnOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 161699, 161724);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 161877, 161915);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 161880, 161915);
                return f_306_161880_161915(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 161877, 161915);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 161877, 161915);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 161877, 161915);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_161880_161915(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ReturnOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitReturn((Microsoft.CodeAnalysis.Operations.IReturnOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 161880, 161915);
                return return_v;
            }

        }

        static ReturnOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 160154, 161923);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 160154, 161923);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 160154, 161923);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 160154, 161923);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_160479_160518(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.ReturnOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 160479, 160518);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_160404_160417_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 160246, 160556);
            return return_v;
        }

    }
    internal sealed partial class LockOperation : Operation, ILockOperation
    {
        internal LockOperation(IOperation lockedValue, IOperation body, ILocalSymbol? lockTakenSymbol, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_162198_162211_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 162017, 162420);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162430, 162468);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162478, 162509);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162519, 162564);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162257, 162309);

                LockedValue = f_306_162271_162308(lockedValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162323, 162361);

                Body = f_306_162330_162360(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162375, 162409);

                LockTakenSymbol = lockTakenSymbol;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 162017, 162420);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 162017, 162420);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 162017, 162420);
            }
        }

        public IOperation LockedValue { get; }

        public IOperation Body { get; }

        public ILocalSymbol? LockTakenSymbol { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 162649, 162920);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162652, 162920);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162698, 162722) || true) && (f_306_162703_162714() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 162698, 162722) || true)
                        => f_306_162747_162758(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162779, 162796) || true) && (f_306_162784_162788() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 162779, 162796) || true)
                        => f_306_162821_162825(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 162844, 162904) && DynAbs.Tracing.TraceSender.Expression_True(306, 162844, 162904))
    => throw f_306_162855_162904((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 162649, 162920);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 162649, 162920);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 162649, 162920);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_162703_162714()
            {
                var return_v = LockedValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 162703, 162714);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_162747_162758()
            {
                var return_v = LockedValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 162747, 162758);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_162784_162788()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 162784, 162788);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_162821_162825()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 162821, 162825);
                return return_v;
            }


            System.Exception
            f_306_162855_162904((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 162855, 162904);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LockedValue != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Body != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 163639, 163646);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 163642, 163646);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 163639, 163646);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 163639, 163646);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 163639, 163646);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 163713, 163720);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 163716, 163720);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 163713, 163720);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 163713, 163720);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 163713, 163720);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 163766, 163787);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 163769, 163787);
                    return OperationKind.Lock; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 163766, 163787);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 163766, 163787);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 163766, 163787);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 163852, 163878);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 163855, 163878);
                f_306_163855_163878(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 163852, 163878);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 163852, 163878);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 163852, 163878);
            }

            int
            f_306_163855_163878(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.LockOperation
            operation)
            {
                this_param.VisitLock((Microsoft.CodeAnalysis.Operations.ILockOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 163855, 163878);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 164031, 164067);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164034, 164067);
                return f_306_164034_164067(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 164031, 164067);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 164031, 164067);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 164031, 164067);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_164034_164067(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.LockOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitLock((Microsoft.CodeAnalysis.Operations.ILockOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 164034, 164067);
                return return_v;
            }

        }

        static LockOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 161929, 164075);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 161929, 164075);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 161929, 164075);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 161929, 164075);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_162271_162308(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.LockOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 162271, 162308);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_162330_162360(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.LockOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 162330, 162360);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_162198_162211_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 162017, 162420);
            return return_v;
        }

    }
    internal sealed partial class TryOperation : Operation, ITryOperation
    {
        internal TryOperation(IBlockOperation body, ImmutableArray<ICatchClauseOperation> catches, IBlockOperation? @finally, ILabelSymbol? exitLabel, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_164396_164409_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 164167, 164657);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164667, 164703);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164784, 164824);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164834, 164873);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164455, 164493);

                Body = f_306_164462_164492(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164507, 164551);

                Catches = f_306_164517_164550(catches, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164565, 164610);

                Finally = f_306_164575_164609(@finally, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164624, 164646);

                ExitLabel = exitLabel;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 164167, 164657);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 164167, 164657);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 164167, 164657);
            }
        }

        public IBlockOperation Body { get; }

        public ImmutableArray<ICatchClauseOperation> Catches { get; }

        public IBlockOperation? Finally { get; }

        public ILabelSymbol? ExitLabel { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 164958, 165308);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 164961, 165308);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 165007, 165024) || true) && (f_306_165012_165016() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 165007, 165024) || true)
                        => f_306_165049_165053(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 165074, 165101) || true) && (index < f_306_165087_165094().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 165074, 165101) || true)
                        => f_306_165126_165133()[index],
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 165161, 165181) || true) && (f_306_165166_165173() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 165161, 165181) || true)
                        => f_306_165206_165213(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 165232, 165292) && DynAbs.Tracing.TraceSender.Expression_True(306, 165232, 165292))
    => throw f_306_165243_165292((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 164958, 165308);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 164958, 165308);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 164958, 165308);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_165012_165016()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165012, 165016);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_165049_165053()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165049, 165053);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
            f_306_165087_165094()
            {
                var return_v = Catches;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165087, 165094);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
            f_306_165126_165133()
            {
                var return_v = Catches;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165126, 165133);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_165166_165173()
            {
                var return_v = Finally;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165166, 165173);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_165206_165213()
            {
                var return_v = Finally;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 165206, 165213);
                return return_v;
            }


            System.Exception
            f_306_165243_165292((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 165243, 165292);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Body != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Catches.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Catches.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                    if (Finally != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 166274, 166281);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 166277, 166281);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 166274, 166281);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166274, 166281);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166274, 166281);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 166348, 166355);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 166351, 166355);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 166348, 166355);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166348, 166355);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166348, 166355);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 166401, 166421);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 166404, 166421);
                    return OperationKind.Try; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 166401, 166421);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166401, 166421);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166401, 166421);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 166486, 166511);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 166489, 166511);
                f_306_166489_166511(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 166486, 166511);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166486, 166511);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166486, 166511);
            }

            int
            f_306_166489_166511(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TryOperation
            operation)
            {
                this_param.VisitTry((Microsoft.CodeAnalysis.Operations.ITryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 166489, 166511);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 166664, 166699);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 166667, 166699);
                return f_306_166667_166699(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 166664, 166699);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166664, 166699);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166664, 166699);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_166667_166699(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTry((Microsoft.CodeAnalysis.Operations.ITryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 166667, 166699);
                return return_v;
            }

        }

        static TryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 164081, 166707);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 164081, 166707);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 164081, 166707);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 164081, 166707);

        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_164462_164492(Microsoft.CodeAnalysis.Operations.IBlockOperation
        operation, Microsoft.CodeAnalysis.Operations.TryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 164462, 164492);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
        f_306_164517_164550(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
        operations, Microsoft.CodeAnalysis.Operations.TryOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 164517, 164550);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_164575_164609(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        operation, Microsoft.CodeAnalysis.Operations.TryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 164575, 164609);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_164396_164409_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 164167, 164657);
            return return_v;
        }

    }
    internal sealed partial class UsingOperation : Operation, IUsingOperation
    {
        internal UsingOperation(IOperation resources, IOperation body, ImmutableArray<ILocalSymbol> locals, bool isAsynchronous, DisposeOperationInfo disposeInfo, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_167044_167057_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 166803, 167330);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167340, 167376);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167386, 167417);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167488, 167523);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167103, 167151);

                Resources = f_306_167115_167150(resources, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167165, 167203);

                Body = f_306_167172_167202(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167217, 167233);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167247, 167279);

                IsAsynchronous = isAsynchronous;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167293, 167319);

                DisposeInfo = disposeInfo;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 166803, 167330);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 166803, 167330);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166803, 167330);
            }
        }

        public IOperation Resources { get; }

        public IOperation Body { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public bool IsAsynchronous { get; }

        public DisposeOperationInfo DisposeInfo { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 167666, 167933);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167669, 167933);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167715, 167737) || true) && (f_306_167720_167729() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 167715, 167737) || true)
                        => f_306_167762_167771(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167792, 167809) || true) && (f_306_167797_167801() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 167792, 167809) || true)
                        => f_306_167834_167838(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 167857, 167917) && DynAbs.Tracing.TraceSender.Expression_True(306, 167857, 167917))
    => throw f_306_167868_167917((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 167666, 167933);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 167666, 167933);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 167666, 167933);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_167720_167729()
            {
                var return_v = Resources;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 167720, 167729);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_167762_167771()
            {
                var return_v = Resources;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 167762, 167771);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_167797_167801()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 167797, 167801);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_167834_167838()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 167834, 167838);
                return return_v;
            }


            System.Exception
            f_306_167868_167917((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 167868, 167917);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Resources != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Body != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 168650, 168657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 168653, 168657);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 168650, 168657);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 168650, 168657);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 168650, 168657);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 168724, 168731);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 168727, 168731);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 168724, 168731);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 168724, 168731);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 168724, 168731);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 168777, 168799);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 168780, 168799);
                    return OperationKind.Using; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 168777, 168799);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 168777, 168799);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 168777, 168799);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 168864, 168891);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 168867, 168891);
                f_306_168867_168891(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 168864, 168891);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 168864, 168891);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 168864, 168891);
            }

            int
            f_306_168867_168891(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.UsingOperation
            operation)
            {
                this_param.VisitUsing((Microsoft.CodeAnalysis.Operations.IUsingOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 168867, 168891);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 169044, 169081);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169047, 169081);
                return f_306_169047_169081(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 169044, 169081);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 169044, 169081);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 169044, 169081);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_169047_169081(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.UsingOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitUsing((Microsoft.CodeAnalysis.Operations.IUsingOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 169047, 169081);
                return return_v;
            }

        }

        static UsingOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 166713, 169089);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 166713, 169089);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 166713, 169089);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 166713, 169089);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_167115_167150(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.UsingOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 167115, 167150);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_167172_167202(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.UsingOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 167172, 167202);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_167044_167057_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 166803, 167330);
            return return_v;
        }

    }
    internal sealed partial class ExpressionStatementOperation : Operation, IExpressionStatementOperation
    {
        internal ExpressionStatementOperation(IOperation operation, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_169359_169372_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 169213, 169477);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169487, 169523);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169418, 169466);

                Operation = f_306_169430_169465(operation, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 169213, 169477);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 169213, 169477);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 169213, 169477);
            }
        }

        public IOperation Operation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 169608, 169808);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169611, 169808);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169657, 169679) || true) && (f_306_169662_169671() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 169657, 169679) || true)
                        => f_306_169704_169713(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 169732, 169792) && DynAbs.Tracing.TraceSender.Expression_True(306, 169732, 169792))
    => throw f_306_169743_169792((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 169608, 169808);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 169608, 169808);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 169608, 169808);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_169662_169671()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 169662, 169671);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_169704_169713()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 169704, 169713);
                return return_v;
            }


            System.Exception
            f_306_169743_169792((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 169743, 169792);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operation != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 170401, 170408);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 170404, 170408);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 170401, 170408);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170401, 170408);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170401, 170408);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 170475, 170482);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 170478, 170482);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 170475, 170482);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170475, 170482);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170475, 170482);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 170528, 170564);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 170531, 170564);
                    return OperationKind.ExpressionStatement; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 170528, 170564);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170528, 170564);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170528, 170564);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 170629, 170670);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 170632, 170670);
                f_306_170632_170670(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 170629, 170670);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170629, 170670);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170629, 170670);
            }

            int
            f_306_170632_170670(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
            operation)
            {
                this_param.VisitExpressionStatement((Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 170632, 170670);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 170823, 170874);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 170826, 170874);
                return f_306_170826_170874(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 170823, 170874);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170823, 170874);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170823, 170874);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_170826_170874(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitExpressionStatement((Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 170826, 170874);
                return return_v;
            }

        }

        static ExpressionStatementOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 169095, 170882);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 169095, 170882);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 169095, 170882);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 169095, 170882);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_169430_169465(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 169430, 169465);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_169359_169372_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 169213, 169477);
            return return_v;
        }

    }
    internal sealed partial class LocalFunctionOperation : Operation, ILocalFunctionOperation
    {
        internal LocalFunctionOperation(IMethodSymbol symbol, IBlockOperation? body, IBlockOperation? ignoredBody, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_171187_171200_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 170994, 171391);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171401, 171437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171447, 171484);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171494, 171538);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171246, 171262);

                Symbol = symbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171276, 171314);

                Body = f_306_171283_171313(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171328, 171380);

                IgnoredBody = f_306_171342_171379(ignoredBody, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 170994, 171391);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 170994, 171391);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170994, 171391);
            }
        }

        public IMethodSymbol Symbol { get; }

        public IBlockOperation? Body { get; }

        public IBlockOperation? IgnoredBody { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 171623, 171894);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171626, 171894);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171672, 171689) || true) && (f_306_171677_171681() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 171672, 171689) || true)
                        => f_306_171714_171718(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171739, 171763) || true) && (f_306_171744_171755() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 171739, 171763) || true)
                        => f_306_171788_171799(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 171818, 171878) && DynAbs.Tracing.TraceSender.Expression_True(306, 171818, 171878))
    => throw f_306_171829_171878((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 171623, 171894);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 171623, 171894);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 171623, 171894);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_171677_171681()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 171677, 171681);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_171714_171718()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 171714, 171718);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_171744_171755()
            {
                var return_v = IgnoredBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 171744, 171755);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_171788_171799()
            {
                var return_v = IgnoredBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 171788, 171799);
                return return_v;
            }


            System.Exception
            f_306_171829_171878((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 171829, 171878);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Body != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (IgnoredBody != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 172613, 172620);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 172616, 172620);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 172613, 172620);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 172613, 172620);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 172613, 172620);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 172687, 172694);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 172690, 172694);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 172687, 172694);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 172687, 172694);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 172687, 172694);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 172740, 172770);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 172743, 172770);
                    return OperationKind.LocalFunction; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 172740, 172770);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 172740, 172770);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 172740, 172770);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 172835, 172870);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 172838, 172870);
                f_306_172838_172870(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 172835, 172870);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 172835, 172870);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 172835, 172870);
            }

            int
            f_306_172838_172870(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
            operation)
            {
                this_param.VisitLocalFunction((Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 172838, 172870);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173023, 173068);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173026, 173068);
                return f_306_173026_173068(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173023, 173068);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173023, 173068);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173023, 173068);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_173026_173068(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitLocalFunction((Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 173026, 173068);
                return return_v;
            }

        }

        static LocalFunctionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 170888, 173076);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 170888, 173076);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 170888, 173076);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 170888, 173076);

        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_171283_171313(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        operation, Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 171283, 171313);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_171342_171379(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        operation, Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 171342, 171379);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_171187_171200_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 170994, 171391);
            return return_v;
        }

    }
    internal sealed partial class StopOperation : Operation, IStopOperation
    {
        internal StopOperation(SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_173279_173292_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 173170, 173317);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 173170, 173317);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173170, 173317);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173170, 173317);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173389, 173447);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173392, 173447);
                throw f_306_173398_173447((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173389, 173447);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173389, 173447);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173389, 173447);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_173398_173447((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 173398, 173447);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173567, 173605);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173570, 173605);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173567, 173605);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173567, 173605);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173567, 173605);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173650, 173657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173653, 173657);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173650, 173657);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173650, 173657);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173650, 173657);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173724, 173731);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173727, 173731);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173724, 173731);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173724, 173731);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173724, 173731);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173777, 173798);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173780, 173798);
                    return OperationKind.Stop; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173777, 173798);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173777, 173798);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173777, 173798);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 173863, 173889);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 173866, 173889);
                f_306_173866_173889(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 173863, 173889);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 173863, 173889);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173863, 173889);
            }

            int
            f_306_173866_173889(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.StopOperation
            operation)
            {
                this_param.VisitStop((Microsoft.CodeAnalysis.Operations.IStopOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 173866, 173889);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174042, 174078);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174045, 174078);
                return f_306_174045_174078(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174042, 174078);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174042, 174078);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174042, 174078);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_174045_174078(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.StopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitStop((Microsoft.CodeAnalysis.Operations.IStopOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 174045, 174078);
                return return_v;
            }

        }

        static StopOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 173082, 174086);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 173082, 174086);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 173082, 174086);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 173082, 174086);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_173279_173292_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 173170, 173317);
            return return_v;
        }

    }
    internal sealed partial class EndOperation : Operation, IEndOperation
    {
        internal EndOperation(SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_174286_174299_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 174178, 174324);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 174178, 174324);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174178, 174324);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174178, 174324);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174396, 174454);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174399, 174454);
                throw f_306_174405_174454((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174396, 174454);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174396, 174454);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174396, 174454);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_174405_174454((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 174405, 174454);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174574, 174612);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174577, 174612);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174574, 174612);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174574, 174612);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174574, 174612);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174657, 174664);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174660, 174664);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174657, 174664);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174657, 174664);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174657, 174664);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174731, 174738);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174734, 174738);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174731, 174738);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174731, 174738);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174731, 174738);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174784, 174804);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174787, 174804);
                    return OperationKind.End; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174784, 174804);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174784, 174804);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174784, 174804);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 174869, 174894);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 174872, 174894);
                f_306_174872_174894(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 174869, 174894);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 174869, 174894);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174869, 174894);
            }

            int
            f_306_174872_174894(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.EndOperation
            operation)
            {
                this_param.VisitEnd((Microsoft.CodeAnalysis.Operations.IEndOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 174872, 174894);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 175047, 175082);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175050, 175082);
                return f_306_175050_175082(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 175047, 175082);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 175047, 175082);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 175047, 175082);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_175050_175082(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.EndOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitEnd((Microsoft.CodeAnalysis.Operations.IEndOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 175050, 175082);
                return return_v;
            }

        }

        static EndOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 174092, 175090);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 174092, 175090);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 174092, 175090);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 174092, 175090);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_174286_174299_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 174178, 174324);
            return return_v;
        }

    }
    internal sealed partial class RaiseEventOperation : Operation, IRaiseEventOperation
    {
        internal RaiseEventOperation(IEventReferenceOperation eventReference, ImmutableArray<IArgumentOperation> arguments, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_175398_175411_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 175196, 175588);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175598, 175653);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175457, 175515);

                EventReference = f_306_175474_175514(eventReference, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175529, 175577);

                Arguments = f_306_175541_175576(arguments, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 175196, 175588);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 175196, 175588);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 175196, 175588);
            }
        }

        public IEventReferenceOperation EventReference { get; }

        public ImmutableArray<IArgumentOperation> Arguments { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 175808, 176109);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175811, 176109);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175857, 175884) || true) && (f_306_175862_175876() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 175857, 175884) || true)
                        => f_306_175909_175923(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 175944, 175973) || true) && (index < f_306_175957_175966().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 175944, 175973) || true)
                        => f_306_175998_176007()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 176033, 176093) && DynAbs.Tracing.TraceSender.Expression_True(306, 176033, 176093))
    => throw f_306_176044_176093((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 175808, 176109);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 175808, 176109);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 175808, 176109);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
            f_306_175862_175876()
            {
                var return_v = EventReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 175862, 175876);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
            f_306_175909_175923()
            {
                var return_v = EventReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 175909, 175923);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_175957_175966()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 175957, 175966);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_175998_176007()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 175998, 176007);
                return return_v;
            }


            System.Exception
            f_306_176044_176093((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 176044, 176093);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (EventReference != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Arguments.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Arguments.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 176962, 176969);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 176965, 176969);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 176962, 176969);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 176962, 176969);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 176962, 176969);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 177036, 177043);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177039, 177043);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 177036, 177043);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177036, 177043);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177036, 177043);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 177089, 177116);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177092, 177116);
                    return OperationKind.RaiseEvent; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 177089, 177116);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177089, 177116);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177089, 177116);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 177181, 177213);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177184, 177213);
                f_306_177184_177213(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 177181, 177213);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177181, 177213);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177181, 177213);
            }

            int
            f_306_177184_177213(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RaiseEventOperation
            operation)
            {
                this_param.VisitRaiseEvent((Microsoft.CodeAnalysis.Operations.IRaiseEventOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 177184, 177213);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 177366, 177408);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177369, 177408);
                return f_306_177369_177408(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 177366, 177408);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177366, 177408);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177366, 177408);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_177369_177408(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RaiseEventOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRaiseEvent((Microsoft.CodeAnalysis.Operations.IRaiseEventOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 177369, 177408);
                return return_v;
            }

        }

        static RaiseEventOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 175096, 177416);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 175096, 177416);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 175096, 177416);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 175096, 177416);

        static Microsoft.CodeAnalysis.Operations.IEventReferenceOperation?
        f_306_175474_175514(Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
        operation, Microsoft.CodeAnalysis.Operations.RaiseEventOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 175474, 175514);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        f_306_175541_175576(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        operations, Microsoft.CodeAnalysis.Operations.RaiseEventOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 175541, 175576);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_175398_175411_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 175196, 175588);
            return return_v;
        }

    }
    internal sealed partial class LiteralOperation : Operation, ILiteralOperation
    {
        internal LiteralOperation(SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_177677_177690_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 177516, 177812);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178111, 178153);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178163, 178227);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177736, 177775);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177789, 177801);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 177516, 177812);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177516, 177812);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177516, 177812);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 177884, 177942);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 177887, 177942);
                throw f_306_177893_177942((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 177884, 177942);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 177884, 177942);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177884, 177942);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_177893_177942((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 177893, 177942);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 178062, 178100);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178065, 178100);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 178062, 178100);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 178062, 178100);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178062, 178100);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 178272, 178296);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178275, 178296);
                    return OperationKind.Literal; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 178272, 178296);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 178272, 178296);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178272, 178296);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 178361, 178390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178364, 178390);
                f_306_178364_178390(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 178361, 178390);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 178361, 178390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178361, 178390);
            }

            int
            f_306_178364_178390(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.LiteralOperation
            operation)
            {
                this_param.VisitLiteral((Microsoft.CodeAnalysis.Operations.ILiteralOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 178364, 178390);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 178543, 178582);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 178546, 178582);
                return f_306_178546_178582(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 178543, 178582);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 178543, 178582);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178543, 178582);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_178546_178582(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.LiteralOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitLiteral((Microsoft.CodeAnalysis.Operations.ILiteralOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 178546, 178582);
                return return_v;
            }

        }

        static LiteralOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 177422, 178590);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 177422, 178590);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 177422, 178590);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 177422, 178590);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_177677_177690_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 177516, 177812);
            return return_v;
        }

    }
    internal sealed partial class ConversionOperation : Operation, IConversionOperation
    {
        internal ConversionOperation(IOperation operand, IConvertibleConversion conversion, bool isTryCast, bool isChecked, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_178947_178960_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 178696, 179261);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179271, 179305);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179315, 179377);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179478, 179508);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179518, 179548);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 180386, 180428);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 180438, 180502);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179006, 179050);

                Operand = f_306_179016_179049(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179064, 179099);

                ConversionConvertible = conversion;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179113, 179135);

                IsTryCast = isTryCast;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179149, 179171);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179185, 179224);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179238, 179250);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 178696, 179261);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 178696, 179261);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178696, 179261);
            }
        }

        public IOperation Operand { get; }

        internal IConvertibleConversion ConversionConvertible { get; }

        public CommonConversion Conversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 179422, 179467);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179425, 179467);
                    return f_306_179425_179467(f_306_179425_179446()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 179422, 179467);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 179422, 179467);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 179422, 179467);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public bool IsTryCast { get; }

        public bool IsChecked { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 179633, 179829);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179636, 179829);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179682, 179702) || true) && (f_306_179687_179694() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 179682, 179702) || true)
                        => f_306_179727_179734(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 179753, 179813) && DynAbs.Tracing.TraceSender.Expression_True(306, 179753, 179813))
    => throw f_306_179764_179813((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 179633, 179829);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 179633, 179829);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 179633, 179829);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_179687_179694()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 179687, 179694);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_179727_179734()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 179727, 179734);
                return return_v;
            }


            System.Exception
            f_306_179764_179813((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 179764, 179813);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 180547, 180574);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 180550, 180574);
                    return OperationKind.Conversion; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 180547, 180574);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 180547, 180574);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 180547, 180574);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 180639, 180671);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 180642, 180671);
                f_306_180642_180671(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 180639, 180671);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 180639, 180671);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 180639, 180671);
            }

            int
            f_306_180642_180671(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConversionOperation
            operation)
            {
                this_param.VisitConversion((Microsoft.CodeAnalysis.Operations.IConversionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 180642, 180671);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 180824, 180866);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 180827, 180866);
                return f_306_180827_180866(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 180824, 180866);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 180824, 180866);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 180824, 180866);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_180827_180866(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConversionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConversion((Microsoft.CodeAnalysis.Operations.IConversionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 180827, 180866);
                return return_v;
            }

        }

        static ConversionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 178596, 180874);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 178596, 180874);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 178596, 180874);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 178596, 180874);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_179016_179049(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConversionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 179016, 179049);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_178947_178960_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 178696, 179261);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_179425_179446()
        {
            var return_v = ConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 179425, 179446);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_179425_179467(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 179425, 179467);
            return return_v;
        }

    }
    internal sealed partial class InvocationOperation : Operation, IInvocationOperation
    {
        internal InvocationOperation(IMethodSymbol targetMethod, IOperation? instance, bool isVirtual, ImmutableArray<IArgumentOperation> arguments, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_181226_181239_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 180980, 181508);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181518, 181560);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181570, 181606);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181616, 181646);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 182903, 182945);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181285, 181313);

                TargetMethod = targetMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181327, 181373);

                Instance = f_306_181338_181372(instance, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181387, 181409);

                IsVirtual = isVirtual;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181423, 181471);

                Arguments = f_306_181435_181470(arguments, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181485, 181497);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 180980, 181508);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 180980, 181508);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 180980, 181508);
            }
        }

        public IMethodSymbol TargetMethod { get; }

        public IOperation? Instance { get; }

        public bool IsVirtual { get; }

        public ImmutableArray<IArgumentOperation> Arguments { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 181801, 182090);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181804, 182090);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181850, 181871) || true) && (f_306_181855_181863() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 181850, 181871) || true)
                        => f_306_181896_181904(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 181925, 181954) || true) && (index < f_306_181938_181947().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 181925, 181954) || true)
                        => f_306_181979_181988()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 182014, 182074) && DynAbs.Tracing.TraceSender.Expression_True(306, 182014, 182074))
    => throw f_306_182025_182074((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 181801, 182090);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 181801, 182090);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 181801, 182090);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_181855_181863()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 181855, 181863);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_181896_181904()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 181896, 181904);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_181938_181947()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 181938, 181947);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_181979_181988()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 181979, 181988);
                return return_v;
            }


            System.Exception
            f_306_182025_182074((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 182025, 182074);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Arguments.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Arguments.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 183011, 183018);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183014, 183018);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 183011, 183018);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 183011, 183018);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183011, 183018);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 183064, 183091);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183067, 183091);
                    return OperationKind.Invocation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 183064, 183091);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 183064, 183091);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183064, 183091);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 183156, 183188);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183159, 183188);
                f_306_183159_183188(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 183156, 183188);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 183156, 183188);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183156, 183188);
            }

            int
            f_306_183159_183188(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.InvocationOperation
            operation)
            {
                this_param.VisitInvocation((Microsoft.CodeAnalysis.Operations.IInvocationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 183159, 183188);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 183341, 183383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183344, 183383);
                return f_306_183344_183383(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 183341, 183383);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 183341, 183383);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183341, 183383);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_183344_183383(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.InvocationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitInvocation((Microsoft.CodeAnalysis.Operations.IInvocationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 183344, 183383);
                return return_v;
            }

        }

        static InvocationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 180880, 183391);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 180880, 183391);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 180880, 183391);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 180880, 183391);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_181338_181372(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.InvocationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 181338, 181372);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        f_306_181435_181470(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        operations, Microsoft.CodeAnalysis.Operations.InvocationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 181435, 181470);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_181226_181239_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 180980, 181508);
            return return_v;
        }

    }
    internal sealed partial class ArrayElementReferenceOperation : Operation, IArrayElementReferenceOperation
    {
        internal ArrayElementReferenceOperation(IOperation arrayReference, ImmutableArray<IOperation> indices, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_183727_183740_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 183519, 183939);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183949, 183990);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 185247, 185289);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183786, 183844);

                ArrayReference = f_306_183803_183843(arrayReference, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183858, 183902);

                Indices = f_306_183868_183901(indices, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 183916, 183928);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 183519, 183939);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 183519, 183939);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183519, 183939);
            }
        }

        public IOperation ArrayReference { get; }

        public ImmutableArray<IOperation> Indices { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 184135, 184432);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 184138, 184432);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 184184, 184211) || true) && (f_306_184189_184203() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 184184, 184211) || true)
                        => f_306_184236_184250(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 184271, 184298) || true) && (index < f_306_184284_184291().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 184271, 184298) || true)
                        => f_306_184323_184330()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 184356, 184416) && DynAbs.Tracing.TraceSender.Expression_True(306, 184356, 184416))
    => throw f_306_184367_184416((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 184135, 184432);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 184135, 184432);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 184135, 184432);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_184189_184203()
            {
                var return_v = ArrayReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 184189, 184203);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_184236_184250()
            {
                var return_v = ArrayReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 184236, 184250);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_184284_184291()
            {
                var return_v = Indices;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 184284, 184291);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_184323_184330()
            {
                var return_v = Indices;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 184323, 184330);
                return return_v;
            }


            System.Exception
            f_306_184367_184416((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 184367, 184416);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (ArrayReference != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Indices.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Indices.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 185355, 185362);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 185358, 185362);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 185355, 185362);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 185355, 185362);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185355, 185362);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 185408, 185446);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 185411, 185446);
                    return OperationKind.ArrayElementReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 185408, 185446);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 185408, 185446);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185408, 185446);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 185511, 185554);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 185514, 185554);
                f_306_185514_185554(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 185511, 185554);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 185511, 185554);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185511, 185554);
            }

            int
            f_306_185514_185554(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
            operation)
            {
                this_param.VisitArrayElementReference((Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 185514, 185554);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 185707, 185760);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 185710, 185760);
                return f_306_185710_185760(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 185707, 185760);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 185707, 185760);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185707, 185760);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_185710_185760(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitArrayElementReference((Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 185710, 185760);
                return return_v;
            }

        }

        static ArrayElementReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 183397, 185768);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 183397, 185768);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 183397, 185768);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 183397, 185768);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_183803_183843(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 183803, 183843);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_183868_183901(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 183868, 183901);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_183727_183740_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 183519, 183939);
            return return_v;
        }

    }
    internal sealed partial class LocalReferenceOperation : Operation, ILocalReferenceOperation
    {
        internal LocalReferenceOperation(ILocalSymbol local, bool isDeclaration, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_186090_186103_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 185882, 186297);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186307, 186341);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186351, 186385);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186684, 186726);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186736, 186800);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186149, 186163);

                Local = local;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186177, 186207);

                IsDeclaration = isDeclaration;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186221, 186260);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186274, 186286);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 185882, 186297);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 185882, 186297);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185882, 186297);
            }
        }

        public ILocalSymbol Local { get; }

        public bool IsDeclaration { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 186457, 186515);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186460, 186515);
                throw f_306_186466_186515((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 186457, 186515);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 186457, 186515);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 186457, 186515);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_186466_186515((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 186466, 186515);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 186635, 186673);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186638, 186673);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 186635, 186673);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 186635, 186673);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 186635, 186673);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 186845, 186876);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186848, 186876);
                    return OperationKind.LocalReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 186845, 186876);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 186845, 186876);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 186845, 186876);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 186941, 186977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 186944, 186977);
                f_306_186944_186977(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 186941, 186977);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 186941, 186977);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 186941, 186977);
            }

            int
            f_306_186944_186977(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
            operation)
            {
                this_param.VisitLocalReference((Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 186944, 186977);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 187130, 187176);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187133, 187176);
                return f_306_187133_187176(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 187130, 187176);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 187130, 187176);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 187130, 187176);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_187133_187176(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitLocalReference((Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 187133, 187176);
                return return_v;
            }

        }

        static LocalReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 185774, 187184);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 185774, 187184);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 185774, 187184);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 185774, 187184);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_186090_186103_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 185882, 186297);
            return return_v;
        }

    }
    internal sealed partial class ParameterReferenceOperation : Operation, IParameterReferenceOperation
    {
        internal ParameterReferenceOperation(IParameterSymbol parameter, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_187476_187489_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 187306, 187594);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187604, 187646);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187945, 187987);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187535, 187557);

                Parameter = parameter;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187571, 187583);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 187306, 187594);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 187306, 187594);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 187306, 187594);
            }
        }

        public IParameterSymbol Parameter { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 187718, 187776);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187721, 187776);
                throw f_306_187727_187776((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 187718, 187776);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 187718, 187776);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 187718, 187776);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_187727_187776((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 187727, 187776);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 187896, 187934);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 187899, 187934);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 187896, 187934);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 187896, 187934);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 187896, 187934);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 188053, 188060);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188056, 188060);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 188053, 188060);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 188053, 188060);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188053, 188060);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 188106, 188141);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188109, 188141);
                    return OperationKind.ParameterReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 188106, 188141);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 188106, 188141);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188106, 188141);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 188206, 188246);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188209, 188246);
                f_306_188209_188246(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 188206, 188246);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 188206, 188246);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188206, 188246);
            }

            int
            f_306_188209_188246(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
            operation)
            {
                this_param.VisitParameterReference((Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 188209, 188246);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 188399, 188449);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188402, 188449);
                return f_306_188402_188449(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 188399, 188449);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 188399, 188449);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188399, 188449);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_188402_188449(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitParameterReference((Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 188402, 188449);
                return return_v;
            }

        }

        static ParameterReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 187190, 188457);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 187190, 188457);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 187190, 188457);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 187190, 188457);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_187476_187489_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 187306, 187594);
            return return_v;
        }

    }
    internal abstract partial class BaseMemberReferenceOperation : Operation, IMemberReferenceOperation
    {
        protected BaseMemberReferenceOperation(IOperation? instance, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_188726_188739_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 188579, 188842);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188852, 188888);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 188785, 188831);

                Instance = f_306_188796_188830(instance, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 188579, 188842);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 188579, 188842);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188579, 188842);
            }
        }

        public IOperation? Instance { get; }

        static BaseMemberReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 188463, 188895);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 188463, 188895);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188463, 188895);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 188463, 188895);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_188796_188830(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.BaseMemberReferenceOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 188796, 188830);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_188726_188739_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 188579, 188842);
            return return_v;
        }

    }
    internal sealed partial class FieldReferenceOperation : BaseMemberReferenceOperation, IFieldReferenceOperation
    {
        internal FieldReferenceOperation(IFieldSymbol field, bool isDeclaration, IOperation? instance, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_189258_189266_C(instance), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 189028, 189475);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189485, 189519);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189529, 189563);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 190404, 190446);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 190456, 190520);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189327, 189341);

                Field = field;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189355, 189385);

                IsDeclaration = isDeclaration;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189399, 189438);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189452, 189464);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 189028, 189475);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 189028, 189475);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 189028, 189475);
            }
        }

        public IFieldSymbol Field { get; }

        public bool IsDeclaration { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 189648, 189846);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189651, 189846);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189697, 189718) || true) && (f_306_189702_189710() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 189697, 189718) || true)
                        => f_306_189743_189751(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 189770, 189830) && DynAbs.Tracing.TraceSender.Expression_True(306, 189770, 189830))
    => throw f_306_189781_189830((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 189648, 189846);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 189648, 189846);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 189648, 189846);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_189702_189710()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 189702, 189710);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_189743_189751()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 189743, 189751);
                return return_v;
            }


            System.Exception
            f_306_189781_189830((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 189781, 189830);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 190565, 190596);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 190568, 190596);
                    return OperationKind.FieldReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 190565, 190596);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 190565, 190596);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 190565, 190596);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 190661, 190697);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 190664, 190697);
                f_306_190664_190697(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 190661, 190697);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 190661, 190697);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 190661, 190697);
            }

            int
            f_306_190664_190697(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
            operation)
            {
                this_param.VisitFieldReference((Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 190664, 190697);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 190850, 190896);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 190853, 190896);
                return f_306_190853_190896(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 190850, 190896);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 190850, 190896);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 190850, 190896);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_190853_190896(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitFieldReference((Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 190853, 190896);
                return return_v;
            }

        }

        static FieldReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 188901, 190904);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 188901, 190904);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 188901, 190904);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 188901, 190904);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_189258_189266_C(Microsoft.CodeAnalysis.IOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 189028, 189475);
            return return_v;
        }

    }
    internal sealed partial class MethodReferenceOperation : BaseMemberReferenceOperation, IMethodReferenceOperation
    {
        internal MethodReferenceOperation(IMethodSymbol method, bool isVirtual, IOperation? instance, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_191238_191246_C(instance), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 191039, 191396);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191406, 191442);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191452, 191482);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 192323, 192365);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191307, 191323);

                Method = method;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191337, 191359);

                IsVirtual = isVirtual;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191373, 191385);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 191039, 191396);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 191039, 191396);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 191039, 191396);
            }
        }

        public IMethodSymbol Method { get; }

        public bool IsVirtual { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 191567, 191765);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191570, 191765);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191616, 191637) || true) && (f_306_191621_191629() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 191616, 191637) || true)
                        => f_306_191662_191670(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 191689, 191749) && DynAbs.Tracing.TraceSender.Expression_True(306, 191689, 191749))
    => throw f_306_191700_191749((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 191567, 191765);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 191567, 191765);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 191567, 191765);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_191621_191629()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 191621, 191629);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_191662_191670()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 191662, 191670);
                return return_v;
            }


            System.Exception
            f_306_191700_191749((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 191700, 191749);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 192431, 192438);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 192434, 192438);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 192431, 192438);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 192431, 192438);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192431, 192438);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 192484, 192516);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 192487, 192516);
                    return OperationKind.MethodReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 192484, 192516);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 192484, 192516);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192484, 192516);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 192581, 192618);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 192584, 192618);
                f_306_192584_192618(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 192581, 192618);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 192581, 192618);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192581, 192618);
            }

            int
            f_306_192584_192618(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
            operation)
            {
                this_param.VisitMethodReference((Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 192584, 192618);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 192771, 192818);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 192774, 192818);
                return f_306_192774_192818(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 192771, 192818);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 192771, 192818);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192771, 192818);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_192774_192818(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitMethodReference((Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 192774, 192818);
                return return_v;
            }

        }

        static MethodReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 190910, 192826);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 190910, 192826);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 190910, 192826);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 190910, 192826);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_191238_191246_C(Microsoft.CodeAnalysis.IOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 191039, 191396);
            return return_v;
        }

    }
    internal sealed partial class PropertyReferenceOperation : BaseMemberReferenceOperation, IPropertyReferenceOperation
    {
        internal PropertyReferenceOperation(IPropertySymbol property, ImmutableArray<IArgumentOperation> arguments, IOperation? instance, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_193200_193208_C(instance), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 192965, 193388);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193398, 193438);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 194695, 194737);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193269, 193289);

                Property = property;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193303, 193351);

                Arguments = f_306_193315_193350(arguments, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193365, 193377);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 192965, 193388);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 192965, 193388);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192965, 193388);
            }
        }

        public IPropertySymbol Property { get; }

        public ImmutableArray<IArgumentOperation> Arguments { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 193593, 193882);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193596, 193882);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193642, 193663) || true) && (f_306_193647_193655() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 193642, 193663) || true)
                        => f_306_193688_193696(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193717, 193746) || true) && (index < f_306_193730_193739().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 193717, 193746) || true)
                        => f_306_193771_193780()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 193806, 193866) && DynAbs.Tracing.TraceSender.Expression_True(306, 193806, 193866))
    => throw f_306_193817_193866((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 193593, 193882);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 193593, 193882);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 193593, 193882);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_193647_193655()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 193647, 193655);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_193688_193696()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 193688, 193696);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_193730_193739()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 193730, 193739);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_193771_193780()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 193771, 193780);
                return return_v;
            }


            System.Exception
            f_306_193817_193866((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 193817, 193866);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Arguments.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Arguments.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 194803, 194810);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 194806, 194810);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 194803, 194810);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 194803, 194810);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 194803, 194810);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 194856, 194890);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 194859, 194890);
                    return OperationKind.PropertyReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 194856, 194890);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 194856, 194890);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 194856, 194890);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 194955, 194994);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 194958, 194994);
                f_306_194958_194994(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 194955, 194994);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 194955, 194994);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 194955, 194994);
            }

            int
            f_306_194958_194994(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
            operation)
            {
                this_param.VisitPropertyReference((Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 194958, 194994);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 195147, 195196);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195150, 195196);
                return f_306_195150_195196(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 195147, 195196);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 195147, 195196);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 195147, 195196);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_195150_195196(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitPropertyReference((Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 195150, 195196);
                return return_v;
            }

        }

        static PropertyReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 192832, 195204);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 192832, 195204);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 192832, 195204);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 192832, 195204);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        f_306_193315_193350(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        operations, Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 193315, 193350);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_193200_193208_C(Microsoft.CodeAnalysis.IOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 192965, 193388);
            return return_v;
        }

    }
    internal sealed partial class EventReferenceOperation : BaseMemberReferenceOperation, IEventReferenceOperation
    {
        internal EventReferenceOperation(IEventSymbol @event, IOperation? instance, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_195518_195526_C(instance), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 195337, 195639);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195649, 195683);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 196524, 196566);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195587, 195602);

                Event = @event;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195616, 195628);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 195337, 195639);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 195337, 195639);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 195337, 195639);
            }
        }

        public IEventSymbol Event { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 195768, 195966);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195771, 195966);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195817, 195838) || true) && (f_306_195822_195830() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 195817, 195838) || true)
                        => f_306_195863_195871(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 195890, 195950) && DynAbs.Tracing.TraceSender.Expression_True(306, 195890, 195950))
    => throw f_306_195901_195950((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 195768, 195966);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 195768, 195966);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 195768, 195966);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_195822_195830()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 195822, 195830);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_195863_195871()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 195863, 195871);
                return return_v;
            }


            System.Exception
            f_306_195901_195950((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 195901, 195950);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 196632, 196639);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 196635, 196639);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 196632, 196639);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 196632, 196639);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 196632, 196639);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 196685, 196716);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 196688, 196716);
                    return OperationKind.EventReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 196685, 196716);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 196685, 196716);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 196685, 196716);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 196781, 196817);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 196784, 196817);
                f_306_196784_196817(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 196781, 196817);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 196781, 196817);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 196781, 196817);
            }

            int
            f_306_196784_196817(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.EventReferenceOperation
            operation)
            {
                this_param.VisitEventReference((Microsoft.CodeAnalysis.Operations.IEventReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 196784, 196817);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 196970, 197016);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 196973, 197016);
                return f_306_196973_197016(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 196970, 197016);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 196970, 197016);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 196970, 197016);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_196973_197016(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.EventReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitEventReference((Microsoft.CodeAnalysis.Operations.IEventReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 196973, 197016);
                return return_v;
            }

        }

        static EventReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 195210, 197024);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 195210, 197024);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 195210, 197024);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 195210, 197024);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_195518_195526_C(Microsoft.CodeAnalysis.IOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 195337, 195639);
            return return_v;
        }

    }
    internal sealed partial class UnaryOperation : Operation, IUnaryOperation
    {
        internal UnaryOperation(UnaryOperatorKind operatorKind, IOperation operand, bool isLifted, bool isChecked, IMethodSymbol? operatorMethod, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_197393_197406_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 197120, 197744);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197754, 197800);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197810, 197844);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197854, 197883);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197893, 197923);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197933, 197978);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198816, 198858);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198868, 198932);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197452, 197480);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197494, 197538);

                Operand = f_306_197504_197537(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197552, 197572);

                IsLifted = isLifted;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197586, 197608);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197622, 197654);

                OperatorMethod = operatorMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197668, 197707);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 197721, 197733);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 197120, 197744);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 197120, 197744);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 197120, 197744);
            }
        }

        public UnaryOperatorKind OperatorKind { get; }

        public IOperation Operand { get; }

        public bool IsLifted { get; }

        public bool IsChecked { get; }

        public IMethodSymbol? OperatorMethod { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 198063, 198259);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198066, 198259);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198112, 198132) || true) && (f_306_198117_198124() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 198112, 198132) || true)
                        => f_306_198157_198164(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198183, 198243) && DynAbs.Tracing.TraceSender.Expression_True(306, 198183, 198243))
    => throw f_306_198194_198243((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 198063, 198259);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 198063, 198259);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 198063, 198259);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_198117_198124()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 198117, 198124);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_198157_198164()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 198157, 198164);
                return return_v;
            }


            System.Exception
            f_306_198194_198243((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 198194, 198243);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 198977, 198999);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 198980, 198999);
                    return OperationKind.Unary; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 198977, 198999);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 198977, 198999);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 198977, 198999);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 199064, 199099);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199067, 199099);
                f_306_199067_199099(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 199064, 199099);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 199064, 199099);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 199064, 199099);
            }

            int
            f_306_199067_199099(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.UnaryOperation
            operation)
            {
                this_param.VisitUnaryOperator((Microsoft.CodeAnalysis.Operations.IUnaryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 199067, 199099);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 199252, 199297);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199255, 199297);
                return f_306_199255_199297(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 199252, 199297);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 199252, 199297);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 199252, 199297);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_199255_199297(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.UnaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitUnaryOperator((Microsoft.CodeAnalysis.Operations.IUnaryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 199255, 199297);
                return return_v;
            }

        }

        static UnaryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 197030, 199305);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 197030, 199305);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 197030, 199305);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 197030, 199305);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_197504_197537(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.UnaryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 197504, 197537);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_197393_197406_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 197120, 197744);
            return return_v;
        }

    }
    internal sealed partial class BinaryOperation : Operation, IBinaryOperation
    {
        internal BinaryOperation(BinaryOperatorKind operatorKind, IOperation leftOperand, IOperation rightOperand, bool isLifted, bool isChecked, bool isCompareText, IMethodSymbol? operatorMethod, IMethodSymbol? unaryOperatorMethod, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_199763_199776_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 199403, 200290);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200300, 200347);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200357, 200395);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200405, 200444);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200454, 200483);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200493, 200523);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200533, 200567);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200577, 200622);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200632, 200682);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 201747, 201789);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 201799, 201863);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199822, 199850);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199864, 199916);

                LeftOperand = f_306_199878_199915(leftOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199930, 199984);

                RightOperand = f_306_199945_199983(rightOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 199998, 200018);

                IsLifted = isLifted;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200032, 200054);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200068, 200098);

                IsCompareText = isCompareText;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200112, 200144);

                OperatorMethod = operatorMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200158, 200200);

                UnaryOperatorMethod = unaryOperatorMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200214, 200253);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200267, 200279);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 199403, 200290);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 199403, 200290);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 199403, 200290);
            }
        }

        public BinaryOperatorKind OperatorKind { get; }

        public IOperation LeftOperand { get; }

        public IOperation RightOperand { get; }

        public bool IsLifted { get; }

        public bool IsChecked { get; }

        public bool IsCompareText { get; }

        public IMethodSymbol? OperatorMethod { get; }

        public IMethodSymbol? UnaryOperatorMethod { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 200767, 201054);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200770, 201054);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200816, 200840) || true) && (f_306_200821_200832() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 200816, 200840) || true)
                        => f_306_200865_200876(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200897, 200922) || true) && (f_306_200902_200914() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 200897, 200922) || true)
                        => f_306_200947_200959(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 200978, 201038) && DynAbs.Tracing.TraceSender.Expression_True(306, 200978, 201038))
    => throw f_306_200989_201038((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 200767, 201054);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 200767, 201054);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 200767, 201054);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_200821_200832()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 200821, 200832);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_200865_200876()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 200865, 200876);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_200902_200914()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 200902, 200914);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_200947_200959()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 200947, 200959);
                return return_v;
            }


            System.Exception
            f_306_200989_201038((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 200989, 201038);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LeftOperand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (RightOperand != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 201908, 201931);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 201911, 201931);
                    return OperationKind.Binary; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 201908, 201931);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 201908, 201931);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 201908, 201931);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 201996, 202032);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 201999, 202032);
                f_306_201999_202032(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 201996, 202032);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 201996, 202032);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 201996, 202032);
            }

            int
            f_306_201999_202032(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.BinaryOperation
            operation)
            {
                this_param.VisitBinaryOperator((Microsoft.CodeAnalysis.Operations.IBinaryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 201999, 202032);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 202185, 202231);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202188, 202231);
                return f_306_202188_202231(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 202185, 202231);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 202185, 202231);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 202185, 202231);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_202188_202231(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.BinaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitBinaryOperator((Microsoft.CodeAnalysis.Operations.IBinaryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 202188, 202231);
                return return_v;
            }

        }

        static BinaryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 199311, 202239);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 199311, 202239);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 199311, 202239);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 199311, 202239);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_199878_199915(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BinaryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 199878, 199915);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_199945_199983(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BinaryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 199945, 199983);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_199763_199776_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 199403, 200290);
            return return_v;
        }

    }
    internal sealed partial class ConditionalOperation : Operation, IConditionalOperation
    {
        internal ConditionalOperation(IOperation condition, IOperation whenTrue, IOperation? whenFalse, bool isRef, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_202590_202603_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 202347, 202937);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202947, 202983);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202993, 203028);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203038, 203075);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203085, 203111);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 204364, 204406);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 204416, 204480);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202649, 202697);

                Condition = f_306_202661_202696(condition, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202711, 202757);

                WhenTrue = f_306_202722_202756(whenTrue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202771, 202819);

                WhenFalse = f_306_202783_202818(whenFalse, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202833, 202847);

                IsRef = isRef;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202861, 202900);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 202914, 202926);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 202347, 202937);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 202347, 202937);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 202347, 202937);
            }
        }

        public IOperation Condition { get; }

        public IOperation WhenTrue { get; }

        public IOperation? WhenFalse { get; }

        public bool IsRef { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 203196, 203548);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203199, 203548);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203245, 203267) || true) && (f_306_203250_203259() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 203245, 203267) || true)
                        => f_306_203292_203301(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203322, 203343) || true) && (f_306_203327_203335() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 203322, 203343) || true)
                        => f_306_203368_203376(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203397, 203419) || true) && (f_306_203402_203411() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 203397, 203419) || true)
                        => f_306_203444_203453(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 203472, 203532) && DynAbs.Tracing.TraceSender.Expression_True(306, 203472, 203532))
    => throw f_306_203483_203532((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 203196, 203548);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 203196, 203548);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 203196, 203548);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_203250_203259()
            {
                var return_v = Condition;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203250, 203259);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_203292_203301()
            {
                var return_v = Condition;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203292, 203301);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_203327_203335()
            {
                var return_v = WhenTrue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203327, 203335);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_203368_203376()
            {
                var return_v = WhenTrue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203368, 203376);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_203402_203411()
            {
                var return_v = WhenFalse;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203402, 203411);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_203444_203453()
            {
                var return_v = WhenFalse;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 203444, 203453);
                return return_v;
            }


            System.Exception
            f_306_203483_203532((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 203483, 203532);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Condition != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (WhenTrue != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (WhenFalse != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 204525, 204553);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 204528, 204553);
                    return OperationKind.Conditional; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 204525, 204553);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 204525, 204553);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 204525, 204553);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 204618, 204651);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 204621, 204651);
                f_306_204621_204651(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 204618, 204651);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 204618, 204651);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 204618, 204651);
            }

            int
            f_306_204621_204651(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalOperation
            operation)
            {
                this_param.VisitConditional((Microsoft.CodeAnalysis.Operations.IConditionalOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 204621, 204651);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 204804, 204847);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 204807, 204847);
                return f_306_204807_204847(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 204804, 204847);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 204804, 204847);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 204804, 204847);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_204807_204847(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConditional((Microsoft.CodeAnalysis.Operations.IConditionalOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 204807, 204847);
                return return_v;
            }

        }

        static ConditionalOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 202245, 204855);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 202245, 204855);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 202245, 204855);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 202245, 204855);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_202661_202696(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConditionalOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 202661, 202696);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_202722_202756(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConditionalOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 202722, 202756);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_202783_202818(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.ConditionalOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 202783, 202818);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_202590_202603_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 202347, 202937);
            return return_v;
        }

    }
    internal sealed partial class CoalesceOperation : Operation, ICoalesceOperation
    {
        internal CoalesceOperation(IOperation value, IOperation whenNull, IConvertibleConversion valueConversion, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_205198_205211_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 204957, 205506);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205516, 205548);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205558, 205593);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205603, 205670);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 206806, 206848);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 206858, 206922);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205257, 205297);

                Value = f_306_205265_205296(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205311, 205357);

                WhenNull = f_306_205322_205356(whenNull, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205371, 205416);

                ValueConversionConvertible = valueConversion;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205430, 205469);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205483, 205495);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 204957, 205506);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 204957, 205506);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 204957, 205506);
            }
        }

        public IOperation Value { get; }

        public IOperation WhenNull { get; }

        internal IConvertibleConversion ValueConversionConvertible { get; }

        public CommonConversion ValueConversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 205720, 205770);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205723, 205770);
                    return f_306_205723_205770(f_306_205723_205749()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 205720, 205770);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 205720, 205770);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 205720, 205770);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 205856, 206123);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205859, 206123);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205905, 205923) || true) && (f_306_205910_205915() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 205905, 205923) || true)
                        => f_306_205948_205953(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 205974, 205995) || true) && (f_306_205979_205987() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 205974, 205995) || true)
                        => f_306_206020_206028(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 206047, 206107) && DynAbs.Tracing.TraceSender.Expression_True(306, 206047, 206107))
    => throw f_306_206058_206107((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 205856, 206123);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 205856, 206123);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 205856, 206123);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_205910_205915()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 205910, 205915);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_205948_205953()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 205948, 205953);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_205979_205987()
            {
                var return_v = WhenNull;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 205979, 205987);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_206020_206028()
            {
                var return_v = WhenNull;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 206020, 206028);
                return return_v;
            }


            System.Exception
            f_306_206058_206107((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 206058, 206107);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (WhenNull != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 206967, 206992);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 206970, 206992);
                    return OperationKind.Coalesce; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 206967, 206992);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 206967, 206992);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 206967, 206992);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 207057, 207087);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207060, 207087);
                f_306_207060_207087(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 207057, 207087);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 207057, 207087);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 207057, 207087);
            }

            int
            f_306_207060_207087(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.CoalesceOperation
            operation)
            {
                this_param.VisitCoalesce((Microsoft.CodeAnalysis.Operations.ICoalesceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 207060, 207087);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 207240, 207280);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207243, 207280);
                return f_306_207243_207280(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 207240, 207280);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 207240, 207280);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 207240, 207280);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_207243_207280(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.CoalesceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitCoalesce((Microsoft.CodeAnalysis.Operations.ICoalesceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 207243, 207280);
                return return_v;
            }

        }

        static CoalesceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 204861, 207288);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 204861, 207288);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 204861, 207288);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 204861, 207288);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_205265_205296(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.CoalesceOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 205265, 205296);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_205322_205356(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.CoalesceOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 205322, 205356);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_205198_205211_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 204957, 205506);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_205723_205749()
        {
            var return_v = ValueConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 205723, 205749);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_205723_205770(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 205723, 205770);
            return return_v;
        }

    }
    internal sealed partial class AnonymousFunctionOperation : Operation, IAnonymousFunctionOperation
    {
        internal AnonymousFunctionOperation(IMethodSymbol symbol, IBlockOperation body, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_207574_207587_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 207408, 207712);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207722, 207758);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207768, 207804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207633, 207649);

                Symbol = symbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207663, 207701);

                Body = f_306_207670_207700(body, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 207408, 207712);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 207408, 207712);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 207408, 207712);
            }
        }

        public IMethodSymbol Symbol { get; }

        public IBlockOperation Body { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 207889, 208079);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207892, 208079);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 207938, 207955) || true) && (f_306_207943_207947() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 207938, 207955) || true)
                        => f_306_207980_207984(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 208003, 208063) && DynAbs.Tracing.TraceSender.Expression_True(306, 208003, 208063))
    => throw f_306_208014_208063((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 207889, 208079);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 207889, 208079);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 207889, 208079);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_207943_207947()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 207943, 207947);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_207980_207984()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 207980, 207984);
                return return_v;
            }


            System.Exception
            f_306_208014_208063((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 208014, 208063);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Body != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 208667, 208674);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 208670, 208674);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 208667, 208674);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 208667, 208674);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 208667, 208674);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 208741, 208748);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 208744, 208748);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 208741, 208748);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 208741, 208748);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 208741, 208748);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 208794, 208828);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 208797, 208828);
                    return OperationKind.AnonymousFunction; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 208794, 208828);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 208794, 208828);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 208794, 208828);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 208893, 208932);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 208896, 208932);
                f_306_208896_208932(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 208893, 208932);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 208893, 208932);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 208893, 208932);
            }

            int
            f_306_208896_208932(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
            operation)
            {
                this_param.VisitAnonymousFunction((Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 208896, 208932);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 209085, 209134);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209088, 209134);
                return f_306_209088_209134(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 209085, 209134);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 209085, 209134);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 209085, 209134);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_209088_209134(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitAnonymousFunction((Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 209088, 209134);
                return return_v;
            }

        }

        static AnonymousFunctionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 207294, 209142);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 207294, 209142);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 207294, 209142);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 207294, 209142);

        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_207670_207700(Microsoft.CodeAnalysis.Operations.IBlockOperation
        operation, Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 207670, 207700);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_207574_207587_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 207408, 207712);
            return return_v;
        }

    }
    internal sealed partial class ObjectCreationOperation : Operation, IObjectCreationOperation
    {
        internal ObjectCreationOperation(IMethodSymbol? constructor, IObjectOrCollectionInitializerOperation? initializer, ImmutableArray<IArgumentOperation> arguments, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_209552_209565_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 209256, 209855);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209865, 209907);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209917, 209985);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 211251, 211293);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 211303, 211367);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209611, 209637);

                Constructor = constructor;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209651, 209703);

                Initializer = f_306_209665_209702(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209717, 209765);

                Arguments = f_306_209729_209764(arguments, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209779, 209818);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 209832, 209844);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 209256, 209855);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 209256, 209855);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 209256, 209855);
            }
        }

        public IMethodSymbol? Constructor { get; }

        public IObjectOrCollectionInitializerOperation? Initializer { get; }

        public ImmutableArray<IArgumentOperation> Arguments { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 210140, 210435);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 210143, 210435);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 210189, 210218) || true) && (index < f_306_210202_210211().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 210189, 210218) || true)
                        => f_306_210243_210252()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 210280, 210304) || true) && (f_306_210285_210296() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 210280, 210304) || true)
                        => f_306_210329_210340(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 210359, 210419) && DynAbs.Tracing.TraceSender.Expression_True(306, 210359, 210419))
    => throw f_306_210370_210419((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 210140, 210435);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 210140, 210435);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 210140, 210435);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_210202_210211()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 210202, 210211);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
            f_306_210243_210252()
            {
                var return_v = Arguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 210243, 210252);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
            f_306_210285_210296()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 210285, 210296);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_210329_210340()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 210329, 210340);
                return return_v;
            }


            System.Exception
            f_306_210370_210419((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 210370, 210419);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Arguments.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Arguments.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (Initializer != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 211412, 211443);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 211415, 211443);
                    return OperationKind.ObjectCreation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 211412, 211443);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 211412, 211443);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 211412, 211443);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 211508, 211544);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 211511, 211544);
                f_306_211511_211544(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 211508, 211544);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 211508, 211544);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 211508, 211544);
            }

            int
            f_306_211511_211544(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
            operation)
            {
                this_param.VisitObjectCreation((Microsoft.CodeAnalysis.Operations.IObjectCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 211511, 211544);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 211697, 211743);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 211700, 211743);
                return f_306_211700_211743(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 211697, 211743);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 211697, 211743);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 211697, 211743);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_211700_211743(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitObjectCreation((Microsoft.CodeAnalysis.Operations.IObjectCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 211700, 211743);
                return return_v;
            }

        }

        static ObjectCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 209148, 211751);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 209148, 211751);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 209148, 211751);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 209148, 211751);

        static Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        f_306_209665_209702(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 209665, 209702);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        f_306_209729_209764(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
        operations, Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 209729, 209764);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_209552_209565_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 209256, 209855);
            return return_v;
        }

    }
    internal sealed partial class TypeParameterObjectCreationOperation : Operation, ITypeParameterObjectCreationOperation
    {
        internal TypeParameterObjectCreationOperation(IObjectOrCollectionInitializerOperation? initializer, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_212096_212109_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 211891, 212244);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212254, 212322);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 213172, 213214);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212155, 212207);

                Initializer = f_306_212169_212206(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212221, 212233);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 211891, 212244);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 211891, 212244);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 211891, 212244);
            }
        }

        public IObjectOrCollectionInitializerOperation? Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 212407, 212611);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212410, 212611);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212456, 212480) || true) && (f_306_212461_212472() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 212456, 212480) || true)
                        => f_306_212505_212516(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 212535, 212595) && DynAbs.Tracing.TraceSender.Expression_True(306, 212535, 212595))
    => throw f_306_212546_212595((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 212407, 212611);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 212407, 212611);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 212407, 212611);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
            f_306_212461_212472()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 212461, 212472);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_212505_212516()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 212505, 212516);
                return return_v;
            }


            System.Exception
            f_306_212546_212595((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 212546, 212595);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Initializer != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 213280, 213287);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 213283, 213287);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 213280, 213287);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 213280, 213287);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213280, 213287);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 213333, 213377);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 213336, 213377);
                    return OperationKind.TypeParameterObjectCreation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 213333, 213377);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 213333, 213377);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213333, 213377);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 213442, 213491);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 213445, 213491);
                f_306_213445_213491(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 213442, 213491);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 213442, 213491);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213442, 213491);
            }

            int
            f_306_213445_213491(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
            operation)
            {
                this_param.VisitTypeParameterObjectCreation((Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 213445, 213491);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 213644, 213703);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 213647, 213703);
                return f_306_213647_213703(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 213644, 213703);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 213644, 213703);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213644, 213703);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_213647_213703(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTypeParameterObjectCreation((Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 213647, 213703);
                return return_v;
            }

        }

        static TypeParameterObjectCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 211757, 213711);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 211757, 213711);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 211757, 213711);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 211757, 213711);

        static Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        f_306_212169_212206(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 212169, 212206);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_212096_212109_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 211891, 212244);
            return return_v;
        }

    }
    internal sealed partial class ArrayCreationOperation : Operation, IArrayCreationOperation
    {
        internal ArrayCreationOperation(ImmutableArray<IOperation> dimensionSizes, IArrayInitializerOperation? initializer, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_214044_214057_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 213823, 214264);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214341, 214396);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 215612, 215654);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214103, 214161);

                DimensionSizes = f_306_214120_214160(dimensionSizes, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214175, 214227);

                Initializer = f_306_214189_214226(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214241, 214253);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 213823, 214264);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 213823, 214264);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213823, 214264);
            }
        }

        public ImmutableArray<IOperation> DimensionSizes { get; }

        public IArrayInitializerOperation? Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 214481, 214786);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214484, 214786);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214530, 214564) || true) && (index < f_306_214543_214557().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 214530, 214564) || true)
                        => f_306_214589_214603()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214631, 214655) || true) && (f_306_214636_214647() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 214631, 214655) || true)
                        => f_306_214680_214691(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 214710, 214770) && DynAbs.Tracing.TraceSender.Expression_True(306, 214710, 214770))
    => throw f_306_214721_214770((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 214481, 214786);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 214481, 214786);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 214481, 214786);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_214543_214557()
            {
                var return_v = DimensionSizes;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 214543, 214557);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_214589_214603()
            {
                var return_v = DimensionSizes;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 214589, 214603);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
            f_306_214636_214647()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 214636, 214647);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation
            f_306_214680_214691()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 214680, 214691);
                return return_v;
            }


            System.Exception
            f_306_214721_214770((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 214721, 214770);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!DimensionSizes.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < DimensionSizes.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (Initializer != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 215720, 215727);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 215723, 215727);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 215720, 215727);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 215720, 215727);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 215720, 215727);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 215773, 215803);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 215776, 215803);
                    return OperationKind.ArrayCreation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 215773, 215803);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 215773, 215803);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 215773, 215803);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 215868, 215903);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 215871, 215903);
                f_306_215871_215903(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 215868, 215903);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 215868, 215903);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 215868, 215903);
            }

            int
            f_306_215871_215903(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
            operation)
            {
                this_param.VisitArrayCreation((Microsoft.CodeAnalysis.Operations.IArrayCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 215871, 215903);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 216056, 216101);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216059, 216101);
                return f_306_216059_216101(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 216056, 216101);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 216056, 216101);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 216056, 216101);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_216059_216101(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitArrayCreation((Microsoft.CodeAnalysis.Operations.IArrayCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 216059, 216101);
                return return_v;
            }

        }

        static ArrayCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 213717, 216109);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 213717, 216109);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 213717, 216109);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 213717, 216109);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_214120_214160(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 214120, 214160);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
        f_306_214189_214226(Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 214189, 214226);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_214044_214057_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 213823, 214264);
            return return_v;
        }

    }
    internal sealed partial class InstanceReferenceOperation : Operation, IInstanceReferenceOperation
    {
        internal InstanceReferenceOperation(InstanceReferenceKind referenceKind, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_216407_216420_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 216229, 216533);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216543, 216594);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216893, 216935);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216466, 216496);

                ReferenceKind = referenceKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216510, 216522);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 216229, 216533);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 216229, 216533);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 216229, 216533);
            }
        }

        public InstanceReferenceKind ReferenceKind { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 216666, 216724);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216669, 216724);
                throw f_306_216675_216724((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 216666, 216724);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 216666, 216724);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 216666, 216724);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_216675_216724((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 216675, 216724);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 216844, 216882);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 216847, 216882);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 216844, 216882);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 216844, 216882);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 216844, 216882);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 217001, 217008);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217004, 217008);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 217001, 217008);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 217001, 217008);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217001, 217008);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 217054, 217088);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217057, 217088);
                    return OperationKind.InstanceReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 217054, 217088);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 217054, 217088);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217054, 217088);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 217153, 217192);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217156, 217192);
                f_306_217156_217192(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 217153, 217192);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 217153, 217192);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217153, 217192);
            }

            int
            f_306_217156_217192(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
            operation)
            {
                this_param.VisitInstanceReference((Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 217156, 217192);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 217345, 217394);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217348, 217394);
                return f_306_217348_217394(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 217345, 217394);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 217345, 217394);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217345, 217394);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_217348_217394(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitInstanceReference((Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 217348, 217394);
                return return_v;
            }

        }

        static InstanceReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 216115, 217402);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 216115, 217402);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 216115, 217402);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 216115, 217402);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_216407_216420_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 216229, 216533);
            return return_v;
        }

    }
    internal sealed partial class IsTypeOperation : Operation, IIsTypeOperation
    {
        internal IsTypeOperation(IOperation valueOperand, ITypeSymbol typeOperand, bool isNegated, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_217696_217709_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 217500, 217922);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217932, 217971);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217981, 218020);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 218030, 218060);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 218913, 218955);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217755, 217809);

                ValueOperand = f_306_217770_217808(valueOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217823, 217849);

                TypeOperand = typeOperand;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217863, 217885);

                IsNegated = isNegated;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 217899, 217911);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 217500, 217922);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 217500, 217922);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217500, 217922);
            }
        }

        public IOperation ValueOperand { get; }

        public ITypeSymbol TypeOperand { get; }

        public bool IsNegated { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 218145, 218351);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 218148, 218351);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 218194, 218219) || true) && (f_306_218199_218211() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 218194, 218219) || true)
                        => f_306_218244_218256(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 218275, 218335) && DynAbs.Tracing.TraceSender.Expression_True(306, 218275, 218335))
    => throw f_306_218286_218335((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 218145, 218351);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 218145, 218351);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 218145, 218351);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_218199_218211()
            {
                var return_v = ValueOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 218199, 218211);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_218244_218256()
            {
                var return_v = ValueOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 218244, 218256);
                return return_v;
            }


            System.Exception
            f_306_218286_218335((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 218286, 218335);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (ValueOperand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 219021, 219028);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219024, 219028);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 219021, 219028);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219021, 219028);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219021, 219028);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 219074, 219097);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219077, 219097);
                    return OperationKind.IsType; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 219074, 219097);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219074, 219097);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219074, 219097);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 219162, 219190);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219165, 219190);
                f_306_219165_219190(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 219162, 219190);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219162, 219190);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219162, 219190);
            }

            int
            f_306_219165_219190(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IsTypeOperation
            operation)
            {
                this_param.VisitIsType((Microsoft.CodeAnalysis.Operations.IIsTypeOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 219165, 219190);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 219343, 219381);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219346, 219381);
                return f_306_219346_219381(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 219343, 219381);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219343, 219381);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219343, 219381);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_219346_219381(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IsTypeOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitIsType((Microsoft.CodeAnalysis.Operations.IIsTypeOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 219346, 219381);
                return return_v;
            }

        }

        static IsTypeOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 217408, 219389);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 217408, 219389);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 217408, 219389);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 217408, 219389);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_217770_217808(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.IsTypeOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 217770, 217808);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_217696_217709_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 217500, 217922);
            return return_v;
        }

    }
    internal sealed partial class AwaitOperation : Operation, IAwaitOperation
    {
        internal AwaitOperation(IOperation operation, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_219636_219649_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 219485, 219780);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219790, 219826);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 220670, 220712);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219695, 219743);

                Operation = f_306_219707_219742(operation, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219757, 219769);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 219485, 219780);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219485, 219780);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219485, 219780);
            }
        }

        public IOperation Operation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 219911, 220111);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219914, 220111);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 219960, 219982) || true) && (f_306_219965_219974() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 219960, 219982) || true)
                        => f_306_220007_220016(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 220035, 220095) && DynAbs.Tracing.TraceSender.Expression_True(306, 220035, 220095))
    => throw f_306_220046_220095((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 219911, 220111);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 219911, 220111);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219911, 220111);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_219965_219974()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 219965, 219974);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_220007_220016()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 220007, 220016);
                return return_v;
            }


            System.Exception
            f_306_220046_220095((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 220046, 220095);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operation != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 220778, 220785);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 220781, 220785);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 220778, 220785);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 220778, 220785);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 220778, 220785);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 220831, 220853);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 220834, 220853);
                    return OperationKind.Await; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 220831, 220853);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 220831, 220853);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 220831, 220853);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 220918, 220945);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 220921, 220945);
                f_306_220921_220945(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 220918, 220945);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 220918, 220945);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 220918, 220945);
            }

            int
            f_306_220921_220945(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.AwaitOperation
            operation)
            {
                this_param.VisitAwait((Microsoft.CodeAnalysis.Operations.IAwaitOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 220921, 220945);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 221098, 221135);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 221101, 221135);
                return f_306_221101_221135(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 221098, 221135);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 221098, 221135);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 221098, 221135);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_221101_221135(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.AwaitOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitAwait((Microsoft.CodeAnalysis.Operations.IAwaitOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 221101, 221135);
                return return_v;
            }

        }

        static AwaitOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 219395, 221143);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 219395, 221143);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 219395, 221143);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 219395, 221143);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_219707_219742(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.AwaitOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 219707, 219742);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_219636_219649_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 219485, 219780);
            return return_v;
        }

    }
    internal abstract partial class BaseAssignmentOperation : Operation, IAssignmentOperation
    {
        protected BaseAssignmentOperation(IOperation target, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_221412_221425_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 221255, 221578);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 221588, 221621);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 221631, 221663);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 221471, 221513);

                Target = f_306_221480_221512(target, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 221527, 221567);

                Value = f_306_221535_221566(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 221255, 221578);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 221255, 221578);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 221255, 221578);
            }
        }

        public IOperation Target { get; }

        public IOperation Value { get; }

        static BaseAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 221149, 221670);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 221149, 221670);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 221149, 221670);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 221149, 221670);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_221480_221512(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BaseAssignmentOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 221480, 221512);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_221535_221566(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BaseAssignmentOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 221535, 221566);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_221412_221425_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 221255, 221578);
            return return_v;
        }

    }
    internal sealed partial class SimpleAssignmentOperation : BaseAssignmentOperation, ISimpleAssignmentOperation
    {
        internal SimpleAssignmentOperation(bool isRef, IOperation target, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_222021_222027_C(target), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 221802, 222199);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222209, 222235);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 223264, 223306);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 223316, 223380);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222095, 222109);

                IsRef = isRef;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222123, 222162);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222176, 222188);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 221802, 222199);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 221802, 222199);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 221802, 222199);
            }
        }

        public bool IsRef { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 222320, 222583);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222323, 222583);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222369, 222388) || true) && (f_306_222374_222380() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 222369, 222388) || true)
                        => f_306_222413_222419(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222440, 222458) || true) && (f_306_222445_222450() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 222440, 222458) || true)
                        => f_306_222483_222488(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 222507, 222567) && DynAbs.Tracing.TraceSender.Expression_True(306, 222507, 222567))
    => throw f_306_222518_222567((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 222320, 222583);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 222320, 222583);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 222320, 222583);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_222374_222380()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 222374, 222380);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_222413_222419()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 222413, 222419);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_222445_222450()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 222445, 222450);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_222483_222488()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 222483, 222488);
                return return_v;
            }


            System.Exception
            f_306_222518_222567((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 222518, 222567);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Value != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 223425, 223458);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 223428, 223458);
                    return OperationKind.SimpleAssignment; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 223425, 223458);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 223425, 223458);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 223425, 223458);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 223523, 223561);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 223526, 223561);
                f_306_223526_223561(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 223523, 223561);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 223523, 223561);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 223523, 223561);
            }

            int
            f_306_223526_223561(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
            operation)
            {
                this_param.VisitSimpleAssignment((Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 223526, 223561);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 223714, 223762);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 223717, 223762);
                return f_306_223717_223762(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 223714, 223762);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 223714, 223762);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 223714, 223762);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_223717_223762(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSimpleAssignment((Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 223717, 223762);
                return return_v;
            }

        }

        static SimpleAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 221676, 223770);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 221676, 223770);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 221676, 223770);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 221676, 223770);

        static Microsoft.CodeAnalysis.IOperation
        f_306_222021_222027_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 221802, 222199);
            return return_v;
        }

    }
    internal sealed partial class CompoundAssignmentOperation : BaseAssignmentOperation, ICompoundAssignmentOperation
    {
        internal CompoundAssignmentOperation(IConvertibleConversion inConversion, IConvertibleConversion outConversion, BinaryOperatorKind operatorKind, bool isLifted, bool isChecked, IMethodSymbol? operatorMethod, IOperation target, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_224255_224261_C(target), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 223906, 224618);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224628, 224692);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224797, 224862);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224969, 225016);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225026, 225055);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225065, 225095);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225105, 225150);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 226179, 226221);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224329, 224368);

                InConversionConvertible = inConversion;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224382, 224423);

                OutConversionConvertible = outConversion;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224437, 224465);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224479, 224499);

                IsLifted = isLifted;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224513, 224535);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224549, 224581);

                OperatorMethod = operatorMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224595, 224607);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 223906, 224618);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 223906, 224618);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 223906, 224618);
            }
        }

        internal IConvertibleConversion InConversionConvertible { get; }

        public CommonConversion InConversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 224739, 224786);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224742, 224786);
                    return f_306_224742_224786(f_306_224742_224765()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 224739, 224786);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 224739, 224786);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 224739, 224786);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal IConvertibleConversion OutConversionConvertible { get; }

        public CommonConversion OutConversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 224910, 224958);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 224913, 224958);
                    return f_306_224913_224958(f_306_224913_224937()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 224910, 224958);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 224910, 224958);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 224910, 224958);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public BinaryOperatorKind OperatorKind { get; }

        public bool IsLifted { get; }

        public bool IsChecked { get; }

        public IMethodSymbol? OperatorMethod { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 225235, 225498);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225238, 225498);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225284, 225303) || true) && (f_306_225289_225295() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 225284, 225303) || true)
                        => f_306_225328_225334(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225355, 225373) || true) && (f_306_225360_225365() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 225355, 225373) || true)
                        => f_306_225398_225403(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 225422, 225482) && DynAbs.Tracing.TraceSender.Expression_True(306, 225422, 225482))
    => throw f_306_225433_225482((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 225235, 225498);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 225235, 225498);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 225235, 225498);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_225289_225295()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 225289, 225295);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_225328_225334()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 225328, 225334);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_225360_225365()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 225360, 225365);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_225398_225403()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 225398, 225403);
                return return_v;
            }


            System.Exception
            f_306_225433_225482((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 225433, 225482);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Value != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 226287, 226294);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 226290, 226294);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 226287, 226294);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 226287, 226294);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226287, 226294);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 226340, 226375);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 226343, 226375);
                    return OperationKind.CompoundAssignment; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 226340, 226375);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 226340, 226375);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226340, 226375);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 226440, 226480);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 226443, 226480);
                f_306_226443_226480(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 226440, 226480);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 226440, 226480);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226440, 226480);
            }

            int
            f_306_226443_226480(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
            operation)
            {
                this_param.VisitCompoundAssignment((Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 226443, 226480);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 226633, 226683);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 226636, 226683);
                return f_306_226636_226683(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 226633, 226683);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 226633, 226683);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226633, 226683);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_226636_226683(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitCompoundAssignment((Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 226636, 226683);
                return return_v;
            }

        }

        static CompoundAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 223776, 226691);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 223776, 226691);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 223776, 226691);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 223776, 226691);

        static Microsoft.CodeAnalysis.IOperation
        f_306_224255_224261_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 223906, 224618);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_224742_224765()
        {
            var return_v = InConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 224742, 224765);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_224742_224786(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 224742, 224786);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_224913_224937()
        {
            var return_v = OutConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 224913, 224937);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_224913_224958(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 224913, 224958);
            return return_v;
        }

    }
    internal sealed partial class ParenthesizedOperation : Operation, IParenthesizedOperation
    {
        internal ParenthesizedOperation(IOperation operand, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_226990_227003_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 226803, 227183);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227193, 227227);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228065, 228107);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228117, 228181);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227049, 227093);

                Operand = f_306_227059_227092(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227107, 227146);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227160, 227172);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 226803, 227183);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 226803, 227183);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226803, 227183);
            }
        }

        public IOperation Operand { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 227312, 227508);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227315, 227508);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227361, 227381) || true) && (f_306_227366_227373() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 227361, 227381) || true)
                        => f_306_227406_227413(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 227432, 227492) && DynAbs.Tracing.TraceSender.Expression_True(306, 227432, 227492))
    => throw f_306_227443_227492((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 227312, 227508);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 227312, 227508);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 227312, 227508);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_227366_227373()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 227366, 227373);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_227406_227413()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 227406, 227413);
                return return_v;
            }


            System.Exception
            f_306_227443_227492((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 227443, 227492);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 228226, 228256);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228229, 228256);
                    return OperationKind.Parenthesized; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 228226, 228256);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 228226, 228256);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 228226, 228256);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 228321, 228356);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228324, 228356);
                f_306_228324_228356(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 228321, 228356);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 228321, 228356);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 228321, 228356);
            }

            int
            f_306_228324_228356(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
            operation)
            {
                this_param.VisitParenthesized((Microsoft.CodeAnalysis.Operations.IParenthesizedOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 228324, 228356);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 228509, 228554);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228512, 228554);
                return f_306_228512_228554(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 228509, 228554);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 228509, 228554);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 228509, 228554);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_228512_228554(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitParenthesized((Microsoft.CodeAnalysis.Operations.IParenthesizedOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 228512, 228554);
                return return_v;
            }

        }

        static ParenthesizedOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 226697, 228562);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 226697, 228562);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 226697, 228562);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 226697, 228562);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_227059_227092(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 227059, 227092);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_226990_227003_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 226803, 227183);
            return return_v;
        }

    }
    internal sealed partial class EventAssignmentOperation : Operation, IEventAssignmentOperation
    {
        internal EventAssignmentOperation(IOperation eventReference, IOperation handlerValue, bool adds, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_228880_228893_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 228678, 229128);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229138, 229179);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229189, 229228);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229238, 229263);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 230337, 230379);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 228939, 228997);

                EventReference = f_306_228956_228996(eventReference, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229011, 229065);

                HandlerValue = f_306_229026_229064(handlerValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229079, 229091);

                Adds = adds;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229105, 229117);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 228678, 229128);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 228678, 229128);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 228678, 229128);
            }
        }

        public IOperation EventReference { get; }

        public IOperation HandlerValue { get; }

        public bool Adds { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 229348, 229641);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229351, 229641);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229397, 229424) || true) && (f_306_229402_229416() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 229397, 229424) || true)
                        => f_306_229449_229463(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229484, 229509) || true) && (f_306_229489_229501() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 229484, 229509) || true)
                        => f_306_229534_229546(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 229565, 229625) && DynAbs.Tracing.TraceSender.Expression_True(306, 229565, 229625))
    => throw f_306_229576_229625((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 229348, 229641);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 229348, 229641);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 229348, 229641);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_229402_229416()
            {
                var return_v = EventReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 229402, 229416);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_229449_229463()
            {
                var return_v = EventReference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 229449, 229463);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_229489_229501()
            {
                var return_v = HandlerValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 229489, 229501);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_229534_229546()
            {
                var return_v = HandlerValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 229534, 229546);
                return return_v;
            }


            System.Exception
            f_306_229576_229625((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 229576, 229625);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (EventReference != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (HandlerValue != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 230445, 230452);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 230448, 230452);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 230445, 230452);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 230445, 230452);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230445, 230452);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 230498, 230530);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 230501, 230530);
                    return OperationKind.EventAssignment; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 230498, 230530);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 230498, 230530);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230498, 230530);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 230595, 230632);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 230598, 230632);
                f_306_230598_230632(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 230595, 230632);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 230595, 230632);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230595, 230632);
            }

            int
            f_306_230598_230632(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
            operation)
            {
                this_param.VisitEventAssignment((Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 230598, 230632);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 230785, 230832);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 230788, 230832);
                return f_306_230788_230832(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 230785, 230832);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 230785, 230832);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230785, 230832);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_230788_230832(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitEventAssignment((Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 230788, 230832);
                return return_v;
            }

        }

        static EventAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 228568, 230840);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 228568, 230840);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 228568, 230840);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 228568, 230840);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_228956_228996(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 228956, 228996);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_229026_229064(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 229026, 229064);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_228880_228893_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 228678, 229128);
            return return_v;
        }

    }
    internal sealed partial class ConditionalAccessOperation : Operation, IConditionalAccessOperation
    {
        internal ConditionalAccessOperation(IOperation operation, IOperation whenNotNull, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_231147_231160_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 230960, 231357);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231367, 231403);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231413, 231451);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 232507, 232549);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231206, 231254);

                Operation = f_306_231218_231253(operation, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231268, 231320);

                WhenNotNull = f_306_231282_231319(whenNotNull, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231334, 231346);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 230960, 231357);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 230960, 231357);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230960, 231357);
            }
        }

        public IOperation Operation { get; }

        public IOperation WhenNotNull { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 231536, 231817);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231539, 231817);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231585, 231607) || true) && (f_306_231590_231599() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 231585, 231607) || true)
                        => f_306_231632_231641(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231662, 231686) || true) && (f_306_231667_231678() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 231662, 231686) || true)
                        => f_306_231711_231722(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 231741, 231801) && DynAbs.Tracing.TraceSender.Expression_True(306, 231741, 231801))
    => throw f_306_231752_231801((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 231536, 231817);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 231536, 231817);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 231536, 231817);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_231590_231599()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 231590, 231599);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_231632_231641()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 231632, 231641);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_231667_231678()
            {
                var return_v = WhenNotNull;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 231667, 231678);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_231711_231722()
            {
                var return_v = WhenNotNull;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 231711, 231722);
                return return_v;
            }


            System.Exception
            f_306_231752_231801((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 231752, 231801);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operation != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (WhenNotNull != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 232615, 232622);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 232618, 232622);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 232615, 232622);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 232615, 232622);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 232615, 232622);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 232668, 232702);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 232671, 232702);
                    return OperationKind.ConditionalAccess; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 232668, 232702);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 232668, 232702);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 232668, 232702);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 232767, 232806);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 232770, 232806);
                f_306_232770_232806(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 232767, 232806);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 232767, 232806);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 232767, 232806);
            }

            int
            f_306_232770_232806(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
            operation)
            {
                this_param.VisitConditionalAccess((Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 232770, 232806);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 232959, 233008);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 232962, 233008);
                return f_306_232962_233008(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 232959, 233008);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 232959, 233008);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 232959, 233008);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_232962_233008(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConditionalAccess((Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 232962, 233008);
                return return_v;
            }

        }

        static ConditionalAccessOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 230846, 233016);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 230846, 233016);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 230846, 233016);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 230846, 233016);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_231218_231253(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 231218, 231253);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_231282_231319(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 231282, 231319);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_231147_231160_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 230960, 231357);
            return return_v;
        }

    }
    internal sealed partial class ConditionalAccessInstanceOperation : Operation, IConditionalAccessInstanceOperation
    {
        internal ConditionalAccessInstanceOperation(SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_233301_233314_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 233152, 233383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233682, 233724);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233360, 233372);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 233152, 233383);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233152, 233383);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233152, 233383);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 233455, 233513);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233458, 233513);
                throw f_306_233464_233513((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 233455, 233513);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233455, 233513);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233455, 233513);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_233464_233513((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 233464, 233513);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 233633, 233671);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233636, 233671);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 233633, 233671);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233633, 233671);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233633, 233671);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 233790, 233797);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233793, 233797);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 233790, 233797);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233790, 233797);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233790, 233797);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 233843, 233885);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233846, 233885);
                    return OperationKind.ConditionalAccessInstance; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 233843, 233885);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233843, 233885);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233843, 233885);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 233950, 233997);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 233953, 233997);
                f_306_233953_233997(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 233950, 233997);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 233950, 233997);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233950, 233997);
            }

            int
            f_306_233953_233997(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
            operation)
            {
                this_param.VisitConditionalAccessInstance((Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 233953, 233997);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 234150, 234207);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234153, 234207);
                return f_306_234153_234207(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 234150, 234207);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 234150, 234207);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 234150, 234207);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_234153_234207(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConditionalAccessInstance((Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 234153, 234207);
                return return_v;
            }

        }

        static ConditionalAccessInstanceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 233022, 234215);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 233022, 234215);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 233022, 234215);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 233022, 234215);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_233301_233314_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 233152, 233383);
            return return_v;
        }

    }
    internal sealed partial class InterpolatedStringOperation : Operation, IInterpolatedStringOperation
    {
        internal InterpolatedStringOperation(ImmutableArray<IInterpolatedStringContentOperation> parts, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_234568_234581_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 234337, 234757);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 235808, 235850);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 235860, 235924);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234627, 234667);

                Parts = f_306_234635_234666(parts, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234681, 234720);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234734, 234746);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 234337, 234757);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 234337, 234757);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 234337, 234757);
            }
        }

        public ImmutableArray<IInterpolatedStringContentOperation> Parts { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 234925, 235131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234928, 235131);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 234974, 234999) || true) && (index < f_306_234987_234992().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 234974, 234999) || true)
                        => f_306_235024_235029()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 235055, 235115) && DynAbs.Tracing.TraceSender.Expression_True(306, 235055, 235115))
    => throw f_306_235066_235115((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 234925, 235131);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 234925, 235131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 234925, 235131);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
            f_306_234987_234992()
            {
                var return_v = Parts;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 234987, 234992);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
            f_306_235024_235029()
            {
                var return_v = Parts;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 235024, 235029);
                return return_v;
            }


            System.Exception
            f_306_235066_235115((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 235066, 235115);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Parts.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Parts.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 235969, 236004);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 235972, 236004);
                    return OperationKind.InterpolatedString; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 235969, 236004);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 235969, 236004);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 235969, 236004);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 236069, 236109);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236072, 236109);
                f_306_236072_236109(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 236069, 236109);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 236069, 236109);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 236069, 236109);
            }

            int
            f_306_236072_236109(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
            operation)
            {
                this_param.VisitInterpolatedString((Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 236072, 236109);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 236262, 236312);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236265, 236312);
                return f_306_236265_236312(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 236262, 236312);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 236262, 236312);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 236262, 236312);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_236265_236312(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitInterpolatedString((Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 236265, 236312);
                return return_v;
            }

        }

        static InterpolatedStringOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 234221, 236320);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 234221, 236320);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 234221, 236320);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 234221, 236320);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
        f_306_234635_234666(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
        operations, Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 234635, 234666);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_234568_234581_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 234337, 234757);
            return return_v;
        }

    }
    internal sealed partial class AnonymousObjectCreationOperation : Operation, IAnonymousObjectCreationOperation
    {
        internal AnonymousObjectCreationOperation(ImmutableArray<IOperation> initializers, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_236640_236653_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 236452, 236790);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 237851, 237893);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236699, 236753);

                Initializers = f_306_236714_236752(initializers, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236767, 236779);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 236452, 236790);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 236452, 236790);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 236452, 236790);
            }
        }

        public ImmutableArray<IOperation> Initializers { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 236940, 237160);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236943, 237160);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 236989, 237021) || true) && (index < f_306_237002_237014().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 236989, 237021) || true)
                        => f_306_237046_237058()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 237084, 237144) && DynAbs.Tracing.TraceSender.Expression_True(306, 237084, 237144))
    => throw f_306_237095_237144((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 236940, 237160);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 236940, 237160);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 236940, 237160);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_237002_237014()
            {
                var return_v = Initializers;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 237002, 237014);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_237046_237058()
            {
                var return_v = Initializers;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 237046, 237058);
                return return_v;
            }


            System.Exception
            f_306_237095_237144((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 237095, 237144);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Initializers.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Initializers.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 237959, 237966);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 237962, 237966);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 237959, 237966);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 237959, 237966);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 237959, 237966);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 238012, 238052);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 238015, 238052);
                    return OperationKind.AnonymousObjectCreation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 238012, 238052);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 238012, 238052);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 238012, 238052);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 238117, 238162);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 238120, 238162);
                f_306_238120_238162(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 238117, 238162);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 238117, 238162);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 238117, 238162);
            }

            int
            f_306_238120_238162(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
            operation)
            {
                this_param.VisitAnonymousObjectCreation((Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 238120, 238162);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 238315, 238370);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 238318, 238370);
                return f_306_238318_238370(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 238315, 238370);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 238315, 238370);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 238315, 238370);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_238318_238370(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitAnonymousObjectCreation((Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 238318, 238370);
                return return_v;
            }

        }

        static AnonymousObjectCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 236326, 238378);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 236326, 238378);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 236326, 238378);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 236326, 238378);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_236714_236752(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 236714, 236752);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_236640_236653_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 236452, 236790);
            return return_v;
        }

    }
    internal sealed partial class ObjectOrCollectionInitializerOperation : Operation, IObjectOrCollectionInitializerOperation
    {
        internal ObjectOrCollectionInitializerOperation(ImmutableArray<IOperation> initializers, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_238716_238729_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 238522, 238866);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 239927, 239969);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 238775, 238829);

                Initializers = f_306_238790_238828(initializers, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 238843, 238855);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 238522, 238866);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 238522, 238866);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 238522, 238866);
            }
        }

        public ImmutableArray<IOperation> Initializers { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 239016, 239236);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 239019, 239236);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 239065, 239097) || true) && (index < f_306_239078_239090().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 239065, 239097) || true)
                        => f_306_239122_239134()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 239160, 239220) && DynAbs.Tracing.TraceSender.Expression_True(306, 239160, 239220))
    => throw f_306_239171_239220((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 239016, 239236);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 239016, 239236);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 239016, 239236);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_239078_239090()
            {
                var return_v = Initializers;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 239078, 239090);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_239122_239134()
            {
                var return_v = Initializers;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 239122, 239134);
                return return_v;
            }


            System.Exception
            f_306_239171_239220((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 239171, 239220);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Initializers.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Initializers.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 240035, 240042);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240038, 240042);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 240035, 240042);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 240035, 240042);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240035, 240042);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 240088, 240134);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240091, 240134);
                    return OperationKind.ObjectOrCollectionInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 240088, 240134);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 240088, 240134);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240088, 240134);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 240199, 240250);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240202, 240250);
                f_306_240202_240250(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 240199, 240250);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 240199, 240250);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240199, 240250);
            }

            int
            f_306_240202_240250(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
            operation)
            {
                this_param.VisitObjectOrCollectionInitializer((Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 240202, 240250);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 240403, 240464);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240406, 240464);
                return f_306_240406_240464(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 240403, 240464);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 240403, 240464);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240403, 240464);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_240406_240464(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitObjectOrCollectionInitializer((Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 240406, 240464);
                return return_v;
            }

        }

        static ObjectOrCollectionInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 238384, 240472);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 238384, 240472);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 238384, 240472);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 238384, 240472);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_238790_238828(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 238790, 238828);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_238716_238729_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 238522, 238866);
            return return_v;
        }

    }
    internal sealed partial class MemberInitializerOperation : Operation, IMemberInitializerOperation
    {
        internal MemberInitializerOperation(IOperation initializedMember, IObjectOrCollectionInitializerOperation initializer, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_240816_240829_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 240592, 241042);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241052, 241096);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241106, 241173);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 242253, 242295);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240875, 240939);

                InitializedMember = f_306_240895_240938(initializedMember, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 240953, 241005);

                Initializer = f_306_240967_241004(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241019, 241031);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 240592, 241042);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 240592, 241042);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240592, 241042);
            }
        }

        public IOperation InitializedMember { get; }

        public IObjectOrCollectionInitializerOperation Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 241258, 241555);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241261, 241555);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241307, 241337) || true) && (f_306_241312_241329() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 241307, 241337) || true)
                        => f_306_241362_241379(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241400, 241424) || true) && (f_306_241405_241416() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 241400, 241424) || true)
                        => f_306_241449_241460(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 241479, 241539) && DynAbs.Tracing.TraceSender.Expression_True(306, 241479, 241539))
    => throw f_306_241490_241539((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 241258, 241555);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 241258, 241555);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 241258, 241555);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_241312_241329()
            {
                var return_v = InitializedMember;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 241312, 241329);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_241362_241379()
            {
                var return_v = InitializedMember;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 241362, 241379);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_241405_241416()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 241405, 241416);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_241449_241460()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 241449, 241460);
                return return_v;
            }


            System.Exception
            f_306_241490_241539((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 241490, 241539);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (InitializedMember != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Initializer != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 242361, 242368);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 242364, 242368);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 242361, 242368);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 242361, 242368);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242361, 242368);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 242414, 242448);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 242417, 242448);
                    return OperationKind.MemberInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 242414, 242448);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 242414, 242448);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242414, 242448);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 242513, 242552);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 242516, 242552);
                f_306_242516_242552(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 242513, 242552);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 242513, 242552);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242513, 242552);
            }

            int
            f_306_242516_242552(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
            operation)
            {
                this_param.VisitMemberInitializer((Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 242516, 242552);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 242705, 242754);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 242708, 242754);
                return f_306_242708_242754(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 242705, 242754);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 242705, 242754);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242705, 242754);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_242708_242754(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitMemberInitializer((Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 242708, 242754);
                return return_v;
            }

        }

        static MemberInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 240478, 242762);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 240478, 242762);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 240478, 242762);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 240478, 242762);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_240895_240938(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 240895, 240938);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        f_306_240967_241004(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
        operation, Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 240967, 241004);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_240816_240829_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 240592, 241042);
            return return_v;
        }

    }
    internal sealed partial class NameOfOperation : Operation, INameOfOperation
    {
        internal NameOfOperation(IOperation argument, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_243041_243054_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 242860, 243236);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243246, 243281);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244122, 244164);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244174, 244238);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243100, 243146);

                Argument = f_306_243111_243145(argument, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243160, 243199);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243213, 243225);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 242860, 243236);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 242860, 243236);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242860, 243236);
            }
        }

        public IOperation Argument { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 243366, 243564);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243369, 243564);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243415, 243436) || true) && (f_306_243420_243428() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 243415, 243436) || true)
                        => f_306_243461_243469(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 243488, 243548) && DynAbs.Tracing.TraceSender.Expression_True(306, 243488, 243548))
    => throw f_306_243499_243548((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 243366, 243564);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 243366, 243564);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 243366, 243564);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_243420_243428()
            {
                var return_v = Argument;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 243420, 243428);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_243461_243469()
            {
                var return_v = Argument;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 243461, 243469);
                return return_v;
            }


            System.Exception
            f_306_243499_243548((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 243499, 243548);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Argument != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 244283, 244306);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244286, 244306);
                    return OperationKind.NameOf; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 244283, 244306);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 244283, 244306);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 244283, 244306);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 244371, 244399);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244374, 244399);
                f_306_244374_244399(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 244371, 244399);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 244371, 244399);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 244371, 244399);
            }

            int
            f_306_244374_244399(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.NameOfOperation
            operation)
            {
                this_param.VisitNameOf((Microsoft.CodeAnalysis.Operations.INameOfOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 244374, 244399);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 244552, 244590);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244555, 244590);
                return f_306_244555_244590(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 244552, 244590);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 244552, 244590);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 244552, 244590);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_244555_244590(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.NameOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitNameOf((Microsoft.CodeAnalysis.Operations.INameOfOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 244555, 244590);
                return return_v;
            }

        }

        static NameOfOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 242768, 244598);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 242768, 244598);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 242768, 244598);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 242768, 244598);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_243111_243145(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.NameOfOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 243111, 243145);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_243041_243054_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 242860, 243236);
            return return_v;
        }

    }
    internal sealed partial class TupleOperation : Operation, ITupleOperation
    {
        internal TupleOperation(ImmutableArray<IOperation> elements, ITypeSymbol? naturalType, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_244886_244899_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 244694, 245068);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245139, 245179);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 246159, 246201);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 244945, 244991);

                Elements = f_306_244956_244990(elements, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245005, 245031);

                NaturalType = naturalType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245045, 245057);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 244694, 245068);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 244694, 245068);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 244694, 245068);
            }
        }

        public ImmutableArray<IOperation> Elements { get; }

        public ITypeSymbol? NaturalType { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 245264, 245476);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245267, 245476);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245313, 245341) || true) && (index < f_306_245326_245334().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 245313, 245341) || true)
                        => f_306_245366_245374()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 245400, 245460) && DynAbs.Tracing.TraceSender.Expression_True(306, 245400, 245460))
    => throw f_306_245411_245460((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 245264, 245476);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 245264, 245476);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 245264, 245476);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_245326_245334()
            {
                var return_v = Elements;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 245326, 245334);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_245366_245374()
            {
                var return_v = Elements;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 245366, 245374);
                return return_v;
            }


            System.Exception
            f_306_245411_245460((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 245411, 245460);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Elements.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Elements.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 246267, 246274);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 246270, 246274);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 246267, 246274);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 246267, 246274);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246267, 246274);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 246320, 246342);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 246323, 246342);
                    return OperationKind.Tuple; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 246320, 246342);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 246320, 246342);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246320, 246342);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 246407, 246434);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 246410, 246434);
                f_306_246410_246434(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 246407, 246434);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 246407, 246434);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246407, 246434);
            }

            int
            f_306_246410_246434(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TupleOperation
            operation)
            {
                this_param.VisitTuple((Microsoft.CodeAnalysis.Operations.ITupleOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 246410, 246434);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 246587, 246624);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 246590, 246624);
                return f_306_246590_246624(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 246587, 246624);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 246587, 246624);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246587, 246624);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_246590_246624(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TupleOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTuple((Microsoft.CodeAnalysis.Operations.ITupleOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 246590, 246624);
                return return_v;
            }

        }

        static TupleOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 244604, 246632);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 244604, 246632);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 244604, 246632);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 244604, 246632);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_244956_244990(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.TupleOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 244956, 244990);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_244886_244899_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 244694, 245068);
            return return_v;
        }

    }
    internal sealed partial class DynamicMemberReferenceOperation : Operation, IDynamicMemberReferenceOperation
    {
        internal DynamicMemberReferenceOperation(IOperation? instance, string memberName, ImmutableArray<ITypeSymbol> typeArguments, ITypeSymbol? containingType, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_247021_247034_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 246762, 247291);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247301, 247337);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247347, 247380);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247457, 247500);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 248341, 248383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247080, 247126);

                Instance = f_306_247091_247125(instance, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247140, 247164);

                MemberName = memberName;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247178, 247208);

                TypeArguments = typeArguments;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247222, 247254);

                ContainingType = containingType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247268, 247280);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 246762, 247291);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 246762, 247291);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246762, 247291);
            }
        }

        public IOperation? Instance { get; }

        public string MemberName { get; }

        public ImmutableArray<ITypeSymbol> TypeArguments { get; }

        public ITypeSymbol? ContainingType { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 247585, 247783);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247588, 247783);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247634, 247655) || true) && (f_306_247639_247647() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 247634, 247655) || true)
                        => f_306_247680_247688(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 247707, 247767) && DynAbs.Tracing.TraceSender.Expression_True(306, 247707, 247767))
    => throw f_306_247718_247767((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 247585, 247783);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 247585, 247783);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 247585, 247783);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_247639_247647()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 247639, 247647);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_247680_247688()
            {
                var return_v = Instance;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 247680, 247688);
                return return_v;
            }


            System.Exception
            f_306_247718_247767((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 247718, 247767);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Instance != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 248449, 248456);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 248452, 248456);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 248449, 248456);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 248449, 248456);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248449, 248456);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 248502, 248541);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 248505, 248541);
                    return OperationKind.DynamicMemberReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 248502, 248541);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 248502, 248541);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248502, 248541);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 248606, 248650);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 248609, 248650);
                f_306_248609_248650(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 248606, 248650);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 248606, 248650);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248606, 248650);
            }

            int
            f_306_248609_248650(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
            operation)
            {
                this_param.VisitDynamicMemberReference((Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 248609, 248650);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 248803, 248857);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 248806, 248857);
                return f_306_248806_248857(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 248803, 248857);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 248803, 248857);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248803, 248857);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_248806_248857(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDynamicMemberReference((Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 248806, 248857);
                return return_v;
            }

        }

        static DynamicMemberReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 246638, 248865);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 246638, 248865);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 246638, 248865);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 246638, 248865);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_247091_247125(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 247091, 247125);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_247021_247034_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 246762, 247291);
            return return_v;
        }

    }
    internal sealed partial class TranslatedQueryOperation : Operation, ITranslatedQueryOperation
    {
        internal TranslatedQueryOperation(IOperation operation, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_249142_249155_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 248981, 249286);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249296, 249332);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 250176, 250218);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249201, 249249);

                Operation = f_306_249213_249248(operation, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249263, 249275);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 248981, 249286);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 248981, 249286);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248981, 249286);
            }
        }

        public IOperation Operation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 249417, 249617);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249420, 249617);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249466, 249488) || true) && (f_306_249471_249480() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 249466, 249488) || true)
                        => f_306_249513_249522(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 249541, 249601) && DynAbs.Tracing.TraceSender.Expression_True(306, 249541, 249601))
    => throw f_306_249552_249601((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 249417, 249617);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 249417, 249617);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 249417, 249617);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_249471_249480()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 249471, 249480);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_249513_249522()
            {
                var return_v = Operation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 249513, 249522);
                return return_v;
            }


            System.Exception
            f_306_249552_249601((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 249552, 249601);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operation != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 250284, 250291);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 250287, 250291);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 250284, 250291);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 250284, 250291);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250284, 250291);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 250337, 250369);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 250340, 250369);
                    return OperationKind.TranslatedQuery; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 250337, 250369);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 250337, 250369);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250337, 250369);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 250434, 250471);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 250437, 250471);
                f_306_250437_250471(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 250434, 250471);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 250434, 250471);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250434, 250471);
            }

            int
            f_306_250437_250471(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
            operation)
            {
                this_param.VisitTranslatedQuery((Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 250437, 250471);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 250624, 250671);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 250627, 250671);
                return f_306_250627_250671(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 250624, 250671);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 250624, 250671);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250624, 250671);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_250627_250671(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTranslatedQuery((Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 250627, 250671);
                return return_v;
            }

        }

        static TranslatedQueryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 248871, 250679);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 248871, 250679);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 248871, 250679);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 248871, 250679);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_249213_249248(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 249213, 249248);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_249142_249155_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 248981, 249286);
            return return_v;
        }

    }
    internal sealed partial class DelegateCreationOperation : Operation, IDelegateCreationOperation
    {
        internal DelegateCreationOperation(IOperation target, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_250956_250969_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 250797, 251094);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251104, 251137);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251972, 252014);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251015, 251057);

                Target = f_306_251024_251056(target, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251071, 251083);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 250797, 251094);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 250797, 251094);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250797, 251094);
            }
        }

        public IOperation Target { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 251222, 251416);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251225, 251416);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251271, 251290) || true) && (f_306_251276_251282() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 251271, 251290) || true)
                        => f_306_251315_251321(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 251340, 251400) && DynAbs.Tracing.TraceSender.Expression_True(306, 251340, 251400))
    => throw f_306_251351_251400((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 251222, 251416);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 251222, 251416);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 251222, 251416);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_251276_251282()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 251276, 251282);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_251315_251321()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 251315, 251321);
                return return_v;
            }


            System.Exception
            f_306_251351_251400((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 251351, 251400);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 252080, 252087);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252083, 252087);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 252080, 252087);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252080, 252087);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252080, 252087);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 252133, 252166);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252136, 252166);
                    return OperationKind.DelegateCreation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 252133, 252166);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252133, 252166);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252133, 252166);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 252231, 252269);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252234, 252269);
                f_306_252234_252269(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 252231, 252269);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252231, 252269);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252231, 252269);
            }

            int
            f_306_252234_252269(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
            operation)
            {
                this_param.VisitDelegateCreation((Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 252234, 252269);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 252422, 252470);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252425, 252470);
                return f_306_252425_252470(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 252422, 252470);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252422, 252470);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252422, 252470);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_252425_252470(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDelegateCreation((Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 252425, 252470);
                return return_v;
            }

        }

        static DelegateCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 250685, 252478);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 250685, 252478);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 250685, 252478);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 250685, 252478);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_251024_251056(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 251024, 251056);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_250956_250969_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 250797, 251094);
            return return_v;
        }

    }
    internal sealed partial class DefaultValueOperation : Operation, IDefaultValueOperation
    {
        internal DefaultValueOperation(SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_252754_252767_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 252588, 252889);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253188, 253230);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253240, 253304);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252813, 252852);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252866, 252878);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 252588, 252889);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252588, 252889);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252588, 252889);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 252961, 253019);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 252964, 253019);
                throw f_306_252970_253019((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 252961, 253019);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 252961, 253019);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252961, 253019);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_252970_253019((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 252970, 253019);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 253139, 253177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253142, 253177);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 253139, 253177);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 253139, 253177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253139, 253177);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 253349, 253378);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253352, 253378);
                    return OperationKind.DefaultValue; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 253349, 253378);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 253349, 253378);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253349, 253378);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 253443, 253477);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253446, 253477);
                f_306_253446_253477(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 253443, 253477);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 253443, 253477);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253443, 253477);
            }

            int
            f_306_253446_253477(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DefaultValueOperation
            operation)
            {
                this_param.VisitDefaultValue((Microsoft.CodeAnalysis.Operations.IDefaultValueOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 253446, 253477);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 253630, 253674);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253633, 253674);
                return f_306_253633_253674(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 253630, 253674);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 253630, 253674);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253630, 253674);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_253633_253674(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DefaultValueOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDefaultValue((Microsoft.CodeAnalysis.Operations.IDefaultValueOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 253633, 253674);
                return return_v;
            }

        }

        static DefaultValueOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 252484, 253682);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 252484, 253682);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 252484, 253682);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 252484, 253682);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_252754_252767_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 252588, 252889);
            return return_v;
        }

    }
    internal sealed partial class TypeOfOperation : Operation, ITypeOfOperation
    {
        internal TypeOfOperation(ITypeSymbol typeOperand, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_253935_253948_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 253780, 254057);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254067, 254106);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254405, 254447);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 253994, 254020);

                TypeOperand = typeOperand;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254034, 254046);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 253780, 254057);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 253780, 254057);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253780, 254057);
            }
        }

        public ITypeSymbol TypeOperand { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254178, 254236);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254181, 254236);
                throw f_306_254187_254236((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254178, 254236);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254178, 254236);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254178, 254236);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_254187_254236((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 254187, 254236);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254356, 254394);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254359, 254394);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254356, 254394);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254356, 254394);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254356, 254394);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254513, 254520);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254516, 254520);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254513, 254520);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254513, 254520);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254513, 254520);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254566, 254589);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254569, 254589);
                    return OperationKind.TypeOf; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254566, 254589);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254566, 254589);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254566, 254589);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254654, 254682);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254657, 254682);
                f_306_254657_254682(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254654, 254682);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254654, 254682);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254654, 254682);
            }

            int
            f_306_254657_254682(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TypeOfOperation
            operation)
            {
                this_param.VisitTypeOf((Microsoft.CodeAnalysis.Operations.ITypeOfOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 254657, 254682);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 254835, 254873);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 254838, 254873);
                return f_306_254838_254873(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 254835, 254873);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254835, 254873);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254835, 254873);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_254838_254873(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TypeOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTypeOf((Microsoft.CodeAnalysis.Operations.ITypeOfOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 254838, 254873);
                return return_v;
            }

        }

        static TypeOfOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 253688, 254881);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 253688, 254881);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 253688, 254881);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 253688, 254881);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_253935_253948_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 253780, 254057);
            return return_v;
        }

    }
    internal sealed partial class SizeOfOperation : Operation, ISizeOfOperation
    {
        internal SizeOfOperation(ITypeSymbol typeOperand, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_255164_255177_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 254979, 255339);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255349, 255388);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255687, 255729);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255739, 255803);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255223, 255249);

                TypeOperand = typeOperand;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255263, 255302);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255316, 255328);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 254979, 255339);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 254979, 255339);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254979, 255339);
            }
        }

        public ITypeSymbol TypeOperand { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 255460, 255518);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255463, 255518);
                throw f_306_255469_255518((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 255460, 255518);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 255460, 255518);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 255460, 255518);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_255469_255518((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 255469, 255518);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 255638, 255676);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255641, 255676);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 255638, 255676);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 255638, 255676);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 255638, 255676);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 255848, 255871);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255851, 255871);
                    return OperationKind.SizeOf; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 255848, 255871);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 255848, 255871);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 255848, 255871);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 255936, 255964);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 255939, 255964);
                f_306_255939_255964(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 255936, 255964);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 255936, 255964);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 255936, 255964);
            }

            int
            f_306_255939_255964(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SizeOfOperation
            operation)
            {
                this_param.VisitSizeOf((Microsoft.CodeAnalysis.Operations.ISizeOfOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 255939, 255964);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 256117, 256155);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256120, 256155);
                return f_306_256120_256155(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 256117, 256155);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 256117, 256155);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 256117, 256155);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_256120_256155(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SizeOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSizeOf((Microsoft.CodeAnalysis.Operations.ISizeOfOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 256120, 256155);
                return return_v;
            }

        }

        static SizeOfOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 254887, 256163);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 254887, 256163);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 254887, 256163);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 254887, 256163);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_255164_255177_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 254979, 255339);
            return return_v;
        }

    }
    internal sealed partial class AddressOfOperation : Operation, IAddressOfOperation
    {
        internal AddressOfOperation(IOperation reference, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_256422_256435_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 256267, 256566);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256576, 256612);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 257456, 257498);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256481, 256529);

                Reference = f_306_256493_256528(reference, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256543, 256555);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 256267, 256566);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 256267, 256566);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 256267, 256566);
            }
        }

        public IOperation Reference { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 256697, 256897);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256700, 256897);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256746, 256768) || true) && (f_306_256751_256760() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 256746, 256768) || true)
                        => f_306_256793_256802(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 256821, 256881) && DynAbs.Tracing.TraceSender.Expression_True(306, 256821, 256881))
    => throw f_306_256832_256881((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 256697, 256897);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 256697, 256897);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 256697, 256897);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_256751_256760()
            {
                var return_v = Reference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 256751, 256760);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_256793_256802()
            {
                var return_v = Reference;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 256793, 256802);
                return return_v;
            }


            System.Exception
            f_306_256832_256881((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 256832, 256881);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Reference != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 257564, 257571);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 257567, 257571);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 257564, 257571);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 257564, 257571);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 257564, 257571);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 257617, 257643);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 257620, 257643);
                    return OperationKind.AddressOf; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 257617, 257643);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 257617, 257643);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 257617, 257643);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 257708, 257739);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 257711, 257739);
                f_306_257711_257739(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 257708, 257739);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 257708, 257739);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 257708, 257739);
            }

            int
            f_306_257711_257739(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.AddressOfOperation
            operation)
            {
                this_param.VisitAddressOf((Microsoft.CodeAnalysis.Operations.IAddressOfOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 257711, 257739);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 257892, 257933);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 257895, 257933);
                return f_306_257895_257933(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 257892, 257933);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 257892, 257933);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 257892, 257933);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_257895_257933(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.AddressOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitAddressOf((Microsoft.CodeAnalysis.Operations.IAddressOfOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 257895, 257933);
                return return_v;
            }

        }

        static AddressOfOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 256169, 257941);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 256169, 257941);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 256169, 257941);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 256169, 257941);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_256493_256528(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.AddressOfOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 256493, 256528);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_256422_256435_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 256267, 256566);
            return return_v;
        }

    }
    internal sealed partial class IsPatternOperation : Operation, IIsPatternOperation
    {
        internal IsPatternOperation(IOperation value, IPatternOperation pattern, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_258223_258236_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 258045, 258417);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258427, 258459);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258469, 258510);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 259542, 259584);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258282, 258322);

                Value = f_306_258290_258321(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258336, 258380);

                Pattern = f_306_258346_258379(pattern, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258394, 258406);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 258045, 258417);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 258045, 258417);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 258045, 258417);
            }
        }

        public IOperation Value { get; }

        public IPatternOperation Pattern { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 258595, 258860);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258598, 258860);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258644, 258662) || true) && (f_306_258649_258654() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 258644, 258662) || true)
                        => f_306_258687_258692(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258713, 258733) || true) && (f_306_258718_258725() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 258713, 258733) || true)
                        => f_306_258758_258765(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 258784, 258844) && DynAbs.Tracing.TraceSender.Expression_True(306, 258784, 258844))
    => throw f_306_258795_258844((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 258595, 258860);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 258595, 258860);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 258595, 258860);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_258649_258654()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 258649, 258654);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_258687_258692()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 258687, 258692);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_258718_258725()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 258718, 258725);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_258758_258765()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 258758, 258765);
                return return_v;
            }


            System.Exception
            f_306_258795_258844((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 258795, 258844);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Pattern != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 259650, 259657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 259653, 259657);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 259650, 259657);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 259650, 259657);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 259650, 259657);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 259703, 259729);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 259706, 259729);
                    return OperationKind.IsPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 259703, 259729);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 259703, 259729);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 259703, 259729);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 259794, 259825);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 259797, 259825);
                f_306_259797_259825(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 259794, 259825);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 259794, 259825);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 259794, 259825);
            }

            int
            f_306_259797_259825(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IsPatternOperation
            operation)
            {
                this_param.VisitIsPattern((Microsoft.CodeAnalysis.Operations.IIsPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 259797, 259825);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 259978, 260019);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 259981, 260019);
                return f_306_259981_260019(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 259978, 260019);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 259978, 260019);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 259978, 260019);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_259981_260019(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IsPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitIsPattern((Microsoft.CodeAnalysis.Operations.IIsPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 259981, 260019);
                return return_v;
            }

        }

        static IsPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 257947, 260027);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 257947, 260027);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 257947, 260027);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 257947, 260027);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_258290_258321(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.IsPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 258290, 258321);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_258346_258379(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.IsPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 258346, 258379);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_258223_258236_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 258045, 258417);
            return return_v;
        }

    }
    internal sealed partial class IncrementOrDecrementOperation : Operation, IIncrementOrDecrementOperation
    {
        internal IncrementOrDecrementOperation(bool isPostfix, bool isLifted, bool isChecked, IOperation target, IMethodSymbol? operatorMethod, OperationKind kind, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_260414_260427_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 260153, 260730);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260740, 260770);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260780, 260809);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260819, 260849);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260859, 260892);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260902, 260947);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261782, 261824);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261908, 261951);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260473, 260495);

                IsPostfix = isPostfix;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260509, 260529);

                IsLifted = isLifted;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260543, 260565);

                IsChecked = isChecked;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260579, 260621);

                Target = f_306_260588_260620(target, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260635, 260667);

                OperatorMethod = operatorMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260681, 260693);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 260707, 260719);

                Kind = kind;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 260153, 260730);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 260153, 260730);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 260153, 260730);
            }
        }

        public bool IsPostfix { get; }

        public bool IsLifted { get; }

        public bool IsChecked { get; }

        public IOperation Target { get; }

        public IMethodSymbol? OperatorMethod { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 261032, 261226);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261035, 261226);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261081, 261100) || true) && (f_306_261086_261092() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 261081, 261100) || true)
                        => f_306_261125_261131(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261150, 261210) && DynAbs.Tracing.TraceSender.Expression_True(306, 261150, 261210))
    => throw f_306_261161_261210((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 261032, 261226);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 261032, 261226);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 261032, 261226);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_261086_261092()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 261086, 261092);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_261125_261131()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 261125, 261131);
                return return_v;
            }


            System.Exception
            f_306_261161_261210((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 261161, 261210);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 261890, 261897);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 261893, 261897);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 261890, 261897);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 261890, 261897);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 261890, 261897);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind { get; }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 262015, 262057);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262018, 262057);
                f_306_262018_262057(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 262015, 262057);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 262015, 262057);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 262015, 262057);
            }

            int
            f_306_262018_262057(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
            operation)
            {
                this_param.VisitIncrementOrDecrement((Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 262018, 262057);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 262210, 262262);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262213, 262262);
                return f_306_262213_262262(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 262210, 262262);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 262210, 262262);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 262210, 262262);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_262213_262262(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitIncrementOrDecrement((Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 262213, 262262);
                return return_v;
            }

        }

        static IncrementOrDecrementOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 260033, 262270);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 260033, 262270);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 260033, 262270);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 260033, 262270);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_260588_260620(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 260588, 260620);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_260414_260427_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 260153, 260730);
            return return_v;
        }

    }
    internal sealed partial class ThrowOperation : Operation, IThrowOperation
    {
        internal ThrowOperation(IOperation? exception, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_262518_262531_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 262366, 262662);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262672, 262709);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 263553, 263595);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262577, 262625);

                Exception = f_306_262589_262624(exception, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262639, 262651);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 262366, 262662);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 262366, 262662);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 262366, 262662);
            }
        }

        public IOperation? Exception { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 262794, 262994);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262797, 262994);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262843, 262865) || true) && (f_306_262848_262857() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 262843, 262865) || true)
                        => f_306_262890_262899(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 262918, 262978) && DynAbs.Tracing.TraceSender.Expression_True(306, 262918, 262978))
    => throw f_306_262929_262978((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 262794, 262994);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 262794, 262994);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 262794, 262994);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_262848_262857()
            {
                var return_v = Exception;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 262848, 262857);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_262890_262899()
            {
                var return_v = Exception;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 262890, 262899);
                return return_v;
            }


            System.Exception
            f_306_262929_262978((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 262929, 262978);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Exception != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 263661, 263668);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 263664, 263668);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 263661, 263668);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 263661, 263668);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 263661, 263668);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 263714, 263736);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 263717, 263736);
                    return OperationKind.Throw; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 263714, 263736);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 263714, 263736);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 263714, 263736);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 263801, 263828);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 263804, 263828);
                f_306_263804_263828(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 263801, 263828);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 263801, 263828);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 263801, 263828);
            }

            int
            f_306_263804_263828(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ThrowOperation
            operation)
            {
                this_param.VisitThrow((Microsoft.CodeAnalysis.Operations.IThrowOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 263804, 263828);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 263981, 264018);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 263984, 264018);
                return f_306_263984_264018(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 263981, 264018);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 263981, 264018);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 263981, 264018);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_263984_264018(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ThrowOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitThrow((Microsoft.CodeAnalysis.Operations.IThrowOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 263984, 264018);
                return return_v;
            }

        }

        static ThrowOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 262276, 264026);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 262276, 264026);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 262276, 264026);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 262276, 264026);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_262589_262624(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.ThrowOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 262589, 262624);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_262518_262531_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 262366, 262662);
            return return_v;
        }

    }
    internal sealed partial class DeconstructionAssignmentOperation : BaseAssignmentOperation, IDeconstructionAssignmentOperation
    {
        internal DeconstructionAssignmentOperation(IOperation target, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_264359_264365_C(target), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 264174, 264456);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 265485, 265527);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 264433, 264445);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 264174, 264456);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 264174, 264456);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 264174, 264456);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 264541, 264804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 264544, 264804);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 264590, 264609) || true) && (f_306_264595_264601() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 264590, 264609) || true)
                        => f_306_264634_264640(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 264661, 264679) || true) && (f_306_264666_264671() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 264661, 264679) || true)
                        => f_306_264704_264709(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 264728, 264788) && DynAbs.Tracing.TraceSender.Expression_True(306, 264728, 264788))
    => throw f_306_264739_264788((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 264541, 264804);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 264541, 264804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 264541, 264804);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_264595_264601()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 264595, 264601);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_264634_264640()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 264634, 264640);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_264666_264671()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 264666, 264671);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_264704_264709()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 264704, 264709);
                return return_v;
            }


            System.Exception
            f_306_264739_264788((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 264739, 264788);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Value != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 265593, 265600);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 265596, 265600);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 265593, 265600);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 265593, 265600);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 265593, 265600);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 265646, 265687);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 265649, 265687);
                    return OperationKind.DeconstructionAssignment; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 265646, 265687);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 265646, 265687);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 265646, 265687);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 265752, 265798);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 265755, 265798);
                f_306_265755_265798(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 265752, 265798);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 265752, 265798);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 265752, 265798);
            }

            int
            f_306_265755_265798(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
            operation)
            {
                this_param.VisitDeconstructionAssignment((Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 265755, 265798);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 265951, 266007);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 265954, 266007);
                return f_306_265954_266007(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 265951, 266007);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 265951, 266007);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 265951, 266007);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_265954_266007(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDeconstructionAssignment((Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 265954, 266007);
                return return_v;
            }

        }

        static DeconstructionAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 264032, 266015);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 264032, 266015);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 264032, 266015);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 264032, 266015);

        static Microsoft.CodeAnalysis.IOperation
        f_306_264359_264365_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 264174, 264456);
            return return_v;
        }

    }
    internal sealed partial class DeclarationExpressionOperation : Operation, IDeclarationExpressionOperation
    {
        internal DeclarationExpressionOperation(IOperation expression, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_266311_266324_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 266143, 266457);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266467, 266504);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 267351, 267393);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266370, 266420);

                Expression = f_306_266383_266419(expression, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266434, 266446);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 266143, 266457);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 266143, 266457);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 266143, 266457);
            }
        }

        public IOperation Expression { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 266589, 266791);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266592, 266791);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266638, 266661) || true) && (f_306_266643_266653() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 266638, 266661) || true)
                        => f_306_266686_266696(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 266715, 266775) && DynAbs.Tracing.TraceSender.Expression_True(306, 266715, 266775))
    => throw f_306_266726_266775((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 266589, 266791);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 266589, 266791);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 266589, 266791);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_266643_266653()
            {
                var return_v = Expression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 266643, 266653);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_266686_266696()
            {
                var return_v = Expression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 266686, 266696);
                return return_v;
            }


            System.Exception
            f_306_266726_266775((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 266726, 266775);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Expression != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 267459, 267466);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 267462, 267466);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 267459, 267466);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 267459, 267466);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267459, 267466);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 267512, 267550);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 267515, 267550);
                    return OperationKind.DeclarationExpression; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 267512, 267550);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 267512, 267550);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267512, 267550);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 267615, 267658);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 267618, 267658);
                f_306_267618_267658(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 267615, 267658);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 267615, 267658);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267615, 267658);
            }

            int
            f_306_267618_267658(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
            operation)
            {
                this_param.VisitDeclarationExpression((Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 267618, 267658);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 267811, 267864);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 267814, 267864);
                return f_306_267814_267864(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 267811, 267864);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 267811, 267864);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267811, 267864);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_267814_267864(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDeclarationExpression((Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 267814, 267864);
                return return_v;
            }

        }

        static DeclarationExpressionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 266021, 267872);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 266021, 267872);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 266021, 267872);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 266021, 267872);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_266383_266419(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 266383, 266419);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_266311_266324_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 266143, 266457);
            return return_v;
        }

    }
    internal sealed partial class OmittedArgumentOperation : Operation, IOmittedArgumentOperation
    {
        internal OmittedArgumentOperation(SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_268127_268140_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 267988, 268209);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268508, 268550);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268186, 268198);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 267988, 268209);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 267988, 268209);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267988, 268209);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268281, 268339);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268284, 268339);
                throw f_306_268290_268339((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268281, 268339);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268281, 268339);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268281, 268339);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_268290_268339((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 268290, 268339);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268459, 268497);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268462, 268497);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268459, 268497);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268459, 268497);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268459, 268497);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268616, 268623);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268619, 268623);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268616, 268623);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268616, 268623);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268616, 268623);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268669, 268701);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268672, 268701);
                    return OperationKind.OmittedArgument; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268669, 268701);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268669, 268701);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268669, 268701);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268766, 268803);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268769, 268803);
                f_306_268769_268803(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268766, 268803);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268766, 268803);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268766, 268803);
            }

            int
            f_306_268769_268803(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
            operation)
            {
                this_param.VisitOmittedArgument((Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 268769, 268803);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 268956, 269003);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 268959, 269003);
                return f_306_268959_269003(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 268956, 269003);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 268956, 269003);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 268956, 269003);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_268959_269003(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitOmittedArgument((Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 268959, 269003);
                return return_v;
            }

        }

        static OmittedArgumentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 267878, 269011);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 267878, 269011);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 267878, 269011);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 267878, 269011);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_268127_268140_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 267988, 268209);
            return return_v;
        }

    }
    internal abstract partial class BaseSymbolInitializerOperation : Operation, ISymbolInitializerOperation
    {
        protected BaseSymbolInitializerOperation(ImmutableArray<ILocalSymbol> locals, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_269319_269332_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 269137, 269459);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 269530, 269562);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 269378, 269394);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 269408, 269448);

                Value = f_306_269416_269447(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 269137, 269459);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 269137, 269459);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 269137, 269459);
            }
        }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IOperation Value { get; }

        static BaseSymbolInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 269017, 269569);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 269017, 269569);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 269017, 269569);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 269017, 269569);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_269416_269447(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.BaseSymbolInitializerOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 269416, 269447);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_269319_269332_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 269137, 269459);
            return return_v;
        }

    }
    internal sealed partial class FieldInitializerOperation : BaseSymbolInitializerOperation, IFieldInitializerOperation
    {
        internal FieldInitializerOperation(ImmutableArray<IFieldSymbol> initializedFields, ImmutableArray<ILocalSymbol> locals, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_269932_269938_C(locals), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 269708, 270055);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 270006, 270044);

                InitializedFields = initializedFields;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 269708, 270055);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 269708, 270055);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 269708, 270055);
            }
        }

        public ImmutableArray<IFieldSymbol> InitializedFields { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 270212, 270404);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 270215, 270404);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 270261, 270279) || true) && (f_306_270266_270271() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 270261, 270279) || true)
                        => f_306_270304_270309(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 270328, 270388) && DynAbs.Tracing.TraceSender.Expression_True(306, 270328, 270388))
    => throw f_306_270339_270388((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 270212, 270404);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 270212, 270404);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 270212, 270404);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_270266_270271()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 270266, 270271);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_270304_270309()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 270304, 270309);
                return return_v;
            }


            System.Exception
            f_306_270339_270388((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 270339, 270388);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 270993, 271000);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 270996, 271000);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 270993, 271000);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 270993, 271000);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 270993, 271000);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 271067, 271074);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271070, 271074);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 271067, 271074);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271067, 271074);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271067, 271074);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 271120, 271153);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271123, 271153);
                    return OperationKind.FieldInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 271120, 271153);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271120, 271153);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271120, 271153);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 271218, 271256);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271221, 271256);
                f_306_271221_271256(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 271218, 271256);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271218, 271256);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271218, 271256);
            }

            int
            f_306_271221_271256(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
            operation)
            {
                this_param.VisitFieldInitializer((Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 271221, 271256);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 271409, 271457);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271412, 271457);
                return f_306_271412_271457(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 271409, 271457);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271409, 271457);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271409, 271457);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_271412_271457(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitFieldInitializer((Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 271412, 271457);
                return return_v;
            }

        }

        static FieldInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 269575, 271465);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 269575, 271465);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 269575, 271465);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 269575, 271465);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        f_306_269932_269938_C(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 269708, 270055);
            return return_v;
        }

    }
    internal sealed partial class VariableInitializerOperation : BaseSymbolInitializerOperation, IVariableInitializerOperation
    {
        internal VariableInitializerOperation(ImmutableArray<ILocalSymbol> locals, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_271789_271795_C(locals), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 271610, 271842);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 271610, 271842);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271610, 271842);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271610, 271842);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 271927, 272119);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271930, 272119);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 271976, 271994) || true) && (f_306_271981_271986() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 271976, 271994) || true)
                        => f_306_272019_272024(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 272043, 272103) && DynAbs.Tracing.TraceSender.Expression_True(306, 272043, 272103))
    => throw f_306_272054_272103((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 271927, 272119);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 271927, 272119);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271927, 272119);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_271981_271986()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 271981, 271986);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_272019_272024()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 272019, 272024);
                return return_v;
            }


            System.Exception
            f_306_272054_272103((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 272054, 272103);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 272708, 272715);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 272711, 272715);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 272708, 272715);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 272708, 272715);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 272708, 272715);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 272782, 272789);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 272785, 272789);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 272782, 272789);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 272782, 272789);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 272782, 272789);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 272835, 272871);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 272838, 272871);
                    return OperationKind.VariableInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 272835, 272871);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 272835, 272871);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 272835, 272871);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 272936, 272977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 272939, 272977);
                f_306_272939_272977(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 272936, 272977);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 272936, 272977);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 272936, 272977);
            }

            int
            f_306_272939_272977(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
            operation)
            {
                this_param.VisitVariableInitializer((Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 272939, 272977);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 273130, 273181);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 273133, 273181);
                return f_306_273133_273181(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 273130, 273181);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 273130, 273181);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 273130, 273181);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_273133_273181(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitVariableInitializer((Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 273133, 273181);
                return return_v;
            }

        }

        static VariableInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 271471, 273189);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 271471, 273189);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 271471, 273189);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 271471, 273189);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        f_306_271789_271795_C(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 271610, 271842);
            return return_v;
        }

    }
    internal sealed partial class PropertyInitializerOperation : BaseSymbolInitializerOperation, IPropertyInitializerOperation
    {
        internal PropertyInitializerOperation(ImmutableArray<IPropertySymbol> initializedProperties, ImmutableArray<ILocalSymbol> locals, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_273568_273574_C(locals), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 273334, 273699);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 273642, 273688);

                InitializedProperties = initializedProperties;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 273334, 273699);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 273334, 273699);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 273334, 273699);
            }
        }

        public ImmutableArray<IPropertySymbol> InitializedProperties { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 273863, 274055);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 273866, 274055);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 273912, 273930) || true) && (f_306_273917_273922() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 273912, 273930) || true)
                        => f_306_273955_273960(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 273979, 274039) && DynAbs.Tracing.TraceSender.Expression_True(306, 273979, 274039))
    => throw f_306_273990_274039((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 273863, 274055);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 273863, 274055);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 273863, 274055);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_273917_273922()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 273917, 273922);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_273955_273960()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 273955, 273960);
                return return_v;
            }


            System.Exception
            f_306_273990_274039((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 273990, 274039);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 274644, 274651);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 274647, 274651);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 274644, 274651);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 274644, 274651);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 274644, 274651);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 274718, 274725);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 274721, 274725);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 274718, 274725);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 274718, 274725);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 274718, 274725);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 274771, 274807);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 274774, 274807);
                    return OperationKind.PropertyInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 274771, 274807);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 274771, 274807);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 274771, 274807);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 274872, 274913);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 274875, 274913);
                f_306_274875_274913(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 274872, 274913);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 274872, 274913);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 274872, 274913);
            }

            int
            f_306_274875_274913(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
            operation)
            {
                this_param.VisitPropertyInitializer((Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 274875, 274913);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 275066, 275117);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275069, 275117);
                return f_306_275069_275117(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 275066, 275117);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 275066, 275117);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 275066, 275117);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_275069_275117(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitPropertyInitializer((Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 275069, 275117);
                return return_v;
            }

        }

        static PropertyInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 273195, 275125);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 273195, 275125);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 273195, 275125);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 273195, 275125);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        f_306_273568_273574_C(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 273334, 273699);
            return return_v;
        }

    }
    internal sealed partial class ParameterInitializerOperation : BaseSymbolInitializerOperation, IParameterInitializerOperation
    {
        internal ParameterInitializerOperation(IParameterSymbol parameter, ImmutableArray<ILocalSymbol> locals, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_275480_275486_C(locals), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 275272, 275587);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275597, 275639);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275554, 275576);

                Parameter = parameter;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 275272, 275587);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 275272, 275587);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 275272, 275587);
            }
        }

        public IParameterSymbol Parameter { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 275724, 275916);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275727, 275916);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275773, 275791) || true) && (f_306_275778_275783() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 275773, 275791) || true)
                        => f_306_275816_275821(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 275840, 275900) && DynAbs.Tracing.TraceSender.Expression_True(306, 275840, 275900))
    => throw f_306_275851_275900((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 275724, 275916);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 275724, 275916);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 275724, 275916);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_275778_275783()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 275778, 275783);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_275816_275821()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 275816, 275821);
                return return_v;
            }


            System.Exception
            f_306_275851_275900((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 275851, 275900);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 276505, 276512);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 276508, 276512);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 276505, 276512);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 276505, 276512);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276505, 276512);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 276579, 276586);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 276582, 276586);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 276579, 276586);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 276579, 276586);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276579, 276586);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 276632, 276669);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 276635, 276669);
                    return OperationKind.ParameterInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 276632, 276669);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 276632, 276669);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276632, 276669);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 276734, 276776);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 276737, 276776);
                f_306_276737_276776(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 276734, 276776);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 276734, 276776);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276734, 276776);
            }

            int
            f_306_276737_276776(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
            operation)
            {
                this_param.VisitParameterInitializer((Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 276737, 276776);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 276929, 276981);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 276932, 276981);
                return f_306_276932_276981(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 276929, 276981);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 276929, 276981);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276929, 276981);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_276932_276981(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitParameterInitializer((Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 276932, 276981);
                return return_v;
            }

        }

        static ParameterInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 275131, 276989);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 275131, 276989);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 275131, 276989);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 275131, 276989);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        f_306_275480_275486_C(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 275272, 275587);
            return return_v;
        }

    }
    internal sealed partial class ArrayInitializerOperation : Operation, IArrayInitializerOperation
    {
        internal ArrayInitializerOperation(ImmutableArray<IOperation> elementValues, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_277270_277283_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 277107, 277396);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 277329, 277385);

                ElementValues = f_306_277345_277384(elementValues, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 277107, 277396);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 277107, 277396);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 277107, 277396);
            }
        }

        public ImmutableArray<IOperation> ElementValues { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 277547, 277769);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 277550, 277769);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 277596, 277629) || true) && (index < f_306_277609_277622().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 277596, 277629) || true)
                        => f_306_277654_277667()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 277693, 277753) && DynAbs.Tracing.TraceSender.Expression_True(306, 277693, 277753))
    => throw f_306_277704_277753((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 277547, 277769);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 277547, 277769);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 277547, 277769);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_277609_277622()
            {
                var return_v = ElementValues;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 277609, 277622);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_277654_277667()
            {
                var return_v = ElementValues;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 277654, 277667);
                return return_v;
            }


            System.Exception
            f_306_277704_277753((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 277704, 277753);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!ElementValues.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < ElementValues.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 278496, 278503);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 278499, 278503);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 278496, 278503);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 278496, 278503);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278496, 278503);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 278570, 278577);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 278573, 278577);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 278570, 278577);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 278570, 278577);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278570, 278577);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 278623, 278656);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 278626, 278656);
                    return OperationKind.ArrayInitializer; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 278623, 278656);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 278623, 278656);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278623, 278656);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 278721, 278759);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 278724, 278759);
                f_306_278724_278759(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 278721, 278759);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 278721, 278759);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278721, 278759);
            }

            int
            f_306_278724_278759(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
            operation)
            {
                this_param.VisitArrayInitializer((Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 278724, 278759);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 278912, 278960);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 278915, 278960);
                return f_306_278915_278960(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 278912, 278960);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 278912, 278960);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278912, 278960);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_278915_278960(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitArrayInitializer((Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 278915, 278960);
                return return_v;
            }

        }

        static ArrayInitializerOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 276995, 278968);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 276995, 278968);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 276995, 278968);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 276995, 278968);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_277345_277384(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 277345, 277384);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_277270_277283_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 277107, 277396);
            return return_v;
        }

    }
    internal sealed partial class VariableDeclaratorOperation : Operation, IVariableDeclaratorOperation
    {
        internal VariableDeclaratorOperation(ILocalSymbol symbol, IVariableInitializerOperation? initializer, ImmutableArray<IOperation> ignoredArguments, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_279323_279336_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 279090, 279551);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279561, 279596);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279606, 279664);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279382, 279398);

                Symbol = symbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279412, 279464);

                Initializer = f_306_279426_279463(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279478, 279540);

                IgnoredArguments = f_306_279497_279539(ignoredArguments, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 279090, 279551);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 279090, 279551);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 279090, 279551);
            }
        }

        public ILocalSymbol Symbol { get; }

        public IVariableInitializerOperation? Initializer { get; }

        public ImmutableArray<IOperation> IgnoredArguments { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 279818, 280127);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279821, 280127);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279867, 279903) || true) && (index < f_306_279880_279896().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 279867, 279903) || true)
                        => f_306_279928_279944()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 279972, 279996) || true) && (f_306_279977_279988() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 279972, 279996) || true)
                        => f_306_280021_280032(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 280051, 280111) && DynAbs.Tracing.TraceSender.Expression_True(306, 280051, 280111))
    => throw f_306_280062_280111((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 279818, 280127);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 279818, 280127);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 279818, 280127);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_279880_279896()
            {
                var return_v = IgnoredArguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 279880, 279896);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_279928_279944()
            {
                var return_v = IgnoredArguments;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 279928, 279944);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
            f_306_279977_279988()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 279977, 279988);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation
            f_306_280021_280032()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 280021, 280032);
                return return_v;
            }


            System.Exception
            f_306_280062_280111((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 280062, 280111);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!IgnoredArguments.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < IgnoredArguments.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (Initializer != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 280991, 280998);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 280994, 280998);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 280991, 280998);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 280991, 280998);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 280991, 280998);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 281065, 281072);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281068, 281072);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 281065, 281072);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 281065, 281072);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281065, 281072);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 281118, 281153);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281121, 281153);
                    return OperationKind.VariableDeclarator; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 281118, 281153);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 281118, 281153);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281118, 281153);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 281218, 281258);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281221, 281258);
                f_306_281221_281258(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 281218, 281258);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 281218, 281258);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281218, 281258);
            }

            int
            f_306_281221_281258(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
            operation)
            {
                this_param.VisitVariableDeclarator((Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 281221, 281258);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 281411, 281461);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281414, 281461);
                return f_306_281414_281461(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 281411, 281461);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 281411, 281461);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281411, 281461);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_281414_281461(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitVariableDeclarator((Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 281414, 281461);
                return return_v;
            }

        }

        static VariableDeclaratorOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 278974, 281469);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 278974, 281469);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 278974, 281469);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 278974, 281469);

        static Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
        f_306_279426_279463(Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 279426, 279463);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_279497_279539(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 279497, 279539);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_279323_279336_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 279090, 279551);
            return return_v;
        }

    }
    internal sealed partial class VariableDeclarationOperation : Operation, IVariableDeclarationOperation
    {
        internal VariableDeclarationOperation(ImmutableArray<IVariableDeclaratorOperation> declarators, IVariableInitializerOperation? initializer, ImmutableArray<IOperation> ignoredDimensions, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_281865_281878_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 281593, 282131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282223, 282281);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281924, 281976);

                Declarators = f_306_281938_281975(declarators, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 281990, 282042);

                Initializer = f_306_282004_282041(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282056, 282120);

                IgnoredDimensions = f_306_282076_282119(ignoredDimensions, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 281593, 282131);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 281593, 282131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281593, 282131);
            }
        }

        public ImmutableArray<IVariableDeclaratorOperation> Declarators { get; }

        public IVariableInitializerOperation? Initializer { get; }

        public ImmutableArray<IOperation> IgnoredDimensions { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 282436, 282842);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282439, 282842);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282485, 282522) || true) && (index < f_306_282498_282515().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 282485, 282522) || true)
                        => f_306_282547_282564()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282592, 282623) || true) && (index < f_306_282605_282616().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 282592, 282623) || true)
                        => f_306_282648_282659()[index],
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282687, 282711) || true) && (f_306_282692_282703() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 282687, 282711) || true)
                        => f_306_282736_282747(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 282766, 282826) && DynAbs.Tracing.TraceSender.Expression_True(306, 282766, 282826))
    => throw f_306_282777_282826((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 282436, 282842);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 282436, 282842);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 282436, 282842);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_282498_282515()
            {
                var return_v = IgnoredDimensions;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282498, 282515);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_282547_282564()
            {
                var return_v = IgnoredDimensions;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282547, 282564);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
            f_306_282605_282616()
            {
                var return_v = Declarators;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282605, 282616);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
            f_306_282648_282659()
            {
                var return_v = Declarators;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282648, 282659);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
            f_306_282692_282703()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282692, 282703);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation
            f_306_282736_282747()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 282736, 282747);
                return return_v;
            }


            System.Exception
            f_306_282777_282826((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 282777, 282826);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!IgnoredDimensions.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < IgnoredDimensions.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (!Declarators.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Declarators.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                    if (Initializer != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 283967, 283974);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 283970, 283974);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 283967, 283974);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 283967, 283974);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 283967, 283974);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 284041, 284048);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284044, 284048);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 284041, 284048);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 284041, 284048);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284041, 284048);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 284094, 284130);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284097, 284130);
                    return OperationKind.VariableDeclaration; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 284094, 284130);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 284094, 284130);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284094, 284130);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 284195, 284236);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284198, 284236);
                f_306_284198_284236(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 284195, 284236);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 284195, 284236);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284195, 284236);
            }

            int
            f_306_284198_284236(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
            operation)
            {
                this_param.VisitVariableDeclaration((Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 284198, 284236);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 284389, 284440);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284392, 284440);
                return f_306_284392_284440(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 284389, 284440);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 284389, 284440);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284389, 284440);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_284392_284440(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitVariableDeclaration((Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 284392, 284440);
                return return_v;
            }

        }

        static VariableDeclarationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 281475, 284448);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 281475, 284448);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 281475, 284448);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 281475, 284448);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
        f_306_281938_281975(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
        operations, Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 281938, 281975);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
        f_306_282004_282041(Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 282004, 282041);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_282076_282119(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 282076, 282119);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_281865_281878_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 281593, 282131);
            return return_v;
        }

    }
    internal sealed partial class ArgumentOperation : Operation, IArgumentOperation
    {
        internal ArgumentOperation(ArgumentKind argumentKind, IParameterSymbol? parameter, IOperation value, IConvertibleConversion inConversion, IConvertibleConversion outConversion, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_284812_284825_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 284550, 285108);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285118, 285159);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285169, 285212);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285222, 285254);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285264, 285328);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285433, 285498);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284871, 284899);

                ArgumentKind = argumentKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284913, 284935);

                Parameter = parameter;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 284949, 284989);

                Value = f_306_284957_284988(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285003, 285042);

                InConversionConvertible = inConversion;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285056, 285097);

                OutConversionConvertible = outConversion;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 284550, 285108);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 284550, 285108);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284550, 285108);
            }
        }

        public ArgumentKind ArgumentKind { get; }

        public IParameterSymbol? Parameter { get; }

        public IOperation Value { get; }

        internal IConvertibleConversion InConversionConvertible { get; }

        public CommonConversion InConversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 285375, 285422);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285378, 285422);
                    return f_306_285378_285422(f_306_285378_285401()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 285375, 285422);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 285375, 285422);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 285375, 285422);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal IConvertibleConversion OutConversionConvertible { get; }

        public CommonConversion OutConversion
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 285546, 285594);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285549, 285594);
                    return f_306_285549_285594(f_306_285549_285573()); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 285546, 285594);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 285546, 285594);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 285546, 285594);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 285680, 285872);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285683, 285872);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285729, 285747) || true) && (f_306_285734_285739() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 285729, 285747) || true)
                        => f_306_285772_285777(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 285796, 285856) && DynAbs.Tracing.TraceSender.Expression_True(306, 285796, 285856))
    => throw f_306_285807_285856((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 285680, 285872);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 285680, 285872);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 285680, 285872);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_285734_285739()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 285734, 285739);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_285772_285777()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 285772, 285777);
                return return_v;
            }


            System.Exception
            f_306_285807_285856((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 285807, 285856);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 286461, 286468);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 286464, 286468);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 286461, 286468);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 286461, 286468);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286461, 286468);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 286535, 286542);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 286538, 286542);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 286535, 286542);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 286535, 286542);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286535, 286542);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 286588, 286613);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 286591, 286613);
                    return OperationKind.Argument; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 286588, 286613);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 286588, 286613);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286588, 286613);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 286678, 286708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 286681, 286708);
                f_306_286681_286708(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 286678, 286708);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 286678, 286708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286678, 286708);
            }

            int
            f_306_286681_286708(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ArgumentOperation
            operation)
            {
                this_param.VisitArgument((Microsoft.CodeAnalysis.Operations.IArgumentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 286681, 286708);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 286861, 286901);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 286864, 286901);
                return f_306_286864_286901(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 286861, 286901);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 286861, 286901);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286861, 286901);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_286864_286901(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ArgumentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitArgument((Microsoft.CodeAnalysis.Operations.IArgumentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 286864, 286901);
                return return_v;
            }

        }

        static ArgumentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 284454, 286909);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 284454, 286909);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 284454, 286909);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 284454, 286909);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_284957_284988(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ArgumentOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 284957, 284988);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_284812_284825_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 284550, 285108);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_285378_285401()
        {
            var return_v = InConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 285378, 285401);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_285378_285422(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 285378, 285422);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        f_306_285549_285573()
        {
            var return_v = OutConversionConvertible;
            DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 285549, 285573);
            return return_v;
        }


        Microsoft.CodeAnalysis.Operations.CommonConversion
        f_306_285549_285594(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
        this_param)
        {
            var return_v = this_param.ToCommonConversion();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 285549, 285594);
            return return_v;
        }

    }
    internal sealed partial class CatchClauseOperation : Operation, ICatchClauseOperation
    {
        internal CatchClauseOperation(IOperation? exceptionDeclarationOrExpression, ITypeSymbol exceptionType, ImmutableArray<ILocalSymbol> locals, IOperation? filter, IBlockOperation handler, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_287288_287301_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 287017, 287640);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287650, 287710);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287720, 287761);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287832, 287866);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287876, 287915);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287347, 287441);

                ExceptionDeclarationOrExpression = f_306_287382_287440(exceptionDeclarationOrExpression, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287455, 287485);

                ExceptionType = exceptionType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287499, 287515);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287529, 287571);

                Filter = f_306_287538_287570(filter, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 287585, 287629);

                Handler = f_306_287595_287628(handler, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 287017, 287640);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 287017, 287640);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 287017, 287640);
            }
        }

        public IOperation? ExceptionDeclarationOrExpression { get; }

        public ITypeSymbol ExceptionType { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IOperation? Filter { get; }

        public IBlockOperation Handler { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 288000, 288390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 288003, 288390);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 288049, 288094) || true) && (f_306_288054_288086() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 288049, 288094) || true)
                        => f_306_288119_288151(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 288172, 288191) || true) && (f_306_288177_288183() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 288172, 288191) || true)
                        => f_306_288216_288222(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 288243, 288263) || true) && (f_306_288248_288255() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 288243, 288263) || true)
                        => f_306_288288_288295(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 288314, 288374) && DynAbs.Tracing.TraceSender.Expression_True(306, 288314, 288374))
    => throw f_306_288325_288374((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 288000, 288390);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 288000, 288390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 288000, 288390);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_288054_288086()
            {
                var return_v = ExceptionDeclarationOrExpression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288054, 288086);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_288119_288151()
            {
                var return_v = ExceptionDeclarationOrExpression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288119, 288151);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_288177_288183()
            {
                var return_v = Filter;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288177, 288183);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_288216_288222()
            {
                var return_v = Filter;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288216, 288222);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_288248_288255()
            {
                var return_v = Handler;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288248, 288255);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_288288_288295()
            {
                var return_v = Handler;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 288288, 288295);
                return return_v;
            }


            System.Exception
            f_306_288325_288374((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 288325, 288374);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (ExceptionDeclarationOrExpression != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Filter != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (Handler != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 289259, 289266);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 289262, 289266);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 289259, 289266);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289259, 289266);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289259, 289266);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 289333, 289340);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 289336, 289340);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 289333, 289340);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289333, 289340);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289333, 289340);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 289386, 289414);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 289389, 289414);
                    return OperationKind.CatchClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 289386, 289414);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289386, 289414);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289386, 289414);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 289479, 289512);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 289482, 289512);
                f_306_289482_289512(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 289479, 289512);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289479, 289512);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289479, 289512);
            }

            int
            f_306_289482_289512(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.CatchClauseOperation
            operation)
            {
                this_param.VisitCatchClause((Microsoft.CodeAnalysis.Operations.ICatchClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 289482, 289512);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 289665, 289708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 289668, 289708);
                return f_306_289668_289708(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 289665, 289708);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289665, 289708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289665, 289708);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_289668_289708(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.CatchClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitCatchClause((Microsoft.CodeAnalysis.Operations.ICatchClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 289668, 289708);
                return return_v;
            }

        }

        static CatchClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 286915, 289716);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 286915, 289716);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 286915, 289716);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 286915, 289716);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_287382_287440(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.CatchClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 287382, 287440);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_287538_287570(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.CatchClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 287538, 287570);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_287595_287628(Microsoft.CodeAnalysis.Operations.IBlockOperation
        operation, Microsoft.CodeAnalysis.Operations.CatchClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 287595, 287628);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_287288_287301_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 287017, 287640);
            return return_v;
        }

    }
    internal sealed partial class SwitchCaseOperation : Operation, ISwitchCaseOperation
    {
        internal SwitchCaseOperation(ImmutableArray<ICaseClauseOperation> clauses, ImmutableArray<IOperation> body, ImmutableArray<ILocalSymbol> locals, IOperation? condition, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_290076_290089_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 289822, 290334);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290532, 290569);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290135, 290179);

                Clauses = f_306_290145_290178(clauses, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290193, 290231);

                Body = f_306_290200_290230(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290245, 290261);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290275, 290323);

                Condition = f_306_290287_290322(condition, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 289822, 290334);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 289822, 290334);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289822, 290334);
            }
        }

        public ImmutableArray<ICaseClauseOperation> Clauses { get; }

        public ImmutableArray<IOperation> Body { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IOperation? Condition { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 290654, 290945);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290657, 290945);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290703, 290730) || true) && (index < f_306_290716_290723().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 290703, 290730) || true)
                        => f_306_290755_290762()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290790, 290814) || true) && (index < f_306_290803_290807().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 290790, 290814) || true)
                        => f_306_290839_290843()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 290869, 290929) && DynAbs.Tracing.TraceSender.Expression_True(306, 290869, 290929))
    => throw f_306_290880_290929((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 290654, 290945);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 290654, 290945);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 290654, 290945);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
            f_306_290716_290723()
            {
                var return_v = Clauses;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 290716, 290723);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
            f_306_290755_290762()
            {
                var return_v = Clauses;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 290755, 290762);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_290803_290807()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 290803, 290807);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_290839_290843()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 290839, 290843);
                return return_v;
            }


            System.Exception
            f_306_290880_290929((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 290880, 290929);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Clauses.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Clauses.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (!Body.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Body.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 291905, 291912);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 291908, 291912);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 291905, 291912);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 291905, 291912);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 291905, 291912);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 291979, 291986);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 291982, 291986);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 291979, 291986);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 291979, 291986);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 291979, 291986);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 292032, 292059);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 292035, 292059);
                    return OperationKind.SwitchCase; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 292032, 292059);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 292032, 292059);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292032, 292059);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 292124, 292156);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 292127, 292156);
                f_306_292127_292156(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 292124, 292156);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 292124, 292156);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292124, 292156);
            }

            int
            f_306_292127_292156(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
            operation)
            {
                this_param.VisitSwitchCase((Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 292127, 292156);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 292309, 292351);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 292312, 292351);
                return f_306_292312_292351(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 292309, 292351);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 292309, 292351);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292309, 292351);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_292312_292351(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSwitchCase((Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 292312, 292351);
                return return_v;
            }

        }

        static SwitchCaseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 289722, 292359);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 289722, 292359);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 289722, 292359);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 289722, 292359);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
        f_306_290145_290178(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
        operations, Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 290145, 290178);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_290200_290230(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 290200, 290230);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_290287_290322(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 290287, 290322);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_290076_290089_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 289822, 290334);
            return return_v;
        }

    }
    internal abstract partial class BaseCaseClauseOperation : Operation, ICaseClauseOperation
    {
        protected BaseCaseClauseOperation(ILabelSymbol? label, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_292612_292625_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 292471, 292696);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 292758, 292793);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 292671, 292685);

                Label = label;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 292471, 292696);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 292471, 292696);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292471, 292696);
            }
        }

        public abstract CaseKind CaseKind { get; }

        public ILabelSymbol? Label { get; }

        static BaseCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 292365, 292800);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 292365, 292800);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292365, 292800);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 292365, 292800);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_292612_292625_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 292471, 292696);
            return return_v;
        }

    }
    internal sealed partial class DefaultCaseClauseOperation : BaseCaseClauseOperation, IDefaultCaseClauseOperation
    {
        internal DefaultCaseClauseOperation(ILabelSymbol? label, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_293077_293082_C(label), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 292934, 293122);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 292934, 293122);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 292934, 293122);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292934, 293122);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293194, 293252);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293197, 293252);
                throw f_306_293203_293252((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293194, 293252);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293194, 293252);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293194, 293252);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_293203_293252((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 293203, 293252);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293372, 293410);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293375, 293410);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293372, 293410);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293372, 293410);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293372, 293410);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293455, 293462);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293458, 293462);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293455, 293462);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293455, 293462);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293455, 293462);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293529, 293536);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293532, 293536);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293529, 293536);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293529, 293536);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293529, 293536);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293582, 293609);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293585, 293609);
                    return OperationKind.CaseClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293582, 293609);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293582, 293609);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293582, 293609);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293674, 293713);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293677, 293713);
                f_306_293677_293713(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293674, 293713);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293674, 293713);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293674, 293713);
            }

            int
            f_306_293677_293713(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
            operation)
            {
                this_param.VisitDefaultCaseClause((Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 293677, 293713);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 293866, 293915);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 293869, 293915);
                return f_306_293869_293915(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 293866, 293915);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 293866, 293915);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293866, 293915);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_293869_293915(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDefaultCaseClause((Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 293869, 293915);
                return return_v;
            }

        }

        static DefaultCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 292806, 293923);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 292806, 293923);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 292806, 293923);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 292806, 293923);

        static Microsoft.CodeAnalysis.ILabelSymbol?
        f_306_293077_293082_C(Microsoft.CodeAnalysis.ILabelSymbol?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 292934, 293122);
            return return_v;
        }

    }
    internal sealed partial class PatternCaseClauseOperation : BaseCaseClauseOperation, IPatternCaseClauseOperation
    {
        internal PatternCaseClauseOperation(ILabelSymbol label, IPatternOperation pattern, IOperation? guard, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_294245_294250_C(label), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 294057, 294420);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294485, 294526);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294536, 294569);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294311, 294355);

                Pattern = f_306_294321_294354(pattern, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294369, 294409);

                Guard = f_306_294377_294408(guard, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 294057, 294420);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 294057, 294420);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 294057, 294420);
            }
        }

        public new ILabelSymbol Label
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 294460, 294474);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294463, 294474);
                    return base.Label!; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 294460, 294474);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 294460, 294474);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 294460, 294474);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public IPatternOperation Pattern { get; }

        public IOperation? Guard { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 294654, 294919);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294657, 294919);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294703, 294723) || true) && (f_306_294708_294715() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 294703, 294723) || true)
                        => f_306_294748_294755(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294776, 294794) || true) && (f_306_294781_294786() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 294776, 294794) || true)
                        => f_306_294819_294824(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 294843, 294903) && DynAbs.Tracing.TraceSender.Expression_True(306, 294843, 294903))
    => throw f_306_294854_294903((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 294654, 294919);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 294654, 294919);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 294654, 294919);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_294708_294715()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 294708, 294715);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_294748_294755()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 294748, 294755);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_294781_294786()
            {
                var return_v = Guard;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 294781, 294786);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_294819_294824()
            {
                var return_v = Guard;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 294819, 294824);
                return return_v;
            }


            System.Exception
            f_306_294854_294903((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 294854, 294903);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Pattern != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Guard != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 295635, 295642);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 295638, 295642);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 295635, 295642);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 295635, 295642);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 295635, 295642);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 295709, 295716);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 295712, 295716);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 295709, 295716);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 295709, 295716);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 295709, 295716);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 295762, 295789);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 295765, 295789);
                    return OperationKind.CaseClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 295762, 295789);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 295762, 295789);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 295762, 295789);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 295854, 295893);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 295857, 295893);
                f_306_295857_295893(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 295854, 295893);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 295854, 295893);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 295854, 295893);
            }

            int
            f_306_295857_295893(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
            operation)
            {
                this_param.VisitPatternCaseClause((Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 295857, 295893);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 296046, 296095);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296049, 296095);
                return f_306_296049_296095(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 296046, 296095);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 296046, 296095);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 296046, 296095);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_296049_296095(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitPatternCaseClause((Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 296049, 296095);
                return return_v;
            }

        }

        static PatternCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 293929, 296103);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 293929, 296103);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 293929, 296103);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 293929, 296103);

        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_294321_294354(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 294321, 294354);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_294377_294408(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 294377, 294408);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ILabelSymbol
        f_306_294245_294250_C(Microsoft.CodeAnalysis.ILabelSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 294057, 294420);
            return return_v;
        }

    }
    internal sealed partial class RangeCaseClauseOperation : BaseCaseClauseOperation, IRangeCaseClauseOperation
    {
        internal RangeCaseClauseOperation(IOperation minimumValue, IOperation maximumValue, ILabelSymbol? label, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_296424_296429_C(label), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 296233, 296623);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296633, 296672);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296682, 296721);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296490, 296544);

                MinimumValue = f_306_296505_296543(minimumValue, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296558, 296612);

                MaximumValue = f_306_296573_296611(maximumValue, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 296233, 296623);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 296233, 296623);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 296233, 296623);
            }
        }

        public IOperation MinimumValue { get; }

        public IOperation MaximumValue { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 296806, 297095);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296809, 297095);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296855, 296880) || true) && (f_306_296860_296872() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 296855, 296880) || true)
                        => f_306_296905_296917(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 296938, 296963) || true) && (f_306_296943_296955() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 296938, 296963) || true)
                        => f_306_296988_297000(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 297019, 297079) && DynAbs.Tracing.TraceSender.Expression_True(306, 297019, 297079))
    => throw f_306_297030_297079((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 296806, 297095);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 296806, 297095);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 296806, 297095);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_296860_296872()
            {
                var return_v = MinimumValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 296860, 296872);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_296905_296917()
            {
                var return_v = MinimumValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 296905, 296917);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_296943_296955()
            {
                var return_v = MaximumValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 296943, 296955);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_296988_297000()
            {
                var return_v = MaximumValue;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 296988, 297000);
                return return_v;
            }


            System.Exception
            f_306_297030_297079((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 297030, 297079);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (MinimumValue != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (MaximumValue != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 297823, 297830);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 297826, 297830);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 297823, 297830);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 297823, 297830);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 297823, 297830);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 297897, 297904);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 297900, 297904);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 297897, 297904);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 297897, 297904);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 297897, 297904);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 297950, 297977);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 297953, 297977);
                    return OperationKind.CaseClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 297950, 297977);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 297950, 297977);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 297950, 297977);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 298042, 298079);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298045, 298079);
                f_306_298045_298079(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 298042, 298079);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 298042, 298079);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 298042, 298079);
            }

            int
            f_306_298045_298079(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
            operation)
            {
                this_param.VisitRangeCaseClause((Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 298045, 298079);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 298232, 298279);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298235, 298279);
                return f_306_298235_298279(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 298232, 298279);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 298232, 298279);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 298232, 298279);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_298235_298279(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRangeCaseClause((Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 298235, 298279);
                return return_v;
            }

        }

        static RangeCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 296109, 298287);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 296109, 298287);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 296109, 298287);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 296109, 298287);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_296505_296543(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 296505, 296543);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_296573_296611(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 296573, 296611);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ILabelSymbol?
        f_306_296424_296429_C(Microsoft.CodeAnalysis.ILabelSymbol?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 296233, 296623);
            return return_v;
        }

    }
    internal sealed partial class RelationalCaseClauseOperation : BaseCaseClauseOperation, IRelationalCaseClauseOperation
    {
        internal RelationalCaseClauseOperation(IOperation value, BinaryOperatorKind relation, ILabelSymbol? label, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_298620_298625_C(label), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 298427, 298771);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298781, 298813);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298823, 298866);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298686, 298726);

                Value = f_306_298694_298725(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298740, 298760);

                Relation = relation;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 298427, 298771);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 298427, 298771);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 298427, 298771);
            }
        }

        public IOperation Value { get; }

        public BinaryOperatorKind Relation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 298951, 299143);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 298954, 299143);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299000, 299018) || true) && (f_306_299005_299010() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 299000, 299018) || true)
                        => f_306_299043_299048(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299067, 299127) && DynAbs.Tracing.TraceSender.Expression_True(306, 299067, 299127))
    => throw f_306_299078_299127((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 298951, 299143);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 298951, 299143);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 298951, 299143);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_299005_299010()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 299005, 299010);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_299043_299048()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 299043, 299048);
                return return_v;
            }


            System.Exception
            f_306_299078_299127((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 299078, 299127);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 299732, 299739);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299735, 299739);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 299732, 299739);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 299732, 299739);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 299732, 299739);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 299806, 299813);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299809, 299813);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 299806, 299813);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 299806, 299813);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 299806, 299813);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 299859, 299886);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299862, 299886);
                    return OperationKind.CaseClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 299859, 299886);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 299859, 299886);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 299859, 299886);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 299951, 299993);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 299954, 299993);
                f_306_299954_299993(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 299951, 299993);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 299951, 299993);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 299951, 299993);
            }

            int
            f_306_299954_299993(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
            operation)
            {
                this_param.VisitRelationalCaseClause((Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 299954, 299993);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 300146, 300198);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300149, 300198);
                return f_306_300149_300198(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 300146, 300198);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 300146, 300198);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 300146, 300198);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_300149_300198(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRelationalCaseClause((Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 300149, 300198);
                return return_v;
            }

        }

        static RelationalCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 298293, 300206);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 298293, 300206);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 298293, 300206);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 298293, 300206);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_298694_298725(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 298694, 298725);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ILabelSymbol?
        f_306_298620_298625_C(Microsoft.CodeAnalysis.ILabelSymbol?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 298427, 298771);
            return return_v;
        }

    }
    internal sealed partial class SingleValueCaseClauseOperation : BaseCaseClauseOperation, ISingleValueCaseClauseOperation
    {
        internal SingleValueCaseClauseOperation(IOperation value, ILabelSymbol? label, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_300513_300518_C(label), semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 300348, 300630);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300640, 300672);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300579, 300619);

                Value = f_306_300587_300618(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 300348, 300630);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 300348, 300630);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 300348, 300630);
            }
        }

        public IOperation Value { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 300757, 300949);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300760, 300949);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300806, 300824) || true) && (f_306_300811_300816() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 300806, 300824) || true)
                        => f_306_300849_300854(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 300873, 300933) && DynAbs.Tracing.TraceSender.Expression_True(306, 300873, 300933))
    => throw f_306_300884_300933((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 300757, 300949);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 300757, 300949);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 300757, 300949);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_300811_300816()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 300811, 300816);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_300849_300854()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 300849, 300854);
                return return_v;
            }


            System.Exception
            f_306_300884_300933((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 300884, 300933);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 301538, 301545);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 301541, 301545);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 301538, 301545);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 301538, 301545);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 301538, 301545);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 301612, 301619);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 301615, 301619);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 301612, 301619);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 301612, 301619);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 301612, 301619);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 301665, 301692);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 301668, 301692);
                    return OperationKind.CaseClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 301665, 301692);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 301665, 301692);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 301665, 301692);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 301757, 301800);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 301760, 301800);
                f_306_301760_301800(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 301757, 301800);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 301757, 301800);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 301757, 301800);
            }

            int
            f_306_301760_301800(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
            operation)
            {
                this_param.VisitSingleValueCaseClause((Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 301760, 301800);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 301953, 302006);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 301956, 302006);
                return f_306_301956_302006(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 301953, 302006);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 301953, 302006);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 301953, 302006);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_301956_302006(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSingleValueCaseClause((Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 301956, 302006);
                return return_v;
            }

        }

        static SingleValueCaseClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 300212, 302014);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 300212, 302014);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 300212, 302014);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 300212, 302014);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_300587_300618(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 300587, 300618);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ILabelSymbol?
        f_306_300513_300518_C(Microsoft.CodeAnalysis.ILabelSymbol?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 300348, 300630);
            return return_v;
        }

    }
    internal abstract partial class BaseInterpolatedStringContentOperation : Operation, IInterpolatedStringContentOperation
    {
        protected BaseInterpolatedStringContentOperation(SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_302291_302304_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 302156, 302329);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 302156, 302329);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 302156, 302329);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 302156, 302329);
            }
        }

        static BaseInterpolatedStringContentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 302020, 302336);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 302020, 302336);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 302020, 302336);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 302020, 302336);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_302291_302304_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 302156, 302329);
            return return_v;
        }

    }
    internal sealed partial class InterpolatedStringTextOperation : BaseInterpolatedStringContentOperation, IInterpolatedStringTextOperation
    {
        internal InterpolatedStringTextOperation(IOperation text, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_302639_302652_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 302495, 302747);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 302757, 302788);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 302698, 302736);

                Text = f_306_302705_302735(text, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 302495, 302747);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 302495, 302747);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 302495, 302747);
            }
        }

        public IOperation Text { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 302873, 303063);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 302876, 303063);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 302922, 302939) || true) && (f_306_302927_302931() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 302922, 302939) || true)
                        => f_306_302964_302968(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 302987, 303047) && DynAbs.Tracing.TraceSender.Expression_True(306, 302987, 303047))
    => throw f_306_302998_303047((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 302873, 303063);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 302873, 303063);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 302873, 303063);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_302927_302931()
            {
                var return_v = Text;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 302927, 302931);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_302964_302968()
            {
                var return_v = Text;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 302964, 302968);
                return return_v;
            }


            System.Exception
            f_306_302998_303047((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 302998, 303047);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Text != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 303651, 303658);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 303654, 303658);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 303651, 303658);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 303651, 303658);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 303651, 303658);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 303725, 303732);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 303728, 303732);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 303725, 303732);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 303725, 303732);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 303725, 303732);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 303778, 303817);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 303781, 303817);
                    return OperationKind.InterpolatedStringText; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 303778, 303817);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 303778, 303817);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 303778, 303817);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 303882, 303926);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 303885, 303926);
                f_306_303885_303926(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 303882, 303926);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 303882, 303926);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 303882, 303926);
            }

            int
            f_306_303885_303926(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
            operation)
            {
                this_param.VisitInterpolatedStringText((Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 303885, 303926);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 304079, 304133);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304082, 304133);
                return f_306_304082_304133(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 304079, 304133);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 304079, 304133);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 304079, 304133);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_304082_304133(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitInterpolatedStringText((Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 304082, 304133);
                return return_v;
            }

        }

        static InterpolatedStringTextOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 302342, 304141);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 302342, 304141);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 302342, 304141);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 302342, 304141);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_302705_302735(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 302705, 302735);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_302639_302652_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 302495, 302747);
            return return_v;
        }

    }
    internal sealed partial class InterpolationOperation : BaseInterpolatedStringContentOperation, IInterpolationOperation
    {
        internal InterpolationOperation(IOperation expression, IOperation? alignment, IOperation? formatString, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_304472_304485_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 304282, 304722);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304732, 304769);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304779, 304816);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304826, 304866);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304531, 304581);

                Expression = f_306_304544_304580(expression, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304595, 304643);

                Alignment = f_306_304607_304642(alignment, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304657, 304711);

                FormatString = f_306_304672_304710(formatString, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 304282, 304722);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 304282, 304722);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 304282, 304722);
            }
        }

        public IOperation Expression { get; }

        public IOperation? Alignment { get; }

        public IOperation? FormatString { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 304951, 305313);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 304954, 305313);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 305000, 305023) || true) && (f_306_305005_305015() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 305000, 305023) || true)
                        => f_306_305048_305058(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 305079, 305101) || true) && (f_306_305084_305093() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 305079, 305101) || true)
                        => f_306_305126_305135(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 305156, 305181) || true) && (f_306_305161_305173() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 305156, 305181) || true)
                        => f_306_305206_305218(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 305237, 305297) && DynAbs.Tracing.TraceSender.Expression_True(306, 305237, 305297))
    => throw f_306_305248_305297((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 304951, 305313);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 304951, 305313);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 304951, 305313);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_305005_305015()
            {
                var return_v = Expression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305005, 305015);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_305048_305058()
            {
                var return_v = Expression;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305048, 305058);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_305084_305093()
            {
                var return_v = Alignment;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305084, 305093);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_305126_305135()
            {
                var return_v = Alignment;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305126, 305135);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_305161_305173()
            {
                var return_v = FormatString;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305161, 305173);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_305206_305218()
            {
                var return_v = FormatString;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 305206, 305218);
                return return_v;
            }


            System.Exception
            f_306_305248_305297((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 305248, 305297);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Expression != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Alignment != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (FormatString != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 306168, 306175);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306171, 306175);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 306168, 306175);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306168, 306175);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306168, 306175);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 306242, 306249);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306245, 306249);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 306242, 306249);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306242, 306249);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306242, 306249);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 306295, 306325);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306298, 306325);
                    return OperationKind.Interpolation; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 306295, 306325);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306295, 306325);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306295, 306325);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 306390, 306425);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306393, 306425);
                f_306_306393_306425(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 306390, 306425);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306390, 306425);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306390, 306425);
            }

            int
            f_306_306393_306425(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.InterpolationOperation
            operation)
            {
                this_param.VisitInterpolation((Microsoft.CodeAnalysis.Operations.IInterpolationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 306393, 306425);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 306578, 306623);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306581, 306623);
                return f_306_306581_306623(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 306578, 306623);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306578, 306623);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306578, 306623);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_306581_306623(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.InterpolationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitInterpolation((Microsoft.CodeAnalysis.Operations.IInterpolationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 306581, 306623);
                return return_v;
            }

        }

        static InterpolationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 304147, 306631);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 304147, 306631);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 304147, 306631);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 304147, 306631);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_304544_304580(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.InterpolationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 304544, 304580);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_304607_304642(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.InterpolationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 304607, 304642);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_304672_304710(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.InterpolationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 304672, 304710);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_304472_304485_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 304282, 304722);
            return return_v;
        }

    }
    internal abstract partial class BasePatternOperation : Operation, IPatternOperation
    {
        protected BasePatternOperation(ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_306903_306916_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 306737, 307037);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307047, 307084);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307094, 307134);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306962, 306984);

                InputType = inputType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 306998, 307026);

                NarrowedType = narrowedType;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 306737, 307037);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 306737, 307037);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306737, 307037);
            }
        }

        public ITypeSymbol InputType { get; }

        public ITypeSymbol NarrowedType { get; }

        static BasePatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 306637, 307141);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 306637, 307141);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 306637, 307141);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 306637, 307141);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_306903_306916_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 306737, 307037);
            return return_v;
        }

    }
    internal sealed partial class ConstantPatternOperation : BasePatternOperation, IConstantPatternOperation
    {
        internal ConstantPatternOperation(IOperation value, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_307455_307464_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 307268, 307590);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307600, 307632);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307539, 307579);

                Value = f_306_307547_307578(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 307268, 307590);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 307268, 307590);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 307268, 307590);
            }
        }

        public IOperation Value { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 307717, 307909);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307720, 307909);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307766, 307784) || true) && (f_306_307771_307776() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 307766, 307784) || true)
                        => f_306_307809_307814(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 307833, 307893) && DynAbs.Tracing.TraceSender.Expression_True(306, 307833, 307893))
    => throw f_306_307844_307893((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 307717, 307909);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 307717, 307909);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 307717, 307909);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_307771_307776()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 307771, 307776);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_307809_307814()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 307809, 307814);
                return return_v;
            }


            System.Exception
            f_306_307844_307893((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 307844, 307893);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 308498, 308505);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 308501, 308505);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 308498, 308505);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 308498, 308505);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308498, 308505);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 308572, 308579);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 308575, 308579);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 308572, 308579);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 308572, 308579);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308572, 308579);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 308625, 308657);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 308628, 308657);
                    return OperationKind.ConstantPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 308625, 308657);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 308625, 308657);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308625, 308657);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 308722, 308759);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 308725, 308759);
                f_306_308725_308759(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 308722, 308759);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 308722, 308759);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308722, 308759);
            }

            int
            f_306_308725_308759(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
            operation)
            {
                this_param.VisitConstantPattern((Microsoft.CodeAnalysis.Operations.IConstantPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 308725, 308759);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 308912, 308959);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 308915, 308959);
                return f_306_308915_308959(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 308912, 308959);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 308912, 308959);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308912, 308959);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_308915_308959(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConstantPattern((Microsoft.CodeAnalysis.Operations.IConstantPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 308915, 308959);
                return return_v;
            }

        }

        static ConstantPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 307147, 308967);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 307147, 308967);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 307147, 308967);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 307147, 308967);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_307547_307578(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 307547, 307578);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_307455_307464_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 307268, 307590);
            return return_v;
        }

    }
    internal sealed partial class DeclarationPatternOperation : BasePatternOperation, IDeclarationPatternOperation
    {
        internal DeclarationPatternOperation(ITypeSymbol? matchedType, bool matchesNull, ISymbol? declaredSymbol, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_309341_309350_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 309100, 309548);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309558, 309598);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309608, 309640);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309650, 309689);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309425, 309451);

                MatchedType = matchedType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309465, 309491);

                MatchesNull = matchesNull;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309505, 309537);

                DeclaredSymbol = declaredSymbol;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 309100, 309548);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 309100, 309548);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 309100, 309548);
            }
        }

        public ITypeSymbol? MatchedType { get; }

        public bool MatchesNull { get; }

        public ISymbol? DeclaredSymbol { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 309761, 309819);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309764, 309819);
                throw f_306_309770_309819((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 309761, 309819);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 309761, 309819);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 309761, 309819);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_309770_309819((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 309770, 309819);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 309939, 309977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 309942, 309977);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 309939, 309977);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 309939, 309977);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 309939, 309977);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 310022, 310029);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310025, 310029);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 310022, 310029);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310022, 310029);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310022, 310029);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 310096, 310103);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310099, 310103);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 310096, 310103);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310096, 310103);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310096, 310103);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 310149, 310184);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310152, 310184);
                    return OperationKind.DeclarationPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 310149, 310184);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310149, 310184);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310149, 310184);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 310249, 310289);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310252, 310289);
                f_306_310252_310289(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 310249, 310289);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310249, 310289);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310249, 310289);
            }

            int
            f_306_310252_310289(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
            operation)
            {
                this_param.VisitDeclarationPattern((Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 310252, 310289);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 310442, 310492);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310445, 310492);
                return f_306_310445_310492(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 310442, 310492);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310442, 310492);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310442, 310492);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_310445_310492(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDeclarationPattern((Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 310445, 310492);
                return return_v;
            }

        }

        static DeclarationPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 308973, 310500);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 308973, 310500);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 308973, 310500);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 308973, 310500);

        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_309341_309350_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 309100, 309548);
            return return_v;
        }

    }
    internal sealed partial class TupleBinaryOperation : Operation, ITupleBinaryOperation
    {
        internal TupleBinaryOperation(BinaryOperatorKind operatorKind, IOperation leftOperand, IOperation rightOperand, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_310825_310838_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 310608, 311083);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311093, 311140);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311150, 311188);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311198, 311237);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 312302, 312344);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310884, 310912);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310926, 310978);

                LeftOperand = f_306_310940_310977(leftOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 310992, 311046);

                RightOperand = f_306_311007_311045(rightOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311060, 311072);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 310608, 311083);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 310608, 311083);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310608, 311083);
            }
        }

        public BinaryOperatorKind OperatorKind { get; }

        public IOperation LeftOperand { get; }

        public IOperation RightOperand { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 311322, 311609);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311325, 311609);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311371, 311395) || true) && (f_306_311376_311387() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 311371, 311395) || true)
                        => f_306_311420_311431(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311452, 311477) || true) && (f_306_311457_311469() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 311452, 311477) || true)
                        => f_306_311502_311514(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 311533, 311593) && DynAbs.Tracing.TraceSender.Expression_True(306, 311533, 311593))
    => throw f_306_311544_311593((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 311322, 311609);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 311322, 311609);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 311322, 311609);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_311376_311387()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 311376, 311387);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_311420_311431()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 311420, 311431);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_311457_311469()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 311457, 311469);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_311502_311514()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 311502, 311514);
                return return_v;
            }


            System.Exception
            f_306_311544_311593((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 311544, 311593);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LeftOperand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (RightOperand != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 312410, 312417);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 312413, 312417);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 312410, 312417);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 312410, 312417);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312410, 312417);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 312463, 312491);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 312466, 312491);
                    return OperationKind.TupleBinary; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 312463, 312491);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 312463, 312491);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312463, 312491);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 312556, 312597);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 312559, 312597);
                f_306_312559_312597(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 312556, 312597);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 312556, 312597);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312556, 312597);
            }

            int
            f_306_312559_312597(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
            operation)
            {
                this_param.VisitTupleBinaryOperator((Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 312559, 312597);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 312750, 312801);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 312753, 312801);
                return f_306_312753_312801(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 312750, 312801);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 312750, 312801);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312750, 312801);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_312753_312801(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTupleBinaryOperator((Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 312753, 312801);
                return return_v;
            }

        }

        static TupleBinaryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 310506, 312809);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 310506, 312809);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 310506, 312809);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 310506, 312809);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_310940_310977(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 310940, 310977);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_311007_311045(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 311007, 311045);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_310825_310838_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 310608, 311083);
            return return_v;
        }

    }
    internal abstract partial class BaseMethodBodyBaseOperation : Operation, IMethodBodyBaseOperation
    {
        protected BaseMethodBodyBaseOperation(IBlockOperation? blockBody, IBlockOperation? expressionBody, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_313114_313127_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 312929, 313304);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313314, 313356);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313366, 313413);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313173, 313221);

                BlockBody = f_306_313185_313220(blockBody, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313235, 313293);

                ExpressionBody = f_306_313252_313292(expressionBody, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 312929, 313304);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 312929, 313304);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312929, 313304);
            }
        }

        public IBlockOperation? BlockBody { get; }

        public IBlockOperation? ExpressionBody { get; }

        static BaseMethodBodyBaseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 312815, 313420);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 312815, 313420);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 312815, 313420);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 312815, 313420);

        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_313185_313220(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        operation, Microsoft.CodeAnalysis.Operations.BaseMethodBodyBaseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 313185, 313220);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_313252_313292(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        operation, Microsoft.CodeAnalysis.Operations.BaseMethodBodyBaseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 313252, 313292);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_313114_313127_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 312929, 313304);
            return return_v;
        }

    }
    internal sealed partial class MethodBodyOperation : BaseMethodBodyBaseOperation, IMethodBodyOperation
    {
        internal MethodBodyOperation(IBlockOperation? blockBody, IBlockOperation? expressionBody, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_313720_313729_C(blockBody), expressionBody, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 313544, 313785);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 313544, 313785);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 313544, 313785);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 313544, 313785);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 313870, 314157);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313873, 314157);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313919, 313941) || true) && (f_306_313924_313933() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 313919, 313941) || true)
                        => f_306_313966_313975(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 313996, 314023) || true) && (f_306_314001_314015() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 313996, 314023) || true)
                        => f_306_314048_314062(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 314081, 314141) && DynAbs.Tracing.TraceSender.Expression_True(306, 314081, 314141))
    => throw f_306_314092_314141((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 313870, 314157);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 313870, 314157);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 313870, 314157);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_313924_313933()
            {
                var return_v = BlockBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 313924, 313933);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_313966_313975()
            {
                var return_v = BlockBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 313966, 313975);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_314001_314015()
            {
                var return_v = ExpressionBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 314001, 314015);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_314048_314062()
            {
                var return_v = ExpressionBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 314048, 314062);
                return return_v;
            }


            System.Exception
            f_306_314092_314141((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 314092, 314141);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (BlockBody != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (ExpressionBody != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 314884, 314891);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 314887, 314891);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 314884, 314891);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 314884, 314891);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 314884, 314891);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 314958, 314965);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 314961, 314965);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 314958, 314965);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 314958, 314965);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 314958, 314965);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 315011, 315038);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315014, 315038);
                    return OperationKind.MethodBody; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 315011, 315038);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 315011, 315038);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 315011, 315038);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 315103, 315144);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315106, 315144);
                f_306_315106_315144(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 315103, 315144);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 315103, 315144);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 315103, 315144);
            }

            int
            f_306_315106_315144(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.MethodBodyOperation
            operation)
            {
                this_param.VisitMethodBodyOperation((Microsoft.CodeAnalysis.Operations.IMethodBodyOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 315106, 315144);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 315297, 315348);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315300, 315348);
                return f_306_315300_315348(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 315297, 315348);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 315297, 315348);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 315297, 315348);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_315300_315348(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.MethodBodyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitMethodBodyOperation((Microsoft.CodeAnalysis.Operations.IMethodBodyOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 315300, 315348);
                return return_v;
            }

        }

        static MethodBodyOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 313426, 315356);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 313426, 315356);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 313426, 315356);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 313426, 315356);

        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_313720_313729_C(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 313544, 313785);
            return return_v;
        }

    }
    internal sealed partial class ConstructorBodyOperation : BaseMethodBodyBaseOperation, IConstructorBodyOperation
    {
        internal ConstructorBodyOperation(ImmutableArray<ILocalSymbol> locals, IOperation? initializer, IBlockOperation? blockBody, IBlockOperation? expressionBody, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_315733_315742_C(blockBody), expressionBody, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 315490, 315912);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315983, 316022);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315819, 315835);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 315849, 315901);

                Initializer = f_306_315863_315900(initializer, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 315490, 315912);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 315490, 315912);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 315490, 315912);
            }
        }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IOperation? Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 316107, 316475);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 316110, 316475);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 316156, 316180) || true) && (f_306_316161_316172() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 316156, 316180) || true)
                        => f_306_316205_316216(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 316237, 316259) || true) && (f_306_316242_316251() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 316237, 316259) || true)
                        => f_306_316284_316293(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 316314, 316341) || true) && (f_306_316319_316333() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 316314, 316341) || true)
                        => f_306_316366_316380(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 316399, 316459) && DynAbs.Tracing.TraceSender.Expression_True(306, 316399, 316459))
    => throw f_306_316410_316459((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 316107, 316475);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 316107, 316475);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 316107, 316475);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_316161_316172()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316161, 316172);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_316205_316216()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316205, 316216);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_316242_316251()
            {
                var return_v = BlockBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316242, 316251);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_316284_316293()
            {
                var return_v = BlockBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316284, 316293);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation?
            f_306_316319_316333()
            {
                var return_v = ExpressionBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316319, 316333);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IBlockOperation
            f_306_316366_316380()
            {
                var return_v = ExpressionBody;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 316366, 316380);
                return return_v;
            }


            System.Exception
            f_306_316410_316459((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 316410, 316459);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Initializer != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (BlockBody != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (ExpressionBody != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 317333, 317340);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 317336, 317340);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 317333, 317340);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317333, 317340);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317333, 317340);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 317407, 317414);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 317410, 317414);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 317407, 317414);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317407, 317414);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317407, 317414);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 317460, 317492);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 317463, 317492);
                    return OperationKind.ConstructorBody; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 317460, 317492);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317460, 317492);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317460, 317492);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 317557, 317603);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 317560, 317603);
                f_306_317560_317603(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 317557, 317603);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317557, 317603);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317557, 317603);
            }

            int
            f_306_317560_317603(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
            operation)
            {
                this_param.VisitConstructorBodyOperation((Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 317560, 317603);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 317756, 317812);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 317759, 317812);
                return f_306_317759_317812(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 317756, 317812);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317756, 317812);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317756, 317812);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_317759_317812(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitConstructorBodyOperation((Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 317759, 317812);
                return return_v;
            }

        }

        static ConstructorBodyOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 315362, 317820);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 315362, 317820);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 315362, 317820);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 315362, 317820);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_315863_315900(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 315863, 315900);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IBlockOperation?
        f_306_315733_315742_C(Microsoft.CodeAnalysis.Operations.IBlockOperation?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 315490, 315912);
            return return_v;
        }

    }
    internal sealed partial class DiscardOperation : Operation, IDiscardOperation
    {
        internal DiscardOperation(IDiscardSymbol discardSymbol, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_318081_318094_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 317920, 318207);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318217, 318261);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318560, 318602);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318140, 318170);

                DiscardSymbol = discardSymbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318184, 318196);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 317920, 318207);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 317920, 318207);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317920, 318207);
            }
        }

        public IDiscardSymbol DiscardSymbol { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 318333, 318391);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318336, 318391);
                throw f_306_318342_318391((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 318333, 318391);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 318333, 318391);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 318333, 318391);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_318342_318391((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 318342, 318391);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 318511, 318549);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318514, 318549);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 318511, 318549);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 318511, 318549);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 318511, 318549);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 318668, 318675);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318671, 318675);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 318668, 318675);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 318668, 318675);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 318668, 318675);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 318721, 318745);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318724, 318745);
                    return OperationKind.Discard; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 318721, 318745);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 318721, 318745);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 318721, 318745);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 318810, 318848);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 318813, 318848);
                f_306_318813_318848(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 318810, 318848);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 318810, 318848);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 318810, 318848);
            }

            int
            f_306_318813_318848(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DiscardOperation
            operation)
            {
                this_param.VisitDiscardOperation((Microsoft.CodeAnalysis.Operations.IDiscardOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 318813, 318848);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 319001, 319049);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319004, 319049);
                return f_306_319004_319049(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 319001, 319049);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 319001, 319049);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 319001, 319049);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_319004_319049(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DiscardOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDiscardOperation((Microsoft.CodeAnalysis.Operations.IDiscardOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 319004, 319049);
                return return_v;
            }

        }

        static DiscardOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 317826, 319057);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 317826, 319057);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 317826, 319057);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 317826, 319057);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_318081_318094_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 317920, 318207);
            return return_v;
        }

    }
    internal sealed partial class FlowCaptureOperation : Operation, IFlowCaptureOperation
    {
        internal FlowCaptureOperation(CaptureId id, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_319313_319326_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 319165, 319445);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319493, 319525);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319372, 319380);

                Id = id;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319394, 319434);

                Value = f_306_319402_319433(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 319165, 319445);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 319165, 319445);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 319165, 319445);
            }
        }

        public CaptureId Id { get; }

        public IOperation Value { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 319610, 319802);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319613, 319802);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319659, 319677) || true) && (f_306_319664_319669() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 319659, 319677) || true)
                        => f_306_319702_319707(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 319726, 319786) && DynAbs.Tracing.TraceSender.Expression_True(306, 319726, 319786))
    => throw f_306_319737_319786((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 319610, 319802);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 319610, 319802);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 319610, 319802);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_319664_319669()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 319664, 319669);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_319702_319707()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 319702, 319707);
                return return_v;
            }


            System.Exception
            f_306_319737_319786((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 319737, 319786);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 320391, 320398);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 320394, 320398);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 320391, 320398);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320391, 320398);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320391, 320398);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 320465, 320472);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 320468, 320472);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 320465, 320472);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320465, 320472);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320465, 320472);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 320518, 320546);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 320521, 320546);
                    return OperationKind.FlowCapture; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 320518, 320546);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320518, 320546);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320518, 320546);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 320611, 320644);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 320614, 320644);
                f_306_320614_320644(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 320611, 320644);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320611, 320644);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320611, 320644);
            }

            int
            f_306_320614_320644(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.FlowCaptureOperation
            operation)
            {
                this_param.VisitFlowCapture((Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 320614, 320644);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 320797, 320840);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 320800, 320840);
                return f_306_320800_320840(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 320797, 320840);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320797, 320840);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320797, 320840);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_320800_320840(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.FlowCaptureOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitFlowCapture((Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 320800, 320840);
                return return_v;
            }

        }

        static FlowCaptureOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 319063, 320848);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 319063, 320848);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 319063, 320848);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 319063, 320848);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_319402_319433(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.FlowCaptureOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 319402, 319433);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_319313_319326_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 319165, 319445);
            return return_v;
        }

    }
    internal sealed partial class FlowCaptureReferenceOperation : Operation, IFlowCaptureReferenceOperation
    {
        internal FlowCaptureReferenceOperation(CaptureId id, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_321162_321175_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 320974, 321319);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321656, 321698);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321708, 321772);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321221, 321229);

                Id = id;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321243, 321282);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321296, 321308);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 320974, 321319);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 320974, 321319);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320974, 321319);
            }
        }

        public CaptureId Id { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 321429, 321487);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321432, 321487);
                throw f_306_321438_321487((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 321429, 321487);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 321429, 321487);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 321429, 321487);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_321438_321487((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 321438, 321487);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 321607, 321645);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321610, 321645);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 321607, 321645);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 321607, 321645);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 321607, 321645);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 321817, 321854);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321820, 321854);
                    return OperationKind.FlowCaptureReference; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 321817, 321854);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 321817, 321854);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 321817, 321854);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 321919, 321961);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 321922, 321961);
                f_306_321922_321961(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 321919, 321961);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 321919, 321961);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 321919, 321961);
            }

            int
            f_306_321922_321961(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
            operation)
            {
                this_param.VisitFlowCaptureReference((Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 321922, 321961);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 322114, 322166);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322117, 322166);
                return f_306_322117_322166(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 322114, 322166);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 322114, 322166);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 322114, 322166);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_322117_322166(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitFlowCaptureReference((Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 322117, 322166);
                return return_v;
            }

        }

        static FlowCaptureReferenceOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 320854, 322174);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 320854, 322174);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 320854, 322174);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 320854, 322174);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_321162_321175_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 320974, 321319);
            return return_v;
        }

    }
    internal sealed partial class IsNullOperation : Operation, IIsNullOperation
    {
        internal IsNullOperation(IOperation operand, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, ConstantValue? constantValue, bool isImplicit)
        : base(f_306_322452_322465_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 322272, 322645);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322655, 322689);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 323527, 323569);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 323579, 323643);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322511, 322555);

                Operand = f_306_322521_322554(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322569, 322608);

                OperationConstantValue = constantValue;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322622, 322634);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 322272, 322645);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 322272, 322645);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 322272, 322645);
            }
        }

        public IOperation Operand { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 322774, 322970);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322777, 322970);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322823, 322843) || true) && (f_306_322828_322835() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 322823, 322843) || true)
                        => f_306_322868_322875(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 322894, 322954) && DynAbs.Tracing.TraceSender.Expression_True(306, 322894, 322954))
    => throw f_306_322905_322954((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 322774, 322970);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 322774, 322970);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 322774, 322970);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_322828_322835()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 322828, 322835);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_322868_322875()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 322868, 322875);
                return return_v;
            }


            System.Exception
            f_306_322905_322954((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 322905, 322954);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue { get; }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 323688, 323711);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 323691, 323711);
                    return OperationKind.IsNull; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 323688, 323711);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 323688, 323711);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 323688, 323711);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 323776, 323804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 323779, 323804);
                f_306_323779_323804(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 323776, 323804);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 323776, 323804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 323776, 323804);
            }

            int
            f_306_323779_323804(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IsNullOperation
            operation)
            {
                this_param.VisitIsNull((Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 323779, 323804);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 323957, 323995);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 323960, 323995);
                return f_306_323960_323995(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 323957, 323995);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 323957, 323995);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 323957, 323995);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_323960_323995(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IsNullOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitIsNull((Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 323960, 323995);
                return return_v;
            }

        }

        static IsNullOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 322180, 324003);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 322180, 324003);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 322180, 324003);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 322180, 324003);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_322521_322554(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.IsNullOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 322521, 322554);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_322452_322465_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 322272, 322645);
            return return_v;
        }

    }
    internal sealed partial class CaughtExceptionOperation : Operation, ICaughtExceptionOperation
    {
        internal CaughtExceptionOperation(SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_324258_324271_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 324119, 324340);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324639, 324681);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324317, 324329);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 324119, 324340);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324119, 324340);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324119, 324340);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 324412, 324470);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324415, 324470);
                throw f_306_324421_324470((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 324412, 324470);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324412, 324470);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324412, 324470);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_324421_324470((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 324421, 324470);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 324590, 324628);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324593, 324628);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 324590, 324628);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324590, 324628);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324590, 324628);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 324747, 324754);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324750, 324754);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 324747, 324754);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324747, 324754);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324747, 324754);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 324800, 324832);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324803, 324832);
                    return OperationKind.CaughtException; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 324800, 324832);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324800, 324832);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324800, 324832);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 324897, 324934);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 324900, 324934);
                f_306_324900_324934(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 324897, 324934);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 324897, 324934);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324897, 324934);
            }

            int
            f_306_324900_324934(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.CaughtExceptionOperation
            operation)
            {
                this_param.VisitCaughtException((Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 324900, 324934);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 325087, 325134);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325090, 325134);
                return f_306_325090_325134(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 325087, 325134);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 325087, 325134);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 325087, 325134);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_325090_325134(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.CaughtExceptionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitCaughtException((Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 325090, 325134);
                return return_v;
            }

        }

        static CaughtExceptionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 324009, 325142);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 324009, 325142);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 324009, 325142);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 324009, 325142);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_324258_324271_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 324119, 324340);
            return return_v;
        }

    }
    internal sealed partial class StaticLocalInitializationSemaphoreOperation : Operation, IStaticLocalInitializationSemaphoreOperation
    {
        internal StaticLocalInitializationSemaphoreOperation(ILocalSymbol local, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_325474_325487_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 325296, 325584);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325594, 325628);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325927, 325969);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325533, 325547);

                Local = local;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325561, 325573);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 325296, 325584);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 325296, 325584);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 325296, 325584);
            }
        }

        public ILocalSymbol Local { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 325700, 325758);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325703, 325758);
                throw f_306_325709_325758((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 325700, 325758);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 325700, 325758);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 325700, 325758);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_325709_325758((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 325709, 325758);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 325878, 325916);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 325881, 325916);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 325878, 325916);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 325878, 325916);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 325878, 325916);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 326035, 326042);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326038, 326042);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 326035, 326042);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326035, 326042);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326035, 326042);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 326088, 326139);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326091, 326139);
                    return OperationKind.StaticLocalInitializationSemaphore; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 326088, 326139);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326088, 326139);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326088, 326139);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 326204, 326260);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326207, 326260);
                f_306_326207_326260(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 326204, 326260);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326204, 326260);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326204, 326260);
            }

            int
            f_306_326207_326260(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.StaticLocalInitializationSemaphoreOperation
            operation)
            {
                this_param.VisitStaticLocalInitializationSemaphore((Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 326207, 326260);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 326413, 326479);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326416, 326479);
                return f_306_326416_326479(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 326413, 326479);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326413, 326479);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326413, 326479);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_326416_326479(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.StaticLocalInitializationSemaphoreOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitStaticLocalInitializationSemaphore((Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 326416, 326479);
                return return_v;
            }

        }

        static StaticLocalInitializationSemaphoreOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 325148, 326487);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 325148, 326487);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 325148, 326487);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 325148, 326487);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_325474_325487_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 325296, 325584);
            return return_v;
        }

    }
    internal sealed partial class CoalesceAssignmentOperation : BaseAssignmentOperation, ICoalesceAssignmentOperation
    {
        internal CoalesceAssignmentOperation(IOperation target, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_326802_326808_C(target), value, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 326623, 326899);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 327928, 327970);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326876, 326888);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 326623, 326899);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326623, 326899);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326623, 326899);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 326984, 327247);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 326987, 327247);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 327033, 327052) || true) && (f_306_327038_327044() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 327033, 327052) || true)
                        => f_306_327077_327083(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 327104, 327122) || true) && (f_306_327109_327114() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 327104, 327122) || true)
                        => f_306_327147_327152(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 327171, 327231) && DynAbs.Tracing.TraceSender.Expression_True(306, 327171, 327231))
    => throw f_306_327182_327231((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 326984, 327247);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 326984, 327247);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326984, 327247);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_327038_327044()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 327038, 327044);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_327077_327083()
            {
                var return_v = Target;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 327077, 327083);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_327109_327114()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 327109, 327114);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_327147_327152()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 327147, 327152);
                return return_v;
            }


            System.Exception
            f_306_327182_327231((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 327182, 327231);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Target != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Value != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 328036, 328043);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328039, 328043);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 328036, 328043);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 328036, 328043);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328036, 328043);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 328089, 328124);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328092, 328124);
                    return OperationKind.CoalesceAssignment; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 328089, 328124);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 328089, 328124);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328089, 328124);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 328189, 328229);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328192, 328229);
                f_306_328192_328229(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 328189, 328229);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 328189, 328229);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328189, 328229);
            }

            int
            f_306_328192_328229(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
            operation)
            {
                this_param.VisitCoalesceAssignment((Microsoft.CodeAnalysis.Operations.ICoalesceAssignmentOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 328192, 328229);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 328382, 328432);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328385, 328432);
                return f_306_328385_328432(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 328382, 328432);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 328382, 328432);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328382, 328432);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_328385_328432(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitCoalesceAssignment((Microsoft.CodeAnalysis.Operations.ICoalesceAssignmentOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 328385, 328432);
                return return_v;
            }

        }

        static CoalesceAssignmentOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 326493, 328440);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 326493, 328440);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 326493, 328440);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 326493, 328440);

        static Microsoft.CodeAnalysis.IOperation
        f_306_326802_326808_C(Microsoft.CodeAnalysis.IOperation
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 326623, 326899);
            return return_v;
        }

    }
    internal sealed partial class RangeOperation : Operation, IRangeOperation
    {
        internal RangeOperation(IOperation? leftOperand, IOperation? rightOperand, bool isLifted, IMethodSymbol? method, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_328754_328767_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 328536, 329034);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329044, 329083);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329093, 329133);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329143, 329172);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329182, 329219);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 330284, 330326);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328813, 328865);

                LeftOperand = f_306_328827_328864(leftOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328879, 328933);

                RightOperand = f_306_328894_328932(rightOperand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328947, 328967);

                IsLifted = isLifted;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 328981, 328997);

                Method = method;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329011, 329023);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 328536, 329034);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 328536, 329034);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328536, 329034);
            }
        }

        public IOperation? LeftOperand { get; }

        public IOperation? RightOperand { get; }

        public bool IsLifted { get; }

        public IMethodSymbol? Method { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 329304, 329591);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329307, 329591);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329353, 329377) || true) && (f_306_329358_329369() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 329353, 329377) || true)
                        => f_306_329402_329413(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329434, 329459) || true) && (f_306_329439_329451() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 329434, 329459) || true)
                        => f_306_329484_329496(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 329515, 329575) && DynAbs.Tracing.TraceSender.Expression_True(306, 329515, 329575))
    => throw f_306_329526_329575((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 329304, 329591);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 329304, 329591);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 329304, 329591);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_329358_329369()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 329358, 329369);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_329402_329413()
            {
                var return_v = LeftOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 329402, 329413);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_329439_329451()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 329439, 329451);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_329484_329496()
            {
                var return_v = RightOperand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 329484, 329496);
                return return_v;
            }


            System.Exception
            f_306_329526_329575((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 329526, 329575);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LeftOperand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (RightOperand != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 330392, 330399);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 330395, 330399);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 330392, 330399);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 330392, 330399);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330392, 330399);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 330445, 330467);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 330448, 330467);
                    return OperationKind.Range; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 330445, 330467);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 330445, 330467);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330445, 330467);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 330532, 330568);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 330535, 330568);
                f_306_330535_330568(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 330532, 330568);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 330532, 330568);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330532, 330568);
            }

            int
            f_306_330535_330568(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RangeOperation
            operation)
            {
                this_param.VisitRangeOperation((Microsoft.CodeAnalysis.Operations.IRangeOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 330535, 330568);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 330721, 330767);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 330724, 330767);
                return f_306_330724_330767(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 330721, 330767);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 330721, 330767);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330721, 330767);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_330724_330767(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RangeOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRangeOperation((Microsoft.CodeAnalysis.Operations.IRangeOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 330724, 330767);
                return return_v;
            }

        }

        static RangeOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 328446, 330775);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 328446, 330775);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 328446, 330775);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 328446, 330775);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_328827_328864(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.RangeOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 328827, 328864);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_328894_328932(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.RangeOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 328894, 328932);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_328754_328767_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 328536, 329034);
            return return_v;
        }

    }
    internal sealed partial class ReDimOperation : Operation, IReDimOperation
    {
        internal ReDimOperation(ImmutableArray<IReDimClauseOperation> clauses, bool preserve, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_331043_331056_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 330871, 331191);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331272, 331301);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331102, 331146);

                Clauses = f_306_331112_331145(clauses, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331160, 331180);

                Preserve = preserve;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 330871, 331191);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 330871, 331191);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330871, 331191);
            }
        }

        public ImmutableArray<IReDimClauseOperation> Clauses { get; }

        public bool Preserve { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 331386, 331596);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331389, 331596);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331435, 331462) || true) && (index < f_306_331448_331455().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 331435, 331462) || true)
                        => f_306_331487_331494()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 331520, 331580) && DynAbs.Tracing.TraceSender.Expression_True(306, 331520, 331580))
    => throw f_306_331531_331580((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 331386, 331596);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 331386, 331596);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 331386, 331596);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
            f_306_331448_331455()
            {
                var return_v = Clauses;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 331448, 331455);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
            f_306_331487_331494()
            {
                var return_v = Clauses;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 331487, 331494);
                return return_v;
            }


            System.Exception
            f_306_331531_331580((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 331531, 331580);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!Clauses.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < Clauses.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 332311, 332318);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 332314, 332318);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 332311, 332318);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332311, 332318);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332311, 332318);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 332385, 332392);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 332388, 332392);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 332385, 332392);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332385, 332392);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332385, 332392);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 332438, 332460);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 332441, 332460);
                    return OperationKind.ReDim; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 332438, 332460);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332438, 332460);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332438, 332460);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 332525, 332552);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 332528, 332552);
                f_306_332528_332552(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 332525, 332552);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332525, 332552);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332525, 332552);
            }

            int
            f_306_332528_332552(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ReDimOperation
            operation)
            {
                this_param.VisitReDim((Microsoft.CodeAnalysis.Operations.IReDimOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 332528, 332552);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 332705, 332742);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 332708, 332742);
                return f_306_332708_332742(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 332705, 332742);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332705, 332742);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332705, 332742);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_332708_332742(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ReDimOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitReDim((Microsoft.CodeAnalysis.Operations.IReDimOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 332708, 332742);
                return return_v;
            }

        }

        static ReDimOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 330781, 332750);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 330781, 332750);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 330781, 332750);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 330781, 332750);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
        f_306_331112_331145(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
        operations, Microsoft.CodeAnalysis.Operations.ReDimOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 331112, 331145);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_331043_331056_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 330871, 331191);
            return return_v;
        }

    }
    internal sealed partial class ReDimClauseOperation : Operation, IReDimClauseOperation
    {
        internal ReDimClauseOperation(IOperation operand, ImmutableArray<IOperation> dimensionSizes, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_333037_333050_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 332858, 333223);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333233, 333267);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333096, 333140);

                Operand = f_306_333106_333139(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333154, 333212);

                DimensionSizes = f_306_333171_333211(dimensionSizes, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 332858, 333223);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 332858, 333223);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332858, 333223);
            }
        }

        public IOperation Operand { get; }

        public ImmutableArray<IOperation> DimensionSizes { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 333419, 333716);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333422, 333716);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333468, 333488) || true) && (f_306_333473_333480() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 333468, 333488) || true)
                        => f_306_333513_333520(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333541, 333575) || true) && (index < f_306_333554_333568().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 333541, 333575) || true)
                        => f_306_333600_333614()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 333640, 333700) && DynAbs.Tracing.TraceSender.Expression_True(306, 333640, 333700))
    => throw f_306_333651_333700((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 333419, 333716);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 333419, 333716);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 333419, 333716);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_333473_333480()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 333473, 333480);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_333513_333520()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 333513, 333520);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_333554_333568()
            {
                var return_v = DimensionSizes;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 333554, 333568);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
            f_306_333600_333614()
            {
                var return_v = DimensionSizes;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 333600, 333614);
                return return_v;
            }


            System.Exception
            f_306_333651_333700((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 333651, 333700);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!DimensionSizes.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < DimensionSizes.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 334572, 334579);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 334575, 334579);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 334572, 334579);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 334572, 334579);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 334572, 334579);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 334646, 334653);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 334649, 334653);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 334646, 334653);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 334646, 334653);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 334646, 334653);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 334699, 334727);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 334702, 334727);
                    return OperationKind.ReDimClause; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 334699, 334727);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 334699, 334727);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 334699, 334727);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 334792, 334825);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 334795, 334825);
                f_306_334795_334825(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 334792, 334825);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 334792, 334825);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 334792, 334825);
            }

            int
            f_306_334795_334825(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
            operation)
            {
                this_param.VisitReDimClause((Microsoft.CodeAnalysis.Operations.IReDimClauseOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 334795, 334825);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 334978, 335021);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 334981, 335021);
                return f_306_334981_335021(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 334978, 335021);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 334978, 335021);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 334978, 335021);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_334981_335021(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitReDimClause((Microsoft.CodeAnalysis.Operations.IReDimClauseOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 334981, 335021);
                return return_v;
            }

        }

        static ReDimClauseOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 332756, 335029);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 332756, 335029);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 332756, 335029);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 332756, 335029);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_333106_333139(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 333106, 333139);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        f_306_333171_333211(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
        operations, Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 333171, 333211);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_333037_333050_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 332858, 333223);
            return return_v;
        }

    }
    internal sealed partial class RecursivePatternOperation : BasePatternOperation, IRecursivePatternOperation
    {
        internal RecursivePatternOperation(ITypeSymbol matchedType, ISymbol? deconstructSymbol, ImmutableArray<IPatternOperation> deconstructionSubpatterns, ImmutableArray<IPropertySubpatternOperation> propertySubpatterns, ISymbol? declaredSymbol, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_335533_335542_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 335158, 335928);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335938, 335977);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335987, 336029);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 336214, 336253);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335617, 335643);

                MatchedType = matchedType;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335657, 335695);

                DeconstructSymbol = deconstructSymbol;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335709, 335789);

                DeconstructionSubpatterns = f_306_335737_335788(deconstructionSubpatterns, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335803, 335871);

                PropertySubpatterns = f_306_335825_335870(propertySubpatterns, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 335885, 335917);

                DeclaredSymbol = declaredSymbol;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 335158, 335928);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 335158, 335928);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 335158, 335928);
            }
        }

        public ITypeSymbol MatchedType { get; }

        public ISymbol? DeconstructSymbol { get; }

        public ImmutableArray<IPatternOperation> DeconstructionSubpatterns { get; }

        public ImmutableArray<IPropertySubpatternOperation> PropertySubpatterns { get; }

        public ISymbol? DeclaredSymbol { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 336338, 336695);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 336341, 336695);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 336387, 336432) || true) && (index < f_306_336400_336425().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 336387, 336432) || true)
                        => f_306_336457_336482()[index],
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 336510, 336549) || true) && (index < f_306_336523_336542().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 336510, 336549) || true)
                        => f_306_336574_336593()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 336619, 336679) && DynAbs.Tracing.TraceSender.Expression_True(306, 336619, 336679))
    => throw f_306_336630_336679((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 336338, 336695);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 336338, 336695);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 336338, 336695);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
            f_306_336400_336425()
            {
                var return_v = DeconstructionSubpatterns;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 336400, 336425);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
            f_306_336457_336482()
            {
                var return_v = DeconstructionSubpatterns;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 336457, 336482);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
            f_306_336523_336542()
            {
                var return_v = PropertySubpatterns;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 336523, 336542);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
            f_306_336574_336593()
            {
                var return_v = PropertySubpatterns;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 336574, 336593);
                return return_v;
            }


            System.Exception
            f_306_336630_336679((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 336630, 336679);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (!DeconstructionSubpatterns.IsEmpty) return (true, 0, 0);
                    else goto case 0;
                case 0 when previousIndex + 1 < DeconstructionSubpatterns.Length:
                    return (true, 0, previousIndex + 1);
                case 0:
                    if (!PropertySubpatterns.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < PropertySubpatterns.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 337721, 337728);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 337724, 337728);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 337721, 337728);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 337721, 337728);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 337721, 337728);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 337795, 337802);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 337798, 337802);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 337795, 337802);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 337795, 337802);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 337795, 337802);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 337848, 337881);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 337851, 337881);
                    return OperationKind.RecursivePattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 337848, 337881);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 337848, 337881);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 337848, 337881);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 337946, 337984);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 337949, 337984);
                f_306_337949_337984(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 337946, 337984);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 337946, 337984);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 337946, 337984);
            }

            int
            f_306_337949_337984(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
            operation)
            {
                this_param.VisitRecursivePattern((Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 337949, 337984);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 338137, 338185);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 338140, 338185);
                return f_306_338140_338185(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 338137, 338185);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338137, 338185);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338137, 338185);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_338140_338185(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRecursivePattern((Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 338140, 338185);
                return return_v;
            }

        }

        static RecursivePatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 335035, 338193);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 335035, 338193);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 335035, 338193);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 335035, 338193);

        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
        f_306_335737_335788(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
        operations, Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 335737, 335788);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
        f_306_335825_335870(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
        operations, Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 335825, 335870);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_335533_335542_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 335158, 335928);
            return return_v;
        }

    }
    internal sealed partial class DiscardPatternOperation : BasePatternOperation, IDiscardPatternOperation
    {
        internal DiscardPatternOperation(ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_338486_338495_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 338318, 338549);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 338318, 338549);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338318, 338549);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338318, 338549);
            }
        }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 338621, 338679);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 338624, 338679);
                throw f_306_338630_338679((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 338621, 338679);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338621, 338679);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338621, 338679);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_338630_338679((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 338630, 338679);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 338799, 338837);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 338802, 338837);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 338799, 338837);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338799, 338837);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338799, 338837);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 338882, 338889);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 338885, 338889);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 338882, 338889);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338882, 338889);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338882, 338889);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 338956, 338963);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 338959, 338963);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 338956, 338963);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 338956, 338963);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338956, 338963);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 339009, 339040);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339012, 339040);
                    return OperationKind.DiscardPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 339009, 339040);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 339009, 339040);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 339009, 339040);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 339105, 339141);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339108, 339141);
                f_306_339108_339141(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 339105, 339141);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 339105, 339141);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 339105, 339141);
            }

            int
            f_306_339108_339141(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
            operation)
            {
                this_param.VisitDiscardPattern((Microsoft.CodeAnalysis.Operations.IDiscardPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 339108, 339141);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 339294, 339340);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339297, 339340);
                return f_306_339297_339340(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 339294, 339340);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 339294, 339340);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 339294, 339340);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_339297_339340(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitDiscardPattern((Microsoft.CodeAnalysis.Operations.IDiscardPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 339297, 339340);
                return return_v;
            }

        }

        static DiscardPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 338199, 339348);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 338199, 339348);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 338199, 339348);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 338199, 339348);

        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_338486_338495_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 338318, 338549);
            return return_v;
        }

    }
    internal sealed partial class SwitchExpressionOperation : Operation, ISwitchExpressionOperation
    {
        internal SwitchExpressionOperation(IOperation value, ImmutableArray<ISwitchExpressionArmOperation> arms, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_339676_339689_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 339466, 339864);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339874, 339906);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 341140, 341182);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339735, 339775);

                Value = f_306_339743_339774(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339789, 339827);

                Arms = f_306_339796_339826(arms, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 339841, 339853);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 339466, 339864);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 339466, 339864);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 339466, 339864);
            }
        }

        public IOperation Value { get; }

        public ImmutableArray<ISwitchExpressionArmOperation> Arms { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 340067, 340340);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 340070, 340340);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 340116, 340134) || true) && (f_306_340121_340126() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 340116, 340134) || true)
                        => f_306_340159_340164(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 340185, 340209) || true) && (index < f_306_340198_340202().Length) && (DynAbs.Tracing.TraceSender.Expression_True(306, 340185, 340209) || true)
                        => f_306_340234_340238()[index],
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 340264, 340324) && DynAbs.Tracing.TraceSender.Expression_True(306, 340264, 340324))
    => throw f_306_340275_340324((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 340067, 340340);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 340067, 340340);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 340067, 340340);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_340121_340126()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 340121, 340126);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_340159_340164()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 340159, 340164);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
            f_306_340198_340202()
            {
                var return_v = Arms;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 340198, 340202);
                return return_v;
            }


            System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
            f_306_340234_340238()
            {
                var return_v = Arms;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 340234, 340238);
                return return_v;
            }


            System.Exception
            f_306_340275_340324((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 340275, 340324);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (!Arms.IsEmpty) return (true, 1, 0);
                    else goto case 1;
                case 1 when previousIndex + 1 < Arms.Length:
                    return (true, 1, previousIndex + 1);
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 341248, 341255);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 341251, 341255);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 341248, 341255);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 341248, 341255);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341248, 341255);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 341301, 341334);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 341304, 341334);
                    return OperationKind.SwitchExpression; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 341301, 341334);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 341301, 341334);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341301, 341334);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 341399, 341437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 341402, 341437);
                f_306_341402_341437(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 341399, 341437);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 341399, 341437);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341399, 341437);
            }

            int
            f_306_341402_341437(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
            operation)
            {
                this_param.VisitSwitchExpression((Microsoft.CodeAnalysis.Operations.ISwitchExpressionOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 341402, 341437);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 341590, 341638);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 341593, 341638);
                return f_306_341593_341638(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 341590, 341638);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 341590, 341638);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341590, 341638);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_341593_341638(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSwitchExpression((Microsoft.CodeAnalysis.Operations.ISwitchExpressionOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 341593, 341638);
                return return_v;
            }

        }

        static SwitchExpressionOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 339354, 341646);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 339354, 341646);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 339354, 341646);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 339354, 341646);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_339743_339774(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 339743, 339774);
            return return_v;
        }


        static System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
        f_306_339796_339826(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
        operations, Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
        parent)
        {
            var return_v = SetParentOperation(operations, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 339796, 339826);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_339676_339689_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 339466, 339864);
            return return_v;
        }

    }
    internal sealed partial class SwitchExpressionArmOperation : Operation, ISwitchExpressionArmOperation
    {
        internal SwitchExpressionArmOperation(IPatternOperation pattern, IOperation? guard, IOperation value, ImmutableArray<ILocalSymbol> locals, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_341995_342008_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 341770, 342247);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342257, 342298);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342308, 342341);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342351, 342383);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342054, 342098);

                Pattern = f_306_342064_342097(pattern, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342112, 342152);

                Guard = f_306_342120_342151(guard, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342166, 342206);

                Value = f_306_342174_342205(value, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342220, 342236);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 341770, 342247);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 341770, 342247);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341770, 342247);
            }
        }

        public IPatternOperation Pattern { get; }

        public IOperation? Guard { get; }

        public IOperation Value { get; }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 342529, 342863);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342532, 342863);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342578, 342598) || true) && (f_306_342583_342590() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 342578, 342598) || true)
                        => f_306_342623_342630(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342651, 342669) || true) && (f_306_342656_342661() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 342651, 342669) || true)
                        => f_306_342694_342699(),
                    2 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342720, 342738) || true) && (f_306_342725_342730() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 342720, 342738) || true)
                        => f_306_342763_342768(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 342787, 342847) && DynAbs.Tracing.TraceSender.Expression_True(306, 342787, 342847))
    => throw f_306_342798_342847((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 342529, 342863);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 342529, 342863);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 342529, 342863);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_342583_342590()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342583, 342590);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_342623_342630()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342623, 342630);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation?
            f_306_342656_342661()
            {
                var return_v = Guard;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342656, 342661);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_342694_342699()
            {
                var return_v = Guard;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342694, 342699);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_342725_342730()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342725, 342730);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_342763_342768()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 342763, 342768);
                return return_v;
            }


            System.Exception
            f_306_342798_342847((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 342798, 342847);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Pattern != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Guard != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                    if (Value != null) return (true, 2, 0);
                    else goto case 2;
                case 2:
                case 3:
                    return (false, 3, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 343704, 343711);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 343707, 343711);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 343704, 343711);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 343704, 343711);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 343704, 343711);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 343778, 343785);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 343781, 343785);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 343778, 343785);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 343778, 343785);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 343778, 343785);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 343831, 343867);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 343834, 343867);
                    return OperationKind.SwitchExpressionArm; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 343831, 343867);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 343831, 343867);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 343831, 343867);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 343932, 343973);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 343935, 343973);
                f_306_343935_343973(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 343932, 343973);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 343932, 343973);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 343932, 343973);
            }

            int
            f_306_343935_343973(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
            operation)
            {
                this_param.VisitSwitchExpressionArm((Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 343935, 343973);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 344126, 344177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344129, 344177);
                return f_306_344129_344177(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 344126, 344177);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 344126, 344177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 344126, 344177);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_344129_344177(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitSwitchExpressionArm((Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 344129, 344177);
                return return_v;
            }

        }

        static SwitchExpressionArmOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 341652, 344185);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 341652, 344185);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 341652, 344185);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 341652, 344185);

        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_342064_342097(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 342064, 342097);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_342120_342151(Microsoft.CodeAnalysis.IOperation?
        operation, Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 342120, 342151);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_342174_342205(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 342174, 342205);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_341995_342008_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 341770, 342247);
            return return_v;
        }

    }
    internal sealed partial class PropertySubpatternOperation : Operation, IPropertySubpatternOperation
    {
        internal PropertySubpatternOperation(IOperation member, IPatternOperation pattern, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_344476_344489_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 344307, 344646);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344656, 344689);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344699, 344740);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344535, 344577);

                Member = f_306_344544_344576(member, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344591, 344635);

                Pattern = f_306_344601_344634(pattern, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 344307, 344646);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 344307, 344646);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 344307, 344646);
            }
        }

        public IOperation Member { get; }

        public IPatternOperation Pattern { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 344825, 345092);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344828, 345092);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344874, 344893) || true) && (f_306_344879_344885() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 344874, 344893) || true)
                        => f_306_344918_344924(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 344945, 344965) || true) && (f_306_344950_344957() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 344945, 344965) || true)
                        => f_306_344990_344997(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 345016, 345076) && DynAbs.Tracing.TraceSender.Expression_True(306, 345016, 345076))
    => throw f_306_345027_345076((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 344825, 345092);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 344825, 345092);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 344825, 345092);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_344879_344885()
            {
                var return_v = Member;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 344879, 344885);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_344918_344924()
            {
                var return_v = Member;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 344918, 344924);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_344950_344957()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 344950, 344957);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_344990_344997()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 344990, 344997);
                return return_v;
            }


            System.Exception
            f_306_345027_345076((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 345027, 345076);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Member != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Pattern != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 345809, 345816);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 345812, 345816);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 345809, 345816);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 345809, 345816);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 345809, 345816);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 345883, 345890);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 345886, 345890);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 345883, 345890);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 345883, 345890);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 345883, 345890);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 345936, 345971);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 345939, 345971);
                    return OperationKind.PropertySubpattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 345936, 345971);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 345936, 345971);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 345936, 345971);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 346036, 346076);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346039, 346076);
                f_306_346039_346076(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 346036, 346076);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 346036, 346076);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 346036, 346076);
            }

            int
            f_306_346039_346076(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
            operation)
            {
                this_param.VisitPropertySubpattern((Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 346039, 346076);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 346229, 346279);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346232, 346279);
                return f_306_346232_346279(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 346229, 346279);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 346229, 346279);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 346229, 346279);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_346232_346279(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitPropertySubpattern((Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 346232, 346279);
                return return_v;
            }

        }

        static PropertySubpatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 344191, 346287);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 344191, 346287);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 344191, 346287);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 344191, 346287);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_344544_344576(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 344544, 344576);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_344601_344634(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 344601, 344634);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_344476_344489_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 344307, 344646);
            return return_v;
        }

    }
    internal sealed partial class AggregateQueryOperation : Operation, IAggregateQueryOperation
    {
        internal AggregateQueryOperation(IOperation group, IOperation aggregation, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_346581_346594_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 346401, 346783);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346793, 346825);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346835, 346873);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 347917, 347959);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346640, 346680);

                Group = f_306_346648_346679(group, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346694, 346746);

                Aggregation = f_306_346708_346745(aggregation, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346760, 346772);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 346401, 346783);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 346401, 346783);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 346401, 346783);
            }
        }

        public IOperation Group { get; }

        public IOperation Aggregation { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 346958, 347231);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 346961, 347231);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 347007, 347025) || true) && (f_306_347012_347017() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 347007, 347025) || true)
                        => f_306_347050_347055(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 347076, 347100) || true) && (f_306_347081_347092() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 347076, 347100) || true)
                        => f_306_347125_347136(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 347155, 347215) && DynAbs.Tracing.TraceSender.Expression_True(306, 347155, 347215))
    => throw f_306_347166_347215((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 346958, 347231);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 346958, 347231);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 346958, 347231);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_347012_347017()
            {
                var return_v = Group;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 347012, 347017);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_347050_347055()
            {
                var return_v = Group;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 347050, 347055);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_347081_347092()
            {
                var return_v = Aggregation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 347081, 347092);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_347125_347136()
            {
                var return_v = Aggregation;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 347125, 347136);
                return return_v;
            }


            System.Exception
            f_306_347166_347215((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 347166, 347215);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Group != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Aggregation != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 348025, 348032);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348028, 348032);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 348025, 348032);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 348025, 348032);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348025, 348032);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 348078, 348099);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348081, 348099);
                    return OperationKind.None; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 348078, 348099);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 348078, 348099);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348078, 348099);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 348164, 348200);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348167, 348200);
                f_306_348167_348200(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 348164, 348200);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 348164, 348200);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348164, 348200);
            }

            int
            f_306_348167_348200(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
            operation)
            {
                this_param.VisitAggregateQuery((Microsoft.CodeAnalysis.Operations.IAggregateQueryOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 348167, 348200);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 348353, 348399);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348356, 348399);
                return f_306_348356_348399(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 348353, 348399);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 348353, 348399);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348353, 348399);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_348356_348399(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitAggregateQuery((Microsoft.CodeAnalysis.Operations.IAggregateQueryOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 348356, 348399);
                return return_v;
            }

        }

        static AggregateQueryOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 346293, 348407);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 346293, 348407);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 346293, 348407);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 346293, 348407);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_346648_346679(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 346648, 346679);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_346708_346745(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 346708, 346745);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_346581_346594_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 346401, 346783);
            return return_v;
        }

    }
    internal sealed partial class FixedOperation : Operation, IFixedOperation
    {
        internal FixedOperation(ImmutableArray<ILocalSymbol> locals, IVariableDeclarationGroupOperation variables, IOperation body, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_348713_348726_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 348503, 348913);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348984, 349044);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 349054, 349085);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348772, 348788);

                Locals = locals;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348802, 348850);

                Variables = f_306_348814_348849(variables, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 348864, 348902);

                Body = f_306_348871_348901(body, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 348503, 348913);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 348503, 348913);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348503, 348913);
            }
        }

        public ImmutableArray<ILocalSymbol> Locals { get; }

        public IVariableDeclarationGroupOperation Variables { get; }

        public IOperation Body { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 349170, 349437);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 349173, 349437);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 349219, 349241) || true) && (f_306_349224_349233() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 349219, 349241) || true)
                        => f_306_349266_349275(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 349296, 349313) || true) && (f_306_349301_349305() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 349296, 349313) || true)
                        => f_306_349338_349342(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 349361, 349421) && DynAbs.Tracing.TraceSender.Expression_True(306, 349361, 349421))
    => throw f_306_349372_349421((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 349170, 349437);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 349170, 349437);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 349170, 349437);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            f_306_349224_349233()
            {
                var return_v = Variables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 349224, 349233);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            f_306_349266_349275()
            {
                var return_v = Variables;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 349266, 349275);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_349301_349305()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 349301, 349305);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_349338_349342()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 349338, 349342);
                return return_v;
            }


            System.Exception
            f_306_349372_349421((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 349372, 349421);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Variables != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Body != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 350154, 350161);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350157, 350161);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 350154, 350161);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350154, 350161);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350154, 350161);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 350228, 350235);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350231, 350235);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 350228, 350235);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350228, 350235);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350228, 350235);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 350281, 350302);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350284, 350302);
                    return OperationKind.None; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 350281, 350302);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350281, 350302);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350281, 350302);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 350367, 350394);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350370, 350394);
                f_306_350370_350394(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 350367, 350394);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350367, 350394);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350367, 350394);
            }

            int
            f_306_350370_350394(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.FixedOperation
            operation)
            {
                this_param.VisitFixed((Microsoft.CodeAnalysis.Operations.IFixedOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 350370, 350394);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 350547, 350584);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350550, 350584);
                return f_306_350550_350584(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 350547, 350584);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350547, 350584);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350547, 350584);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_350550_350584(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.FixedOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitFixed((Microsoft.CodeAnalysis.Operations.IFixedOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 350550, 350584);
                return return_v;
            }

        }

        static FixedOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 348413, 350592);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 348413, 350592);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 348413, 350592);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 348413, 350592);

        static Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation?
        f_306_348814_348849(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
        operation, Microsoft.CodeAnalysis.Operations.FixedOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 348814, 348849);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_348871_348901(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.FixedOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 348871, 348901);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_348713_348726_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 348503, 348913);
            return return_v;
        }

    }
    internal sealed partial class NoPiaObjectCreationOperation : Operation, INoPiaObjectCreationOperation
    {
        internal NoPiaObjectCreationOperation(IObjectOrCollectionInitializerOperation? initializer, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_350913_350926_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 350716, 351061);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351071, 351139);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351989, 352031);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 350972, 351024);

                Initializer = f_306_350986_351023(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351038, 351050);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 350716, 351061);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 350716, 351061);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350716, 351061);
            }
        }

        public IObjectOrCollectionInitializerOperation? Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 351224, 351428);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351227, 351428);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351273, 351297) || true) && (f_306_351278_351289() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 351273, 351297) || true)
                        => f_306_351322_351333(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 351352, 351412) && DynAbs.Tracing.TraceSender.Expression_True(306, 351352, 351412))
    => throw f_306_351363_351412((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 351224, 351428);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 351224, 351428);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 351224, 351428);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
            f_306_351278_351289()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 351278, 351289);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_351322_351333()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 351322, 351333);
                return return_v;
            }


            System.Exception
            f_306_351363_351412((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 351363, 351412);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Initializer != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 352097, 352104);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352100, 352104);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 352097, 352104);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 352097, 352104);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352097, 352104);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 352150, 352171);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352153, 352171);
                    return OperationKind.None; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 352150, 352171);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 352150, 352171);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352150, 352171);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 352236, 352277);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352239, 352277);
                f_306_352239_352277(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 352236, 352277);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 352236, 352277);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352236, 352277);
            }

            int
            f_306_352239_352277(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
            operation)
            {
                this_param.VisitNoPiaObjectCreation((Microsoft.CodeAnalysis.Operations.INoPiaObjectCreationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 352239, 352277);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 352430, 352481);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352433, 352481);
                return f_306_352433_352481(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 352430, 352481);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 352430, 352481);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352430, 352481);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_352433_352481(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitNoPiaObjectCreation((Microsoft.CodeAnalysis.Operations.INoPiaObjectCreationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 352433, 352481);
                return return_v;
            }

        }

        static NoPiaObjectCreationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 350598, 352489);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 350598, 352489);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 350598, 352489);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 350598, 352489);

        static Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        f_306_350986_351023(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        operation, Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 350986, 351023);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_350913_350926_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 350716, 351061);
            return return_v;
        }

    }
    internal sealed partial class PlaceholderOperation : Operation, IPlaceholderOperation
    {
        internal PlaceholderOperation(PlaceholderKind placeholderKind, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_352765_352778_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 352597, 352895);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352905, 352952);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353251, 353293);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352824, 352858);

                PlaceholderKind = placeholderKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 352872, 352884);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 352597, 352895);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 352597, 352895);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352597, 352895);
            }
        }

        public PlaceholderKind PlaceholderKind { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353024, 353082);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353027, 353082);
                throw f_306_353033_353082((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353024, 353082);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353024, 353082);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353024, 353082);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_353033_353082((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 353033, 353082);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353202, 353240);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353205, 353240);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353202, 353240);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353202, 353240);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353202, 353240);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353359, 353366);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353362, 353366);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353359, 353366);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353359, 353366);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353359, 353366);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353412, 353433);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353415, 353433);
                    return OperationKind.None; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353412, 353433);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353412, 353433);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353412, 353433);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353498, 353531);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353501, 353531);
                f_306_353501_353531(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353498, 353531);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353498, 353531);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353498, 353531);
            }

            int
            f_306_353501_353531(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.PlaceholderOperation
            operation)
            {
                this_param.VisitPlaceholder((Microsoft.CodeAnalysis.Operations.IPlaceholderOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 353501, 353531);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 353684, 353727);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 353687, 353727);
                return f_306_353687_353727(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 353684, 353727);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353684, 353727);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353684, 353727);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_353687_353727(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.PlaceholderOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitPlaceholder((Microsoft.CodeAnalysis.Operations.IPlaceholderOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 353687, 353727);
                return return_v;
            }

        }

        static PlaceholderOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 352495, 353735);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 352495, 353735);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 352495, 353735);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 352495, 353735);

        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_352765_352778_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 352597, 352895);
            return return_v;
        }

    }
    internal sealed partial class WithStatementOperation : Operation, IWithStatementOperation
    {
        internal WithStatementOperation(IOperation body, IOperation value, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_354000_354013_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 353847, 354162);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354172, 354203);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354213, 354245);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354059, 354097);

                Body = f_306_354066_354096(body, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354111, 354151);

                Value = f_306_354119_354150(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 353847, 354162);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 353847, 354162);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353847, 354162);
            }
        }

        public IOperation Body { get; }

        public IOperation Value { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 354330, 354589);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354333, 354589);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354379, 354397) || true) && (f_306_354384_354389() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 354379, 354397) || true)
                        => f_306_354422_354427(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354448, 354465) || true) && (f_306_354453_354457() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 354448, 354465) || true)
                        => f_306_354490_354494(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 354513, 354573) && DynAbs.Tracing.TraceSender.Expression_True(306, 354513, 354573))
    => throw f_306_354524_354573((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 354330, 354589);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 354330, 354589);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 354330, 354589);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_354384_354389()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 354384, 354389);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_354422_354427()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 354422, 354427);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_354453_354457()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 354453, 354457);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_354490_354494()
            {
                var return_v = Body;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 354490, 354494);
                return return_v;
            }


            System.Exception
            f_306_354524_354573((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 354524, 354573);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Body != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 355302, 355309);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 355305, 355309);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 355302, 355309);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355302, 355309);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355302, 355309);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 355376, 355383);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 355379, 355383);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 355376, 355383);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355376, 355383);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355376, 355383);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 355429, 355450);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 355432, 355450);
                    return OperationKind.None; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 355429, 355450);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355429, 355450);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355429, 355450);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 355515, 355550);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 355518, 355550);
                f_306_355518_355550(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 355515, 355550);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355515, 355550);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355515, 355550);
            }

            int
            f_306_355518_355550(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.WithStatementOperation
            operation)
            {
                this_param.VisitWithStatement((Microsoft.CodeAnalysis.Operations.IWithStatementOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 355518, 355550);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 355703, 355748);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 355706, 355748);
                return f_306_355706_355748(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 355703, 355748);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355703, 355748);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355703, 355748);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_355706_355748(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.WithStatementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitWithStatement((Microsoft.CodeAnalysis.Operations.IWithStatementOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 355706, 355748);
                return return_v;
            }

        }

        static WithStatementOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 353741, 355756);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 353741, 355756);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 353741, 355756);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 353741, 355756);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_354066_354096(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.WithStatementOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 354066, 354096);
            return return_v;
        }


        static Microsoft.CodeAnalysis.IOperation?
        f_306_354119_354150(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.WithStatementOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 354119, 354150);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_354000_354013_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 353847, 354162);
            return return_v;
        }

    }
    internal sealed partial class UsingDeclarationOperation : Operation, IUsingDeclarationOperation
    {
        internal UsingDeclarationOperation(IVariableDeclarationGroupOperation declarationGroup, bool isAsynchronous, DisposeOperationInfo disposeInfo, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_356103_356116_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 355874, 356321);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356331, 356398);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356408, 356443);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356162, 356224);

                DeclarationGroup = f_306_356181_356223(declarationGroup, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356238, 356270);

                IsAsynchronous = isAsynchronous;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356284, 356310);

                DisposeInfo = disposeInfo;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 355874, 356321);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 355874, 356321);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355874, 356321);
            }
        }

        public IVariableDeclarationGroupOperation DeclarationGroup { get; }

        public bool IsAsynchronous { get; }

        public DisposeOperationInfo DisposeInfo { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 356586, 356800);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356589, 356800);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356635, 356664) || true) && (f_306_356640_356656() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 356635, 356664) || true)
                        => f_306_356689_356705(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 356724, 356784) && DynAbs.Tracing.TraceSender.Expression_True(306, 356724, 356784))
    => throw f_306_356735_356784((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 356586, 356800);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 356586, 356800);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 356586, 356800);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            f_306_356640_356656()
            {
                var return_v = DeclarationGroup;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 356640, 356656);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            f_306_356689_356705()
            {
                var return_v = DeclarationGroup;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 356689, 356705);
                return return_v;
            }


            System.Exception
            f_306_356735_356784((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 356735, 356784);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (DeclarationGroup != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 357400, 357407);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 357403, 357407);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 357400, 357407);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357400, 357407);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357400, 357407);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 357474, 357481);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 357477, 357481);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 357474, 357481);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357474, 357481);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357474, 357481);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 357527, 357560);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 357530, 357560);
                    return OperationKind.UsingDeclaration; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 357527, 357560);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357527, 357560);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357527, 357560);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 357625, 357663);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 357628, 357663);
                f_306_357628_357663(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 357625, 357663);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357625, 357663);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357625, 357663);
            }

            int
            f_306_357628_357663(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
            operation)
            {
                this_param.VisitUsingDeclaration((Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 357628, 357663);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 357816, 357864);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 357819, 357864);
                return f_306_357819_357864(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 357816, 357864);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357816, 357864);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357816, 357864);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_357819_357864(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitUsingDeclaration((Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 357819, 357864);
                return return_v;
            }

        }

        static UsingDeclarationOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 355762, 357872);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 355762, 357872);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 355762, 357872);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 355762, 357872);

        static Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation?
        f_306_356181_356223(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
        operation, Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 356181, 356223);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_356103_356116_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 355874, 356321);
            return return_v;
        }

    }
    internal sealed partial class NegatedPatternOperation : BasePatternOperation, INegatedPatternOperation
    {
        internal NegatedPatternOperation(IPatternOperation pattern, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_358192_358201_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 357997, 358331);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 358341, 358382);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 358276, 358320);

                Pattern = f_306_358286_358319(pattern, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 357997, 358331);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 357997, 358331);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357997, 358331);
            }
        }

        public IPatternOperation Pattern { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 358467, 358663);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 358470, 358663);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 358516, 358536) || true) && (f_306_358521_358528() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 358516, 358536) || true)
                        => f_306_358561_358568(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 358587, 358647) && DynAbs.Tracing.TraceSender.Expression_True(306, 358587, 358647))
    => throw f_306_358598_358647((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 358467, 358663);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 358467, 358663);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 358467, 358663);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_358521_358528()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 358521, 358528);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_358561_358568()
            {
                var return_v = Pattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 358561, 358568);
                return return_v;
            }


            System.Exception
            f_306_358598_358647((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 358598, 358647);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Pattern != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 359254, 359261);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 359257, 359261);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 359254, 359261);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359254, 359261);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359254, 359261);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 359328, 359335);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 359331, 359335);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 359328, 359335);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359328, 359335);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359328, 359335);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 359381, 359412);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 359384, 359412);
                    return OperationKind.NegatedPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 359381, 359412);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359381, 359412);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359381, 359412);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 359477, 359513);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 359480, 359513);
                f_306_359480_359513(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 359477, 359513);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359477, 359513);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359477, 359513);
            }

            int
            f_306_359480_359513(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
            operation)
            {
                this_param.VisitNegatedPattern((Microsoft.CodeAnalysis.Operations.INegatedPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 359480, 359513);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 359666, 359712);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 359669, 359712);
                return f_306_359669_359712(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 359666, 359712);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359666, 359712);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359666, 359712);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_359669_359712(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitNegatedPattern((Microsoft.CodeAnalysis.Operations.INegatedPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 359669, 359712);
                return return_v;
            }

        }

        static NegatedPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 357878, 359720);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 357878, 359720);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 357878, 359720);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 357878, 359720);

        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_358286_358319(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 358286, 358319);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_358192_358201_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 357997, 358331);
            return return_v;
        }

    }
    internal sealed partial class BinaryPatternOperation : BasePatternOperation, IBinaryPatternOperation
    {
        internal BinaryPatternOperation(BinaryOperatorKind operatorKind, IPatternOperation leftPattern, IPatternOperation rightPattern, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_360106_360115_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 359843, 360363);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360373, 360420);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360430, 360475);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360485, 360531);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360190, 360218);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360232, 360284);

                LeftPattern = f_306_360246_360283(leftPattern, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360298, 360352);

                RightPattern = f_306_360313_360351(rightPattern, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 359843, 360363);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 359843, 360363);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359843, 360363);
            }
        }

        public BinaryOperatorKind OperatorKind { get; }

        public IPatternOperation LeftPattern { get; }

        public IPatternOperation RightPattern { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 360616, 360903);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360619, 360903);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360665, 360689) || true) && (f_306_360670_360681() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 360665, 360689) || true)
                        => f_306_360714_360725(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360746, 360771) || true) && (f_306_360751_360763() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 360746, 360771) || true)
                        => f_306_360796_360808(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 360827, 360887) && DynAbs.Tracing.TraceSender.Expression_True(306, 360827, 360887))
    => throw f_306_360838_360887((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 360616, 360903);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 360616, 360903);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 360616, 360903);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_360670_360681()
            {
                var return_v = LeftPattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 360670, 360681);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_360714_360725()
            {
                var return_v = LeftPattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 360714, 360725);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_360751_360763()
            {
                var return_v = RightPattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 360751, 360763);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IPatternOperation
            f_306_360796_360808()
            {
                var return_v = RightPattern;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 360796, 360808);
                return return_v;
            }


            System.Exception
            f_306_360838_360887((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 360838, 360887);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (LeftPattern != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (RightPattern != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 361630, 361637);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 361633, 361637);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 361630, 361637);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 361630, 361637);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 361630, 361637);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 361704, 361711);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 361707, 361711);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 361704, 361711);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 361704, 361711);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 361704, 361711);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 361757, 361787);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 361760, 361787);
                    return OperationKind.BinaryPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 361757, 361787);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 361757, 361787);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 361757, 361787);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 361852, 361887);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 361855, 361887);
                f_306_361855_361887(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 361852, 361887);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 361852, 361887);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 361852, 361887);
            }

            int
            f_306_361855_361887(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
            operation)
            {
                this_param.VisitBinaryPattern((Microsoft.CodeAnalysis.Operations.IBinaryPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 361855, 361887);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 362040, 362085);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362043, 362085);
                return f_306_362043_362085(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 362040, 362085);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362040, 362085);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362040, 362085);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_362043_362085(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitBinaryPattern((Microsoft.CodeAnalysis.Operations.IBinaryPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 362043, 362085);
                return return_v;
            }

        }

        static BinaryPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 359726, 362093);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 359726, 362093);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 359726, 362093);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 359726, 362093);

        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_360246_360283(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 360246, 360283);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IPatternOperation?
        f_306_360313_360351(Microsoft.CodeAnalysis.Operations.IPatternOperation
        operation, Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 360313, 360351);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_360106_360115_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 359843, 360363);
            return return_v;
        }

    }
    internal sealed partial class TypePatternOperation : BasePatternOperation, ITypePatternOperation
    {
        internal TypePatternOperation(ITypeSymbol matchedType, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_362402_362411_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 362212, 362523);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362533, 362572);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362486, 362512);

                MatchedType = matchedType;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 362212, 362523);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362212, 362523);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362212, 362523);
            }
        }

        public ITypeSymbol MatchedType { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 362644, 362702);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362647, 362702);
                throw f_306_362653_362702((slot, index)); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 362644, 362702);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362644, 362702);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362644, 362702);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_362653_362702((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 362653, 362702);
                return return_v;
            }

        }

        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 362822, 362860);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362825, 362860);
                return (false, int.MinValue, int.MinValue); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 362822, 362860);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362822, 362860);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362822, 362860);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 362905, 362912);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362908, 362912);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 362905, 362912);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362905, 362912);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362905, 362912);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 362979, 362986);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 362982, 362986);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 362979, 362986);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 362979, 362986);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362979, 362986);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 363032, 363060);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363035, 363060);
                    return OperationKind.TypePattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 363032, 363060);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 363032, 363060);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 363032, 363060);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 363125, 363158);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363128, 363158);
                f_306_363128_363158(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 363125, 363158);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 363125, 363158);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 363125, 363158);
            }

            int
            f_306_363128_363158(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.TypePatternOperation
            operation)
            {
                this_param.VisitTypePattern((Microsoft.CodeAnalysis.Operations.ITypePatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 363128, 363158);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 363311, 363354);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363314, 363354);
                return f_306_363314_363354(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 363311, 363354);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 363311, 363354);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 363311, 363354);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_363314_363354(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.TypePatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitTypePattern((Microsoft.CodeAnalysis.Operations.ITypePatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 363314, 363354);
                return return_v;
            }

        }

        static TypePatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 362099, 363362);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 362099, 363362);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 362099, 363362);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 362099, 363362);

        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_362402_362411_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 362212, 362523);
            return return_v;
        }

    }
    internal sealed partial class RelationalPatternOperation : BasePatternOperation, IRelationalPatternOperation
    {
        internal RelationalPatternOperation(BinaryOperatorKind operatorKind, IOperation value, ITypeSymbol inputType, ITypeSymbol narrowedType, SemanticModel? semanticModel, SyntaxNode syntax, bool isImplicit)
        : base(f_306_363715_363724_C(inputType), narrowedType, semanticModel, syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 363493, 363892);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363902, 363949);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363959, 363991);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363799, 363827);

                OperatorKind = operatorKind;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 363841, 363881);

                Value = f_306_363849_363880(value, this);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 363493, 363892);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 363493, 363892);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 363493, 363892);
            }
        }

        public BinaryOperatorKind OperatorKind { get; }

        public IOperation Value { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 364076, 364268);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364079, 364268);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364125, 364143) || true) && (f_306_364130_364135() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 364125, 364143) || true)
                        => f_306_364168_364173(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364192, 364252) && DynAbs.Tracing.TraceSender.Expression_True(306, 364192, 364252))
    => throw f_306_364203_364252((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 364076, 364268);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 364076, 364268);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 364076, 364268);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_364130_364135()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 364130, 364135);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_364168_364173()
            {
                var return_v = Value;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 364168, 364173);
                return return_v;
            }


            System.Exception
            f_306_364203_364252((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 364203, 364252);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Value != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                case 1:
                    return (false, 1, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 364857, 364864);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364860, 364864);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 364857, 364864);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 364857, 364864);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 364857, 364864);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 364931, 364938);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364934, 364938);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 364931, 364938);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 364931, 364938);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 364931, 364938);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 364984, 365018);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 364987, 365018);
                    return OperationKind.RelationalPattern; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 364984, 365018);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 364984, 365018);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 364984, 365018);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 365083, 365122);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365086, 365122);
                f_306_365086_365122(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 365083, 365122);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 365083, 365122);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 365083, 365122);
            }

            int
            f_306_365086_365122(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
            operation)
            {
                this_param.VisitRelationalPattern((Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 365086, 365122);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 365275, 365324);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365278, 365324);
                return f_306_365278_365324(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 365275, 365324);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 365275, 365324);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 365275, 365324);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_365278_365324(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitRelationalPattern((Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 365278, 365324);
                return return_v;
            }

        }

        static RelationalPatternOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 363368, 365332);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 363368, 365332);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 363368, 365332);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 363368, 365332);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_363849_363880(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 363849, 363880);
            return return_v;
        }


        static Microsoft.CodeAnalysis.ITypeSymbol
        f_306_363715_363724_C(Microsoft.CodeAnalysis.ITypeSymbol
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 363493, 363892);
            return return_v;
        }

    }
    internal sealed partial class WithOperation : Operation, IWithOperation
    {
        internal WithOperation(IOperation operand, IMethodSymbol? cloneMethod, IObjectOrCollectionInitializerOperation initializer, SemanticModel? semanticModel, SyntaxNode syntax, ITypeSymbol? type, bool isImplicit)
        : base(f_306_365655_365668_C(semanticModel), syntax, isImplicit)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 365426, 365901);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365911, 365945);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365955, 365997);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 366007, 366074);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367124, 367166);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365714, 365758);

                Operand = f_306_365724_365757(operand, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365772, 365798);

                CloneMethod = cloneMethod;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365812, 365864);

                Initializer = f_306_365826_365863(initializer, this);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 365878, 365890);

                Type = type;
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 365426, 365901);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 365426, 365901);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 365426, 365901);
            }
        }

        public IOperation Operand { get; }

        public IMethodSymbol? CloneMethod { get; }

        public IObjectOrCollectionInitializerOperation Initializer { get; }

        protected override IOperation GetCurrent(int slot, int index)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 366159, 366436);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 366162, 366436);
                return slot switch
                {
                    0 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 366208, 366228) || true) && (f_306_366213_366220() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 366208, 366228) || true)
                        => f_306_366253_366260(),
                    1 when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 366281, 366305) || true) && (f_306_366286_366297() != null) && (DynAbs.Tracing.TraceSender.Expression_True(306, 366281, 366305) || true)
                        => f_306_366330_366341(),
                    _ when (DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 366360, 366420) && DynAbs.Tracing.TraceSender.Expression_True(306, 366360, 366420))
    => throw f_306_366371_366420((slot, index)),
                }; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 366159, 366436);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 366159, 366436);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 366159, 366436);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation
            f_306_366213_366220()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 366213, 366220);
                return return_v;
            }


            Microsoft.CodeAnalysis.IOperation
            f_306_366253_366260()
            {
                var return_v = Operand;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 366253, 366260);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_366286_366297()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 366286, 366297);
                return return_v;
            }


            Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            f_306_366330_366341()
            {
                var return_v = Initializer;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 366330, 366341);
                return return_v;
            }


            System.Exception
            f_306_366371_366420((int slot, int index)
            o)
            {
                var return_v = ExceptionUtilities.UnexpectedValue((object)o);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 366371, 366420);
                return return_v;
            }

        }
        protected override (bool hasNext, int nextSlot, int nextIndex) MoveNext(int previousSlot, int previousIndex)
        {
            switch (previousSlot)
            {
                case -1:
                    if (Operand != null) return (true, 0, 0);
                    else goto case 0;
                case 0:
                    if (Initializer != null) return (true, 1, 0);
                    else goto case 1;
                case 1:
                case 2:
                    return (false, 2, 0);
                default:
                    throw ExceptionUtilities.UnexpectedValue((previousSlot, previousIndex));
            }
        }

        public override ITypeSymbol? Type { get; }

        internal override ConstantValue? OperationConstantValue
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 367232, 367239);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367235, 367239);
                    return null; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 367232, 367239);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367232, 367239);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367232, 367239);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override OperationKind Kind
        {
            get
            {
                try
                {
                    DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 367285, 367306);
                    DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367288, 367306);
                    return OperationKind.With; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 367285, 367306);
                }
                catch
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367285, 367306);
                    throw;
                }
                finally
                {
                    DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367285, 367306);
                }
                throw new System.Exception("Slicer error: unreachable code");
            }
        }

        public override void Accept(OperationVisitor visitor)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 367371, 367397);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367374, 367397);
                f_306_367374_367397(visitor, this); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 367371, 367397);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367371, 367397);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367371, 367397);
            }

            int
            f_306_367374_367397(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.WithOperation
            operation)
            {
                this_param.VisitWith((Microsoft.CodeAnalysis.Operations.IWithOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 367374, 367397);
                return 0;
            }

        }

        public override TResult? Accept<TArgument, TResult>(OperationVisitor<TArgument, TResult> visitor, TArgument argument) where TResult : default
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 367550, 367586);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367553, 367586);
                return f_306_367553_367586(visitor, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 367550, 367586);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367550, 367586);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367550, 367586);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_367553_367586(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.WithOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.VisitWith((Microsoft.CodeAnalysis.Operations.IWithOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 367553, 367586);
                return return_v;
            }

        }

        static WithOperation()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 365338, 367594);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 365338, 367594);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 365338, 367594);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 365338, 367594);

        static Microsoft.CodeAnalysis.IOperation?
        f_306_365724_365757(Microsoft.CodeAnalysis.IOperation
        operation, Microsoft.CodeAnalysis.Operations.WithOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 365724, 365757);
            return return_v;
        }


        static Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
        f_306_365826_365863(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
        operation, Microsoft.CodeAnalysis.Operations.WithOperation
        parent)
        {
            var return_v = SetParentOperation(operation, (Microsoft.CodeAnalysis.IOperation)parent);
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 365826, 365863);
            return return_v;
        }


        static Microsoft.CodeAnalysis.SemanticModel?
        f_306_365655_365668_C(Microsoft.CodeAnalysis.SemanticModel?
        i)
        {
            var return_v = i;
            DynAbs.Tracing.TraceSender.TraceBaseCall(306, 365426, 365901);
            return return_v;
        }

    }
    internal sealed partial class OperationCloner : OperationVisitor<object?, IOperation>
    {
        private static readonly OperationCloner s_instance;

        public static T CloneOperation<T>(T operation) where T : IOperation
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 367951, 367981);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367954, 367981);
                return f_306_367954_367981(s_instance, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 367951, 367981);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367951, 367981);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367951, 367981);
            }
            throw new System.Exception("Slicer error: unreachable code");

            T?
            f_306_367954_367981(Microsoft.CodeAnalysis.Operations.OperationCloner
            this_param, T
            node)
            {
                var return_v = this_param.Visit<T>(node);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 367954, 367981);
                return return_v;
            }

        }

        public OperationCloner()
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 367992, 368020);
                DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 367992, 368020);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 367992, 368020);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367992, 368020);
            }
        }

        [return: NotNullIfNotNull("node")]
        private T? Visit<T>(T? node) where T : IOperation?
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 368125, 368159);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368128, 368159);
                return (T?)f_306_368132_368159(this, node, argument: null); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 368125, 368159);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 368125, 368159);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 368125, 368159);
            }
            throw new System.Exception("Slicer error: unreachable code");

            Microsoft.CodeAnalysis.IOperation?
            f_306_368132_368159(Microsoft.CodeAnalysis.Operations.OperationCloner
            this_param, T?
            operation, object?
            argument)
            {
                var return_v = this_param.Visit((Microsoft.CodeAnalysis.IOperation?)operation, argument: argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 368132, 368159);
                return return_v;
            }

        }

        public override IOperation DefaultVisit(IOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 368250, 368289);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368253, 368289);
                throw f_306_368259_368289(); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 368250, 368289);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 368250, 368289);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 368250, 368289);
            }
            throw new System.Exception("Slicer error: unreachable code");

            System.Exception
            f_306_368259_368289()
            {
                var return_v = ExceptionUtilities.Unreachable;
                DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368259, 368289);
                return return_v;
            }

        }

        private ImmutableArray<T> VisitArray<T>(ImmutableArray<T> nodes) where T : IOperation
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 368386, 368445);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368389, 368445);
                return nodes.SelectAsArray((n, @this) => @this.Visit(n), this)!; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 368386, 368445);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 368386, 368445);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 368386, 368445);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        private ImmutableArray<(ISymbol, T)> VisitArray<T>(ImmutableArray<(ISymbol, T)> nodes) where T : IOperation
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 368564, 368640);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368567, 368640);
                return nodes.SelectAsArray((n, @this) => (n.Item1, @this.Visit(n.Item2)), this)!; DynAbs.Tracing.TraceSender.TraceExitMethod(306, 368564, 368640);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 368564, 368640);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 368564, 368640);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitBlock(IBlockOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 368651, 369022);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368758, 368808);

                var
                internalOperation = (BlockOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 368822, 369011);

                return f_306_368829_369010(f_306_368848_368888(this, f_306_368859_368887(internalOperation)), f_306_368890_368914(internalOperation), f_306_368916_368953(internalOperation), f_306_368955_368979(internalOperation), f_306_368981_369009(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 368651, 369022);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_368859_368887(Microsoft.CodeAnalysis.Operations.BlockOperation
                this_param)
                {
                    var return_v = this_param.Operations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368859, 368887);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_368848_368888(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 368848, 368888);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_368890_368914(Microsoft.CodeAnalysis.Operations.BlockOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368890, 368914);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_368916_368953(Microsoft.CodeAnalysis.Operations.BlockOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368916, 368953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_368955_368979(Microsoft.CodeAnalysis.Operations.BlockOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368955, 368979);
                    return return_v;
                }


                bool
                f_306_368981_369009(Microsoft.CodeAnalysis.Operations.BlockOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 368981, 369009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BlockOperation
                f_306_368829_369010(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                operations, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BlockOperation(operations, locals, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 368829, 369010);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 368651, 369022);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 368651, 369022);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitVariableDeclarationGroup(IVariableDeclarationGroupOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 369032, 369455);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 369177, 369246);

                var
                internalOperation = (VariableDeclarationGroupOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 369260, 369444);

                return f_306_369267_369443(f_306_369305_369347(this, f_306_369316_369346(internalOperation)), f_306_369349_369386(internalOperation), f_306_369388_369412(internalOperation), f_306_369414_369442(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 369032, 369455);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                f_306_369316_369346(Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                this_param)
                {
                    var return_v = this_param.Declarations;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369316, 369346);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                f_306_369305_369347(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 369305, 369347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_369349_369386(Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369349, 369386);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_369388_369412(Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369388, 369412);
                    return return_v;
                }


                bool
                f_306_369414_369442(Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369414, 369442);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation
                f_306_369267_369443(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation>
                declarations, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationGroupOperation(declarations, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 369267, 369443);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 369032, 369455);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 369032, 369455);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSwitch(ISwitchOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 369465, 369896);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 369574, 369625);

                var
                internalOperation = (SwitchOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 369639, 369885);

                return f_306_369646_369884(f_306_369666_369690(internalOperation), f_306_369692_369722(this, f_306_369698_369721(internalOperation)), f_306_369724_369759(this, f_306_369735_369758(internalOperation)), f_306_369761_369788(internalOperation), f_306_369790_369827(internalOperation), f_306_369829_369853(internalOperation), f_306_369855_369883(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 369465, 369896);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_369666_369690(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369666, 369690);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_369698_369721(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369698, 369721);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_369692_369722(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 369692, 369722);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                f_306_369735_369758(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.Cases;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369735, 369758);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                f_306_369724_369759(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 369724, 369759);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_369761_369788(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369761, 369788);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_369790_369827(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369790, 369827);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_369829_369853(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369829, 369853);
                    return return_v;
                }


                bool
                f_306_369855_369883(Microsoft.CodeAnalysis.Operations.SwitchOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 369855, 369883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchOperation
                f_306_369646_369884(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation>
                cases, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchOperation(locals, value, cases, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 369646, 369884);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 369465, 369896);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 369465, 369896);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitForEachLoop(IForEachLoopOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 369906, 370538);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 370025, 370081);

                var
                internalOperation = (ForEachLoopOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 370095, 370527);

                return f_306_370102_370526(f_306_370127_370171(this, f_306_370133_370170(internalOperation)), f_306_370173_370208(this, f_306_370179_370207(internalOperation)), f_306_370210_370253(this, f_306_370221_370252(internalOperation)), f_306_370255_370277(internalOperation), f_306_370279_370311(internalOperation), f_306_370313_370342(this, f_306_370319_370341(internalOperation)), f_306_370344_370368(internalOperation), f_306_370370_370401(internalOperation), f_306_370403_370430(internalOperation), f_306_370432_370469(internalOperation), f_306_370471_370495(internalOperation), f_306_370497_370525(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 369906, 370538);

                Microsoft.CodeAnalysis.IOperation
                f_306_370133_370170(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.LoopControlVariable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370133, 370170);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370127_370171(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370127, 370171);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_370179_370207(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.Collection;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370179, 370207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370173_370208(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370173, 370208);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370221_370252(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.NextVariables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370221, 370252);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370210_370253(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370210, 370253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo?
                f_306_370255_370277(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.Info;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370255, 370277);
                    return return_v;
                }


                bool
                f_306_370279_370311(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.IsAsynchronous;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370279, 370311);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_370319_370341(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370319, 370341);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370313_370342(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370313, 370342);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_370344_370368(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370344, 370368);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_370370_370401(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370370, 370401);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_370403_370430(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370403, 370430);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_370432_370469(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370432, 370469);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_370471_370495(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370471, 370495);
                    return return_v;
                }


                bool
                f_306_370497_370525(Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370497, 370525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForEachLoopOperation
                f_306_370102_370526(Microsoft.CodeAnalysis.IOperation
                loopControlVariable, Microsoft.CodeAnalysis.IOperation
                collection, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nextVariables, Microsoft.CodeAnalysis.Operations.ForEachLoopOperationInfo?
                info, bool
                isAsynchronous, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForEachLoopOperation(loopControlVariable, collection, nextVariables, info, isAsynchronous, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370102, 370526);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 369906, 370538);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 369906, 370538);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitForLoop(IForLoopOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 370548, 371131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 370659, 370711);

                var
                internalOperation = (ForLoopOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 370725, 371120);

                return f_306_370732_371119(f_306_370753_370789(this, f_306_370764_370788(internalOperation)), f_306_370791_370824(internalOperation), f_306_370826_370860(this, f_306_370832_370859(internalOperation)), f_306_370862_370904(this, f_306_370873_370903(internalOperation)), f_306_370906_370935(this, f_306_370912_370934(internalOperation)), f_306_370937_370961(internalOperation), f_306_370963_370994(internalOperation), f_306_370996_371023(internalOperation), f_306_371025_371062(internalOperation), f_306_371064_371088(internalOperation), f_306_371090_371118(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 370548, 371131);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370764_370788(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.Before;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370764, 370788);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370753_370789(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370753, 370789);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_370791_370824(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.ConditionLocals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370791, 370824);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370832_370859(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370832, 370859);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370826_370860(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370826, 370860);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370873_370903(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.AtLoopBottom;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370873, 370903);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_370862_370904(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370862, 370904);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_370912_370934(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370912, 370934);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_370906_370935(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370906, 370935);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_370937_370961(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370937, 370961);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_370963_370994(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370963, 370994);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_370996_371023(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 370996, 371023);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_371025_371062(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371025, 371062);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_371064_371088(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371064, 371088);
                    return return_v;
                }


                bool
                f_306_371090_371118(Microsoft.CodeAnalysis.Operations.ForLoopOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371090, 371118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForLoopOperation
                f_306_370732_371119(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                before, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                conditionLocals, Microsoft.CodeAnalysis.IOperation?
                condition, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                atLoopBottom, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForLoopOperation(before, conditionLocals, condition, atLoopBottom, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 370732, 371119);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 370548, 371131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 370548, 371131);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitForToLoop(IForToLoopOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 371141, 371835);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 371256, 371310);

                var
                internalOperation = (ForToLoopOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 371324, 371824);

                return f_306_371331_371823(f_306_371354_371398(this, f_306_371360_371397(internalOperation)), f_306_371400_371437(this, f_306_371406_371436(internalOperation)), f_306_371439_371474(this, f_306_371445_371473(internalOperation)), f_306_371476_371510(this, f_306_371482_371509(internalOperation)), f_306_371512_371539(internalOperation), f_306_371541_371584(this, f_306_371552_371583(internalOperation)), f_306_371586_371608(internalOperation), f_306_371610_371639(this, f_306_371616_371638(internalOperation)), f_306_371641_371665(internalOperation), f_306_371667_371698(internalOperation), f_306_371700_371727(internalOperation), f_306_371729_371766(internalOperation), f_306_371768_371792(internalOperation), f_306_371794_371822(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 371141, 371835);

                Microsoft.CodeAnalysis.IOperation
                f_306_371360_371397(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.LoopControlVariable;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371360, 371397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_371354_371398(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371354, 371398);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_371406_371436(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.InitialValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371406, 371436);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_371400_371437(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371400, 371437);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_371445_371473(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.LimitValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371445, 371473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_371439_371474(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371439, 371474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_371482_371509(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.StepValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371482, 371509);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_371476_371510(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371476, 371510);
                    return return_v;
                }


                bool
                f_306_371512_371539(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371512, 371539);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_371552_371583(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.NextVariables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371552, 371583);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_371541_371584(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371541, 371584);
                    return return_v;
                }


                (Microsoft.CodeAnalysis.ILocalSymbol LoopObject, Microsoft.CodeAnalysis.Operations.ForToLoopOperationUserDefinedInfo UserDefinedInfo)
                f_306_371586_371608(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.Info;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371586, 371608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_371616_371638(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371616, 371638);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_371610_371639(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371610, 371639);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_371641_371665(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371641, 371665);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_371667_371698(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371667, 371698);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_371700_371727(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371700, 371727);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_371729_371766(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371729, 371766);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_371768_371792(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371768, 371792);
                    return return_v;
                }


                bool
                f_306_371794_371822(Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 371794, 371822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ForToLoopOperation
                f_306_371331_371823(Microsoft.CodeAnalysis.IOperation
                loopControlVariable, Microsoft.CodeAnalysis.IOperation
                initialValue, Microsoft.CodeAnalysis.IOperation
                limitValue, Microsoft.CodeAnalysis.IOperation
                stepValue, bool
                isChecked, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nextVariables, (Microsoft.CodeAnalysis.ILocalSymbol LoopObject, Microsoft.CodeAnalysis.Operations.ForToLoopOperationUserDefinedInfo UserDefinedInfo)
                info, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ForToLoopOperation(loopControlVariable, initialValue, limitValue, stepValue, isChecked, nextVariables, info, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 371331, 371823);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 371141, 371835);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 371141, 371835);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitWhileLoop(IWhileLoopOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 371845, 372432);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 371960, 372014);

                var
                internalOperation = (WhileLoopOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 372028, 372421);

                return f_306_372035_372420(f_306_372058_372092(this, f_306_372064_372091(internalOperation)), f_306_372094_372126(internalOperation), f_306_372128_372162(internalOperation), f_306_372164_372205(this, f_306_372170_372204(internalOperation)), f_306_372207_372236(this, f_306_372213_372235(internalOperation)), f_306_372238_372262(internalOperation), f_306_372264_372295(internalOperation), f_306_372297_372324(internalOperation), f_306_372326_372363(internalOperation), f_306_372365_372389(internalOperation), f_306_372391_372419(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 371845, 372432);

                Microsoft.CodeAnalysis.IOperation?
                f_306_372064_372091(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372064, 372091);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372058_372092(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372058, 372092);
                    return return_v;
                }


                bool
                f_306_372094_372126(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.ConditionIsTop;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372094, 372126);
                    return return_v;
                }


                bool
                f_306_372128_372162(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.ConditionIsUntil;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372128, 372162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372170_372204(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.IgnoredCondition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372170, 372204);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372164_372205(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372164, 372205);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_372213_372235(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372213, 372235);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372207_372236(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372207, 372236);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_372238_372262(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372238, 372262);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_372264_372295(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.ContinueLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372264, 372295);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_372297_372324(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372297, 372324);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_372326_372363(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372326, 372363);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_372365_372389(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372365, 372389);
                    return return_v;
                }


                bool
                f_306_372391_372419(Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372391, 372419);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WhileLoopOperation
                f_306_372035_372420(Microsoft.CodeAnalysis.IOperation?
                condition, bool
                conditionIsTop, bool
                conditionIsUntil, Microsoft.CodeAnalysis.IOperation?
                ignoredCondition, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.ILabelSymbol
                continueLabel, Microsoft.CodeAnalysis.ILabelSymbol
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WhileLoopOperation(condition, conditionIsTop, conditionIsUntil, ignoredCondition, body, locals, continueLabel, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372035, 372420);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 371845, 372432);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 371845, 372432);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitLabeled(ILabeledOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 372442, 372814);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 372553, 372605);

                var
                internalOperation = (LabeledOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 372619, 372803);

                return f_306_372626_372802(f_306_372647_372670(internalOperation), f_306_372672_372706(this, f_306_372678_372705(internalOperation)), f_306_372708_372745(internalOperation), f_306_372747_372771(internalOperation), f_306_372773_372801(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 372442, 372814);

                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_372647_372670(Microsoft.CodeAnalysis.Operations.LabeledOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372647, 372670);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372678_372705(Microsoft.CodeAnalysis.Operations.LabeledOperation
                this_param)
                {
                    var return_v = this_param.Operation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372678, 372705);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_372672_372706(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372672, 372706);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_372708_372745(Microsoft.CodeAnalysis.Operations.LabeledOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372708, 372745);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_372747_372771(Microsoft.CodeAnalysis.Operations.LabeledOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372747, 372771);
                    return return_v;
                }


                bool
                f_306_372773_372801(Microsoft.CodeAnalysis.Operations.LabeledOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 372773, 372801);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LabeledOperation
                f_306_372626_372802(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.IOperation?
                operation, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LabeledOperation(label, operation, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 372626, 372802);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 372442, 372814);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 372442, 372814);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitBranch(IBranchOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 372824, 373187);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 372933, 372984);

                var
                internalOperation = (BranchOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 372998, 373176);

                return f_306_373005_373175(f_306_373025_373049(internalOperation), f_306_373051_373079(internalOperation), f_306_373081_373118(internalOperation), f_306_373120_373144(internalOperation), f_306_373146_373174(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 372824, 373187);

                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_373025_373049(Microsoft.CodeAnalysis.Operations.BranchOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373025, 373049);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BranchKind
                f_306_373051_373079(Microsoft.CodeAnalysis.Operations.BranchOperation
                this_param)
                {
                    var return_v = this_param.BranchKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373051, 373079);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_373081_373118(Microsoft.CodeAnalysis.Operations.BranchOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373081, 373118);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_373120_373144(Microsoft.CodeAnalysis.Operations.BranchOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373120, 373144);
                    return return_v;
                }


                bool
                f_306_373146_373174(Microsoft.CodeAnalysis.Operations.BranchOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373146, 373174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BranchOperation
                f_306_373005_373175(Microsoft.CodeAnalysis.ILabelSymbol
                target, Microsoft.CodeAnalysis.Operations.BranchKind
                branchKind, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BranchOperation(target, branchKind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 373005, 373175);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 372824, 373187);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 372824, 373187);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitEmpty(IEmptyOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 373197, 373500);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 373304, 373354);

                var
                internalOperation = (EmptyOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 373368, 373489);

                return f_306_373375_373488(f_306_373394_373431(internalOperation), f_306_373433_373457(internalOperation), f_306_373459_373487(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 373197, 373500);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_373394_373431(Microsoft.CodeAnalysis.Operations.EmptyOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373394, 373431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_373433_373457(Microsoft.CodeAnalysis.Operations.EmptyOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373433, 373457);
                    return return_v;
                }


                bool
                f_306_373459_373487(Microsoft.CodeAnalysis.Operations.EmptyOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373459, 373487);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EmptyOperation
                f_306_373375_373488(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EmptyOperation(semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 373375, 373488);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 373197, 373500);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 373197, 373500);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitReturn(IReturnOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 373510, 373881);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 373619, 373670);

                var
                internalOperation = (ReturnOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 373684, 373870);

                return f_306_373691_373869(f_306_373711_373749(this, f_306_373717_373748(internalOperation)), f_306_373751_373773(internalOperation), f_306_373775_373812(internalOperation), f_306_373814_373838(internalOperation), f_306_373840_373868(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 373510, 373881);

                Microsoft.CodeAnalysis.IOperation?
                f_306_373717_373748(Microsoft.CodeAnalysis.Operations.ReturnOperation
                this_param)
                {
                    var return_v = this_param.ReturnedValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373717, 373748);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_373711_373749(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 373711, 373749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OperationKind
                f_306_373751_373773(Microsoft.CodeAnalysis.Operations.ReturnOperation
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373751, 373773);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_373775_373812(Microsoft.CodeAnalysis.Operations.ReturnOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373775, 373812);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_373814_373838(Microsoft.CodeAnalysis.Operations.ReturnOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373814, 373838);
                    return return_v;
                }


                bool
                f_306_373840_373868(Microsoft.CodeAnalysis.Operations.ReturnOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 373840, 373868);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReturnOperation
                f_306_373691_373869(Microsoft.CodeAnalysis.IOperation?
                returnedValue, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReturnOperation(returnedValue, kind, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 373691, 373869);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 373510, 373881);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 373510, 373881);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitLock(ILockOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 373891, 374294);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 373996, 374045);

                var
                internalOperation = (LockOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 374059, 374283);

                return f_306_374066_374282(f_306_374084_374120(this, f_306_374090_374119(internalOperation)), f_306_374122_374151(this, f_306_374128_374150(internalOperation)), f_306_374153_374186(internalOperation), f_306_374188_374225(internalOperation), f_306_374227_374251(internalOperation), f_306_374253_374281(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 373891, 374294);

                Microsoft.CodeAnalysis.IOperation
                f_306_374090_374119(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.LockedValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374090, 374119);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_374084_374120(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374084, 374120);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_374128_374150(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374128, 374150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_374122_374151(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374122, 374151);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILocalSymbol?
                f_306_374153_374186(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.LockTakenSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374153, 374186);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_374188_374225(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374188, 374225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_374227_374251(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374227, 374251);
                    return return_v;
                }


                bool
                f_306_374253_374281(Microsoft.CodeAnalysis.Operations.LockOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374253, 374281);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LockOperation
                f_306_374066_374282(Microsoft.CodeAnalysis.IOperation
                lockedValue, Microsoft.CodeAnalysis.IOperation
                body, Microsoft.CodeAnalysis.ILocalSymbol?
                lockTakenSymbol, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LockOperation(lockedValue, body, lockTakenSymbol, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374066, 374282);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 373891, 374294);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 373891, 374294);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTry(ITryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 374304, 374732);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 374407, 374455);

                var
                internalOperation = (TryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 374469, 374721);

                return f_306_374476_374720(f_306_374493_374522(this, f_306_374499_374521(internalOperation)), f_306_374524_374561(this, f_306_374535_374560(internalOperation)), f_306_374563_374595(this, f_306_374569_374594(internalOperation)), f_306_374597_374624(internalOperation), f_306_374626_374663(internalOperation), f_306_374665_374689(internalOperation), f_306_374691_374719(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 374304, 374732);

                Microsoft.CodeAnalysis.Operations.IBlockOperation
                f_306_374499_374521(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374499, 374521);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_374493_374522(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374493, 374522);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                f_306_374535_374560(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.Catches;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374535, 374560);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                f_306_374524_374561(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374524, 374561);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_374569_374594(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.Finally;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374569, 374594);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_374563_374595(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374563, 374595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_306_374597_374624(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.ExitLabel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374597, 374624);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_374626_374663(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374626, 374663);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_374665_374689(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374665, 374689);
                    return return_v;
                }


                bool
                f_306_374691_374719(Microsoft.CodeAnalysis.Operations.TryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374691, 374719);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TryOperation
                f_306_374476_374720(Microsoft.CodeAnalysis.Operations.IBlockOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICatchClauseOperation>
                catches, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                @finally, Microsoft.CodeAnalysis.ILabelSymbol?
                exitLabel, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TryOperation(body, catches, @finally, exitLabel, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374476, 374720);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 374304, 374732);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 374304, 374732);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitUsing(IUsingOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 374742, 375203);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 374849, 374899);

                var
                internalOperation = (UsingOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 374913, 375192);

                return f_306_374920_375191(f_306_374939_374973(this, f_306_374945_374972(internalOperation)), f_306_374975_375004(this, f_306_374981_375003(internalOperation)), f_306_375006_375030(internalOperation), f_306_375032_375064(internalOperation), f_306_375066_375095(internalOperation), f_306_375097_375134(internalOperation), f_306_375136_375160(internalOperation), f_306_375162_375190(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 374742, 375203);

                Microsoft.CodeAnalysis.IOperation
                f_306_374945_374972(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.Resources;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374945, 374972);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_374939_374973(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374939, 374973);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_374981_375003(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 374981, 375003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_374975_375004(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374975, 375004);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_375006_375030(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375006, 375030);
                    return return_v;
                }


                bool
                f_306_375032_375064(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.IsAsynchronous;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375032, 375064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                f_306_375066_375095(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.DisposeInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375066, 375095);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_375097_375134(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375097, 375134);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_375136_375160(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375136, 375160);
                    return return_v;
                }


                bool
                f_306_375162_375190(Microsoft.CodeAnalysis.Operations.UsingOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375162, 375190);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UsingOperation
                f_306_374920_375191(Microsoft.CodeAnalysis.IOperation
                resources, Microsoft.CodeAnalysis.IOperation
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, bool
                isAsynchronous, Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                disposeInfo, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UsingOperation(resources, body, locals, isAsynchronous, disposeInfo, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 374920, 375191);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 374742, 375203);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 374742, 375203);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitExpressionStatement(IExpressionStatementOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 375213, 375608);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 375348, 375412);

                var
                internalOperation = (ExpressionStatementOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 375426, 375597);

                return f_306_375433_375596(f_306_375466_375500(this, f_306_375472_375499(internalOperation)), f_306_375502_375539(internalOperation), f_306_375541_375565(internalOperation), f_306_375567_375595(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 375213, 375608);

                Microsoft.CodeAnalysis.IOperation
                f_306_375472_375499(Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                this_param)
                {
                    var return_v = this_param.Operation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375472, 375499);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_375466_375500(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 375466, 375500);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_375502_375539(Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375502, 375539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_375541_375565(Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375541, 375565);
                    return return_v;
                }


                bool
                f_306_375567_375595(Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375567, 375595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation
                f_306_375433_375596(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ExpressionStatementOperation(operation, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 375433, 375596);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 375213, 375608);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 375213, 375608);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitLocalFunction(ILocalFunctionOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 375618, 376048);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 375741, 375799);

                var
                internalOperation = (LocalFunctionOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 375813, 376037);

                return f_306_375820_376036(f_306_375847_375871(internalOperation), f_306_375873_375902(this, f_306_375879_375901(internalOperation)), f_306_375904_375940(this, f_306_375910_375939(internalOperation)), f_306_375942_375979(internalOperation), f_306_375981_376005(internalOperation), f_306_376007_376035(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 375618, 376048);

                Microsoft.CodeAnalysis.IMethodSymbol
                f_306_375847_375871(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375847, 375871);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_375879_375901(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375879, 375901);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_375873_375902(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 375873, 375902);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_375910_375939(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.IgnoredBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375910, 375939);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_375904_375940(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 375904, 375940);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_375942_375979(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375942, 375979);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_375981_376005(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 375981, 376005);
                    return return_v;
                }


                bool
                f_306_376007_376035(Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376007, 376035);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LocalFunctionOperation
                f_306_375820_376036(Microsoft.CodeAnalysis.IMethodSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                body, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                ignoredBody, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LocalFunctionOperation(symbol, body, ignoredBody, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 375820, 376036);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 375618, 376048);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 375618, 376048);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitStop(IStopOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 376058, 376357);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376163, 376212);

                var
                internalOperation = (StopOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376226, 376346);

                return f_306_376233_376345(f_306_376251_376288(internalOperation), f_306_376290_376314(internalOperation), f_306_376316_376344(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 376058, 376357);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_376251_376288(Microsoft.CodeAnalysis.Operations.StopOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376251, 376288);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_376290_376314(Microsoft.CodeAnalysis.Operations.StopOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376290, 376314);
                    return return_v;
                }


                bool
                f_306_376316_376344(Microsoft.CodeAnalysis.Operations.StopOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376316, 376344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.StopOperation
                f_306_376233_376345(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.StopOperation(semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 376233, 376345);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 376058, 376357);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 376058, 376357);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitEnd(IEndOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 376367, 376662);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376470, 376518);

                var
                internalOperation = (EndOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376532, 376651);

                return f_306_376539_376650(f_306_376556_376593(internalOperation), f_306_376595_376619(internalOperation), f_306_376621_376649(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 376367, 376662);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_376556_376593(Microsoft.CodeAnalysis.Operations.EndOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376556, 376593);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_376595_376619(Microsoft.CodeAnalysis.Operations.EndOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376595, 376619);
                    return return_v;
                }


                bool
                f_306_376621_376649(Microsoft.CodeAnalysis.Operations.EndOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376621, 376649);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EndOperation
                f_306_376539_376650(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EndOperation(semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 376539, 376650);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 376367, 376662);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 376367, 376662);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRaiseEvent(IRaiseEventOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 376672, 377077);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376789, 376844);

                var
                internalOperation = (RaiseEventOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 376858, 377066);

                return f_306_376865_377065(f_306_376889_376928(this, f_306_376895_376927(internalOperation)), f_306_376930_376969(this, f_306_376941_376968(internalOperation)), f_306_376971_377008(internalOperation), f_306_377010_377034(internalOperation), f_306_377036_377064(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 376672, 377077);

                Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
                f_306_376895_376927(Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                this_param)
                {
                    var return_v = this_param.EventReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376895, 376927);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IEventReferenceOperation?
                f_306_376889_376928(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IEventReferenceOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 376889, 376928);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_376941_376968(Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376941, 376968);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_376930_376969(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 376930, 376969);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_376971_377008(Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 376971, 377008);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_377010_377034(Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377010, 377034);
                    return return_v;
                }


                bool
                f_306_377036_377064(Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377036, 377064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RaiseEventOperation
                f_306_376865_377065(Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
                eventReference, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RaiseEventOperation(eventReference, arguments, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 376865, 377065);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 376672, 377077);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 376672, 377077);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitLiteral(ILiteralOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 377087, 377464);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 377198, 377250);

                var
                internalOperation = (LiteralOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 377264, 377453);

                return f_306_377271_377452(f_306_377292_377329(internalOperation), f_306_377331_377355(internalOperation), f_306_377357_377379(internalOperation), f_306_377381_377421(internalOperation), f_306_377423_377451(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 377087, 377464);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_377292_377329(Microsoft.CodeAnalysis.Operations.LiteralOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377292, 377329);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_377331_377355(Microsoft.CodeAnalysis.Operations.LiteralOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377331, 377355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_377357_377379(Microsoft.CodeAnalysis.Operations.LiteralOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377357, 377379);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_377381_377421(Microsoft.CodeAnalysis.Operations.LiteralOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377381, 377421);
                    return return_v;
                }


                bool
                f_306_377423_377451(Microsoft.CodeAnalysis.Operations.LiteralOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377423, 377451);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LiteralOperation
                f_306_377271_377452(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LiteralOperation(semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 377271, 377452);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 377087, 377464);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 377087, 377464);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConversion(IConversionOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 377474, 377996);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 377591, 377646);

                var
                internalOperation = (ConversionOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 377660, 377985);

                return f_306_377667_377984(f_306_377691_377723(this, f_306_377697_377722(internalOperation)), f_306_377725_377764(internalOperation), f_306_377766_377793(internalOperation), f_306_377795_377822(internalOperation), f_306_377824_377861(internalOperation), f_306_377863_377887(internalOperation), f_306_377889_377911(internalOperation), f_306_377913_377953(internalOperation), f_306_377955_377983(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 377474, 377996);

                Microsoft.CodeAnalysis.IOperation
                f_306_377697_377722(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377697, 377722);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_377691_377723(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 377691, 377723);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_377725_377764(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.ConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377725, 377764);
                    return return_v;
                }


                bool
                f_306_377766_377793(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.IsTryCast;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377766, 377793);
                    return return_v;
                }


                bool
                f_306_377795_377822(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377795, 377822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_377824_377861(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377824, 377861);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_377863_377887(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377863, 377887);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_377889_377911(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377889, 377911);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_377913_377953(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377913, 377953);
                    return return_v;
                }


                bool
                f_306_377955_377983(Microsoft.CodeAnalysis.Operations.ConversionOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 377955, 377983);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConversionOperation
                f_306_377667_377984(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                conversion, bool
                isTryCast, bool
                isChecked, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConversionOperation(operand, conversion, isTryCast, isChecked, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 377667, 377984);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 377474, 377996);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 377474, 377996);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitInvocation(IInvocationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 378006, 378490);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 378123, 378178);

                var
                internalOperation = (InvocationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 378192, 378479);

                return f_306_378199_378478(f_306_378223_378253(internalOperation), f_306_378255_378288(this, f_306_378261_378287(internalOperation)), f_306_378290_378317(internalOperation), f_306_378319_378358(this, f_306_378330_378357(internalOperation)), f_306_378360_378397(internalOperation), f_306_378399_378423(internalOperation), f_306_378425_378447(internalOperation), f_306_378449_378477(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 378006, 378490);

                Microsoft.CodeAnalysis.IMethodSymbol
                f_306_378223_378253(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.TargetMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378223, 378253);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_378261_378287(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378261, 378287);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_378255_378288(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378255, 378288);
                    return return_v;
                }


                bool
                f_306_378290_378317(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.IsVirtual;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378290, 378317);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_378330_378357(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378330, 378357);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_378319_378358(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378319, 378358);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_378360_378397(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378360, 378397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_378399_378423(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378399, 378423);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_378425_378447(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378425, 378447);
                    return return_v;
                }


                bool
                f_306_378449_378477(Microsoft.CodeAnalysis.Operations.InvocationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378449, 378477);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InvocationOperation
                f_306_378199_378478(Microsoft.CodeAnalysis.IMethodSymbol
                targetMethod, Microsoft.CodeAnalysis.IOperation?
                instance, bool
                isVirtual, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InvocationOperation(targetMethod, instance, isVirtual, arguments, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378199, 378478);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 378006, 378490);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 378006, 378490);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitArrayElementReference(IArrayElementReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 378500, 378971);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 378639, 378705);

                var
                internalOperation = (ArrayElementReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 378719, 378960);

                return f_306_378726_378959(f_306_378761_378800(this, f_306_378767_378799(internalOperation)), f_306_378802_378839(this, f_306_378813_378838(internalOperation)), f_306_378841_378878(internalOperation), f_306_378880_378904(internalOperation), f_306_378906_378928(internalOperation), f_306_378930_378958(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 378500, 378971);

                Microsoft.CodeAnalysis.IOperation
                f_306_378767_378799(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.ArrayReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378767, 378799);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_378761_378800(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378761, 378800);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_378813_378838(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.Indices;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378813, 378838);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_378802_378839(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378802, 378839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_378841_378878(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378841, 378878);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_378880_378904(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378880, 378904);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_378906_378928(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378906, 378928);
                    return return_v;
                }


                bool
                f_306_378930_378958(Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 378930, 378958);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation
                f_306_378726_378959(Microsoft.CodeAnalysis.IOperation
                arrayReference, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                indices, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayElementReferenceOperation(arrayReference, indices, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 378726, 378959);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 378500, 378971);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 378500, 378971);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitLocalReference(ILocalReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 378981, 379444);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 379106, 379165);

                var
                internalOperation = (LocalReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 379179, 379433);

                return f_306_379186_379432(f_306_379214_379237(internalOperation), f_306_379239_379270(internalOperation), f_306_379272_379309(internalOperation), f_306_379311_379335(internalOperation), f_306_379337_379359(internalOperation), f_306_379361_379401(internalOperation), f_306_379403_379431(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 378981, 379444);

                Microsoft.CodeAnalysis.ILocalSymbol
                f_306_379214_379237(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.Local;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379214, 379237);
                    return return_v;
                }


                bool
                f_306_379239_379270(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsDeclaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379239, 379270);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_379272_379309(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379272, 379309);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_379311_379335(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379311, 379335);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_379337_379359(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379337, 379359);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_379361_379401(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379361, 379401);
                    return return_v;
                }


                bool
                f_306_379403_379431(Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379403, 379431);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.LocalReferenceOperation
                f_306_379186_379432(Microsoft.CodeAnalysis.ILocalSymbol
                local, bool
                isDeclaration, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.LocalReferenceOperation(local, isDeclaration, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 379186, 379432);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 378981, 379444);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 378981, 379444);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitParameterReference(IParameterReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 379454, 379862);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 379587, 379650);

                var
                internalOperation = (ParameterReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 379664, 379851);

                return f_306_379671_379850(f_306_379703_379730(internalOperation), f_306_379732_379769(internalOperation), f_306_379771_379795(internalOperation), f_306_379797_379819(internalOperation), f_306_379821_379849(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 379454, 379862);

                Microsoft.CodeAnalysis.IParameterSymbol
                f_306_379703_379730(Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                this_param)
                {
                    var return_v = this_param.Parameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379703, 379730);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_379732_379769(Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379732, 379769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_379771_379795(Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379771, 379795);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_379797_379819(Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379797, 379819);
                    return return_v;
                }


                bool
                f_306_379821_379849(Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 379821, 379849);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation
                f_306_379671_379850(Microsoft.CodeAnalysis.IParameterSymbol
                parameter, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ParameterReferenceOperation(parameter, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 379671, 379850);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 379454, 379862);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 379454, 379862);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitFieldReference(IFieldReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 379872, 380370);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 379997, 380056);

                var
                internalOperation = (FieldReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 380070, 380359);

                return f_306_380077_380358(f_306_380105_380128(internalOperation), f_306_380130_380161(internalOperation), f_306_380163_380196(this, f_306_380169_380195(internalOperation)), f_306_380198_380235(internalOperation), f_306_380237_380261(internalOperation), f_306_380263_380285(internalOperation), f_306_380287_380327(internalOperation), f_306_380329_380357(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 379872, 380370);

                Microsoft.CodeAnalysis.IFieldSymbol
                f_306_380105_380128(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.Field;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380105, 380128);
                    return return_v;
                }


                bool
                f_306_380130_380161(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsDeclaration;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380130, 380161);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_380169_380195(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380169, 380195);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_380163_380196(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 380163, 380196);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_380198_380235(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380198, 380235);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_380237_380261(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380237, 380261);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_380263_380285(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380263, 380285);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_380287_380327(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380287, 380327);
                    return return_v;
                }


                bool
                f_306_380329_380357(Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380329, 380357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldReferenceOperation
                f_306_380077_380358(Microsoft.CodeAnalysis.IFieldSymbol
                field, bool
                isDeclaration, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldReferenceOperation(field, isDeclaration, instance, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 380077, 380358);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 379872, 380370);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 379872, 380370);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitMethodReference(IMethodReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 380380, 380837);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 380507, 380567);

                var
                internalOperation = (MethodReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 380581, 380826);

                return f_306_380588_380825(f_306_380617_380641(internalOperation), f_306_380643_380670(internalOperation), f_306_380672_380705(this, f_306_380678_380704(internalOperation)), f_306_380707_380744(internalOperation), f_306_380746_380770(internalOperation), f_306_380772_380794(internalOperation), f_306_380796_380824(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 380380, 380837);

                Microsoft.CodeAnalysis.IMethodSymbol
                f_306_380617_380641(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380617, 380641);
                    return return_v;
                }


                bool
                f_306_380643_380670(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsVirtual;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380643, 380670);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_380678_380704(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380678, 380704);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_380672_380705(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 380672, 380705);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_380707_380744(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380707, 380744);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_380746_380770(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380746, 380770);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_380772_380794(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380772, 380794);
                    return return_v;
                }


                bool
                f_306_380796_380824(Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 380796, 380824);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MethodReferenceOperation
                f_306_380588_380825(Microsoft.CodeAnalysis.IMethodSymbol
                method, bool
                isVirtual, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MethodReferenceOperation(method, isVirtual, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 380588, 380825);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 380380, 380837);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 380380, 380837);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitPropertyReference(IPropertyReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 380847, 381326);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 380978, 381040);

                var
                internalOperation = (PropertyReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 381054, 381315);

                return f_306_381061_381314(f_306_381092_381118(internalOperation), f_306_381120_381159(this, f_306_381131_381158(internalOperation)), f_306_381161_381194(this, f_306_381167_381193(internalOperation)), f_306_381196_381233(internalOperation), f_306_381235_381259(internalOperation), f_306_381261_381283(internalOperation), f_306_381285_381313(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 380847, 381326);

                Microsoft.CodeAnalysis.IPropertySymbol
                f_306_381092_381118(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.Property;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381092, 381118);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_381131_381158(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381131, 381158);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_381120_381159(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381120, 381159);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_381167_381193(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381167, 381193);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_381161_381194(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381161, 381194);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_381196_381233(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381196, 381233);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_381235_381259(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381235, 381259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_381261_381283(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381261, 381283);
                    return return_v;
                }


                bool
                f_306_381285_381313(Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381285, 381313);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation
                f_306_381061_381314(Microsoft.CodeAnalysis.IPropertySymbol
                property, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyReferenceOperation(property, arguments, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381061, 381314);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 380847, 381326);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 380847, 381326);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitEventReference(IEventReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 381336, 381759);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 381461, 381520);

                var
                internalOperation = (EventReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 381534, 381748);

                return f_306_381541_381747(f_306_381569_381592(internalOperation), f_306_381594_381627(this, f_306_381600_381626(internalOperation)), f_306_381629_381666(internalOperation), f_306_381668_381692(internalOperation), f_306_381694_381716(internalOperation), f_306_381718_381746(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 381336, 381759);

                Microsoft.CodeAnalysis.IEventSymbol
                f_306_381569_381592(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.Event;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381569, 381592);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_381600_381626(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381600, 381626);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_381594_381627(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381594, 381627);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_381629_381666(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381629, 381666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_381668_381692(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381668, 381692);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_381694_381716(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381694, 381716);
                    return return_v;
                }


                bool
                f_306_381718_381746(Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381718, 381746);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EventReferenceOperation
                f_306_381541_381747(Microsoft.CodeAnalysis.IEventSymbol
                @event, Microsoft.CodeAnalysis.IOperation?
                instance, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EventReferenceOperation(@event, instance, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381541, 381747);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 381336, 381759);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 381336, 381759);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitUnaryOperator(IUnaryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 381769, 382303);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 381884, 381934);

                var
                internalOperation = (UnaryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 381948, 382292);

                return f_306_381955_382291(f_306_381974_382004(internalOperation), f_306_382006_382038(this, f_306_382012_382037(internalOperation)), f_306_382040_382066(internalOperation), f_306_382068_382095(internalOperation), f_306_382097_382129(internalOperation), f_306_382131_382168(internalOperation), f_306_382170_382194(internalOperation), f_306_382196_382218(internalOperation), f_306_382220_382260(internalOperation), f_306_382262_382290(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 381769, 382303);

                Microsoft.CodeAnalysis.Operations.UnaryOperatorKind
                f_306_381974_382004(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 381974, 382004);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_382012_382037(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382012, 382037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_382006_382038(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 382006, 382038);
                    return return_v;
                }


                bool
                f_306_382040_382066(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.IsLifted;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382040, 382066);
                    return return_v;
                }


                bool
                f_306_382068_382095(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382068, 382095);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_382097_382129(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.OperatorMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382097, 382129);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_382131_382168(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382131, 382168);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_382170_382194(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382170, 382194);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_382196_382218(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382196, 382218);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_382220_382260(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382220, 382260);
                    return return_v;
                }


                bool
                f_306_382262_382290(Microsoft.CodeAnalysis.Operations.UnaryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382262, 382290);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UnaryOperation
                f_306_381955_382291(Microsoft.CodeAnalysis.Operations.UnaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                operand, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UnaryOperation(operatorKind, operand, isLifted, isChecked, operatorMethod, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 381955, 382291);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 381769, 382303);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 381769, 382303);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitBinaryOperator(IBinaryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 382313, 382966);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 382430, 382481);

                var
                internalOperation = (BinaryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 382495, 382955);

                return f_306_382502_382954(f_306_382522_382552(internalOperation), f_306_382554_382590(this, f_306_382560_382589(internalOperation)), f_306_382592_382629(this, f_306_382598_382628(internalOperation)), f_306_382631_382657(internalOperation), f_306_382659_382686(internalOperation), f_306_382688_382719(internalOperation), f_306_382721_382753(internalOperation), f_306_382755_382792(internalOperation), f_306_382794_382831(internalOperation), f_306_382833_382857(internalOperation), f_306_382859_382881(internalOperation), f_306_382883_382923(internalOperation), f_306_382925_382953(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 382313, 382966);

                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_382522_382552(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382522, 382552);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_382560_382589(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382560, 382589);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_382554_382590(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 382554, 382590);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_382598_382628(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382598, 382628);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_382592_382629(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 382592, 382629);
                    return return_v;
                }


                bool
                f_306_382631_382657(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.IsLifted;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382631, 382657);
                    return return_v;
                }


                bool
                f_306_382659_382686(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382659, 382686);
                    return return_v;
                }


                bool
                f_306_382688_382719(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.IsCompareText;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382688, 382719);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_382721_382753(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.OperatorMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382721, 382753);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_382755_382792(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.UnaryOperatorMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382755, 382792);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_382794_382831(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382794, 382831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_382833_382857(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382833, 382857);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_382859_382881(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382859, 382881);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_382883_382923(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382883, 382923);
                    return return_v;
                }


                bool
                f_306_382925_382953(Microsoft.CodeAnalysis.Operations.BinaryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 382925, 382953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperation
                f_306_382502_382954(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                leftOperand, Microsoft.CodeAnalysis.IOperation
                rightOperand, bool
                isLifted, bool
                isChecked, bool
                isCompareText, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.IMethodSymbol?
                unaryOperatorMethod, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BinaryOperation(operatorKind, leftOperand, rightOperand, isLifted, isChecked, isCompareText, operatorMethod, unaryOperatorMethod, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 382502, 382954);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 382313, 382966);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 382313, 382966);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConditional(IConditionalOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 382976, 383501);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 383095, 383151);

                var
                internalOperation = (ConditionalOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 383165, 383490);

                return f_306_383172_383489(f_306_383197_383231(this, f_306_383203_383230(internalOperation)), f_306_383233_383266(this, f_306_383239_383265(internalOperation)), f_306_383268_383302(this, f_306_383274_383301(internalOperation)), f_306_383304_383327(internalOperation), f_306_383329_383366(internalOperation), f_306_383368_383392(internalOperation), f_306_383394_383416(internalOperation), f_306_383418_383458(internalOperation), f_306_383460_383488(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 382976, 383501);

                Microsoft.CodeAnalysis.IOperation
                f_306_383203_383230(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383203, 383230);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383197_383231(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383197, 383231);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_383239_383265(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.WhenTrue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383239, 383265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383233_383266(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383233, 383266);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383274_383301(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.WhenFalse;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383274, 383301);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383268_383302(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383268, 383302);
                    return return_v;
                }


                bool
                f_306_383304_383327(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383304, 383327);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_383329_383366(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383329, 383366);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_383368_383392(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383368, 383392);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_383394_383416(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383394, 383416);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_383418_383458(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383418, 383458);
                    return return_v;
                }


                bool
                f_306_383460_383488(Microsoft.CodeAnalysis.Operations.ConditionalOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383460, 383488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalOperation
                f_306_383172_383489(Microsoft.CodeAnalysis.IOperation
                condition, Microsoft.CodeAnalysis.IOperation
                whenTrue, Microsoft.CodeAnalysis.IOperation?
                whenFalse, bool
                isRef, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalOperation(condition, whenTrue, whenFalse, isRef, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383172, 383489);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 382976, 383501);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 382976, 383501);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitCoalesce(ICoalesceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 383511, 384005);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 383624, 383677);

                var
                internalOperation = (CoalesceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 383691, 383994);

                return f_306_383698_383993(f_306_383720_383750(this, f_306_383726_383749(internalOperation)), f_306_383752_383785(this, f_306_383758_383784(internalOperation)), f_306_383787_383831(internalOperation), f_306_383833_383870(internalOperation), f_306_383872_383896(internalOperation), f_306_383898_383920(internalOperation), f_306_383922_383962(internalOperation), f_306_383964_383992(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 383511, 384005);

                Microsoft.CodeAnalysis.IOperation
                f_306_383726_383749(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383726, 383749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383720_383750(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383720, 383750);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_383758_383784(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.WhenNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383758, 383784);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_383752_383785(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383752, 383785);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_383787_383831(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.ValueConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383787, 383831);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_383833_383870(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383833, 383870);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_383872_383896(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383872, 383896);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_383898_383920(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383898, 383920);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_383922_383962(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383922, 383962);
                    return return_v;
                }


                bool
                f_306_383964_383992(Microsoft.CodeAnalysis.Operations.CoalesceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 383964, 383992);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CoalesceOperation
                f_306_383698_383993(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.IOperation
                whenNull, Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                valueConversion, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CoalesceOperation(value, whenNull, valueConversion, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 383698, 383993);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 383511, 384005);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 383511, 384005);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitAnonymousFunction(IAnonymousFunctionOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 384015, 384423);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 384146, 384208);

                var
                internalOperation = (AnonymousFunctionOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 384222, 384412);

                return f_306_384229_384411(f_306_384260_384284(internalOperation), f_306_384286_384315(this, f_306_384292_384314(internalOperation)), f_306_384317_384354(internalOperation), f_306_384356_384380(internalOperation), f_306_384382_384410(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 384015, 384423);

                Microsoft.CodeAnalysis.IMethodSymbol
                f_306_384260_384284(Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384260, 384284);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation
                f_306_384292_384314(Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384292, 384314);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_384286_384315(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 384286, 384315);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_384317_384354(Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384317, 384354);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_384356_384380(Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384356, 384380);
                    return return_v;
                }


                bool
                f_306_384382_384410(Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384382, 384410);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation
                f_306_384229_384411(Microsoft.CodeAnalysis.IMethodSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IBlockOperation
                body, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AnonymousFunctionOperation(symbol, body, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 384229, 384411);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 384015, 384423);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 384015, 384423);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitObjectCreation(IObjectCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 384433, 384948);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 384558, 384617);

                var
                internalOperation = (ObjectCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 384631, 384937);

                return f_306_384638_384936(f_306_384666_384695(internalOperation), f_306_384697_384733(this, f_306_384703_384732(internalOperation)), f_306_384735_384774(this, f_306_384746_384773(internalOperation)), f_306_384776_384813(internalOperation), f_306_384815_384839(internalOperation), f_306_384841_384863(internalOperation), f_306_384865_384905(internalOperation), f_306_384907_384935(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 384433, 384948);

                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_384666_384695(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Constructor;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384666, 384695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_384703_384732(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384703, 384732);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_384697_384733(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 384697, 384733);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_384746_384773(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Arguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384746, 384773);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                f_306_384735_384774(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 384735, 384774);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_384776_384813(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384776, 384813);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_384815_384839(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384815, 384839);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_384841_384863(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384841, 384863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_384865_384905(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384865, 384905);
                    return return_v;
                }


                bool
                f_306_384907_384935(Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 384907, 384935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ObjectCreationOperation
                f_306_384638_384936(Microsoft.CodeAnalysis.IMethodSymbol?
                constructor, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IArgumentOperation>
                arguments, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ObjectCreationOperation(constructor, initializer, arguments, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 384638, 384936);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 384433, 384948);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 384433, 384948);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTypeParameterObjectCreation(ITypeParameterObjectCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 384958, 385411);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 385109, 385181);

                var
                internalOperation = (TypeParameterObjectCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 385195, 385400);

                return f_306_385202_385399(f_306_385243_385279(this, f_306_385249_385278(internalOperation)), f_306_385281_385318(internalOperation), f_306_385320_385344(internalOperation), f_306_385346_385368(internalOperation), f_306_385370_385398(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 384958, 385411);

                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_385249_385278(Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385249, 385278);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_385243_385279(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 385243, 385279);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_385281_385318(Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385281, 385318);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_385320_385344(Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385320, 385344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_385346_385368(Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385346, 385368);
                    return return_v;
                }


                bool
                f_306_385370_385398(Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385370, 385398);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation
                f_306_385202_385399(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypeParameterObjectCreationOperation(initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 385202, 385399);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 384958, 385411);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 384958, 385411);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitArrayCreation(IArrayCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 385421, 385864);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 385544, 385602);

                var
                internalOperation = (ArrayCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 385616, 385853);

                return f_306_385623_385852(f_306_385650_385694(this, f_306_385661_385693(internalOperation)), f_306_385696_385732(this, f_306_385702_385731(internalOperation)), f_306_385734_385771(internalOperation), f_306_385773_385797(internalOperation), f_306_385799_385821(internalOperation), f_306_385823_385851(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 385421, 385864);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_385661_385693(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.DimensionSizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385661, 385693);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_385650_385694(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 385650, 385694);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
                f_306_385702_385731(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385702, 385731);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
                f_306_385696_385732(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 385696, 385732);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_385734_385771(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385734, 385771);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_385773_385797(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385773, 385797);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_385799_385821(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385799, 385821);
                    return return_v;
                }


                bool
                f_306_385823_385851(Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 385823, 385851);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayCreationOperation
                f_306_385623_385852(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                dimensionSizes, Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayCreationOperation(dimensionSizes, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 385623, 385852);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 385421, 385864);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 385421, 385864);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitInstanceReference(IInstanceReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 385874, 386282);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386005, 386067);

                var
                internalOperation = (InstanceReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386081, 386271);

                return f_306_386088_386270(f_306_386119_386150(internalOperation), f_306_386152_386189(internalOperation), f_306_386191_386215(internalOperation), f_306_386217_386239(internalOperation), f_306_386241_386269(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 385874, 386282);

                Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                f_306_386119_386150(Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                this_param)
                {
                    var return_v = this_param.ReferenceKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386119, 386150);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_386152_386189(Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386152, 386189);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_386191_386215(Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386191, 386215);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_386217_386239(Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386217, 386239);
                    return return_v;
                }


                bool
                f_306_386241_386269(Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386241, 386269);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation
                f_306_386088_386270(Microsoft.CodeAnalysis.Operations.InstanceReferenceKind
                referenceKind, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InstanceReferenceOperation(referenceKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 386088, 386270);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 385874, 386282);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 385874, 386282);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitIsType(IIsTypeOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 386292, 386722);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386401, 386452);

                var
                internalOperation = (IsTypeOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386466, 386711);

                return f_306_386473_386710(f_306_386493_386530(this, f_306_386499_386529(internalOperation)), f_306_386532_386561(internalOperation), f_306_386563_386590(internalOperation), f_306_386592_386629(internalOperation), f_306_386631_386655(internalOperation), f_306_386657_386679(internalOperation), f_306_386681_386709(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 386292, 386722);

                Microsoft.CodeAnalysis.IOperation
                f_306_386499_386529(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.ValueOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386499, 386529);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_386493_386530(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 386493, 386530);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_386532_386561(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.TypeOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386532, 386561);
                    return return_v;
                }


                bool
                f_306_386563_386590(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.IsNegated;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386563, 386590);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_386592_386629(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386592, 386629);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_386631_386655(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386631, 386655);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_386657_386679(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386657, 386679);
                    return return_v;
                }


                bool
                f_306_386681_386709(Microsoft.CodeAnalysis.Operations.IsTypeOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386681, 386709);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IsTypeOperation
                f_306_386473_386710(Microsoft.CodeAnalysis.IOperation
                valueOperand, Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, bool
                isNegated, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IsTypeOperation(valueOperand, typeOperand, isNegated, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 386473, 386710);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 386292, 386722);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 386292, 386722);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitAwait(IAwaitOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 386732, 387095);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386839, 386889);

                var
                internalOperation = (AwaitOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 386903, 387084);

                return f_306_386910_387083(f_306_386929_386963(this, f_306_386935_386962(internalOperation)), f_306_386965_387002(internalOperation), f_306_387004_387028(internalOperation), f_306_387030_387052(internalOperation), f_306_387054_387082(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 386732, 387095);

                Microsoft.CodeAnalysis.IOperation
                f_306_386935_386962(Microsoft.CodeAnalysis.Operations.AwaitOperation
                this_param)
                {
                    var return_v = this_param.Operation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386935, 386962);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_386929_386963(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 386929, 386963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_386965_387002(Microsoft.CodeAnalysis.Operations.AwaitOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 386965, 387002);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_387004_387028(Microsoft.CodeAnalysis.Operations.AwaitOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387004, 387028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_387030_387052(Microsoft.CodeAnalysis.Operations.AwaitOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387030, 387052);
                    return return_v;
                }


                bool
                f_306_387054_387082(Microsoft.CodeAnalysis.Operations.AwaitOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387054, 387082);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AwaitOperation
                f_306_386910_387083(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AwaitOperation(operation, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 386910, 387083);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 386732, 387095);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 386732, 387095);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSimpleAssignment(ISimpleAssignmentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 387105, 387608);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 387234, 387295);

                var
                internalOperation = (SimpleAssignmentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 387309, 387597);

                return f_306_387316_387596(f_306_387346_387369(internalOperation), f_306_387371_387402(this, f_306_387377_387401(internalOperation)), f_306_387404_387434(this, f_306_387410_387433(internalOperation)), f_306_387436_387473(internalOperation), f_306_387475_387499(internalOperation), f_306_387501_387523(internalOperation), f_306_387525_387565(internalOperation), f_306_387567_387595(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 387105, 387608);

                bool
                f_306_387346_387369(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsRef;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387346, 387369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_387377_387401(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387377, 387401);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_387371_387402(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 387371, 387402);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_387410_387433(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387410, 387433);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_387404_387434(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 387404, 387434);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_387436_387473(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387436, 387473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_387475_387499(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387475, 387499);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_387501_387523(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387501, 387523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_387525_387565(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387525, 387565);
                    return return_v;
                }


                bool
                f_306_387567_387595(Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387567, 387595);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation
                f_306_387316_387596(bool
                isRef, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SimpleAssignmentOperation(isRef, target, value, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 387316, 387596);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 387105, 387608);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 387105, 387608);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitCompoundAssignment(ICompoundAssignmentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 387618, 388272);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 387751, 387814);

                var
                internalOperation = (CompoundAssignmentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 387828, 388261);

                return f_306_387835_388260(f_306_387867_387908(internalOperation), f_306_387910_387952(internalOperation), f_306_387954_387984(internalOperation), f_306_387986_388012(internalOperation), f_306_388014_388041(internalOperation), f_306_388043_388075(internalOperation), f_306_388077_388108(this, f_306_388083_388107(internalOperation)), f_306_388110_388140(this, f_306_388116_388139(internalOperation)), f_306_388142_388179(internalOperation), f_306_388181_388205(internalOperation), f_306_388207_388229(internalOperation), f_306_388231_388259(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 387618, 388272);

                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_387867_387908(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.InConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387867, 387908);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_387910_387952(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OutConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387910, 387952);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_387954_387984(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387954, 387984);
                    return return_v;
                }


                bool
                f_306_387986_388012(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsLifted;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 387986, 388012);
                    return return_v;
                }


                bool
                f_306_388014_388041(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388014, 388041);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_388043_388075(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OperatorMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388043, 388075);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_388083_388107(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388083, 388107);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_388077_388108(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388077, 388108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_388116_388139(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388116, 388139);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_388110_388140(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388110, 388140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_388142_388179(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388142, 388179);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_388181_388205(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388181, 388205);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_388207_388229(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388207, 388229);
                    return return_v;
                }


                bool
                f_306_388231_388259(Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388231, 388259);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation
                f_306_387835_388260(Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                inConversion, Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                outConversion, Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CompoundAssignmentOperation(inConversion, outConversion, operatorKind, isLifted, isChecked, operatorMethod, target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 387835, 388260);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 387618, 388272);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 387618, 388272);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitParenthesized(IParenthesizedOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 388282, 388717);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 388405, 388463);

                var
                internalOperation = (ParenthesizedOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 388477, 388706);

                return f_306_388484_388705(f_306_388511_388543(this, f_306_388517_388542(internalOperation)), f_306_388545_388582(internalOperation), f_306_388584_388608(internalOperation), f_306_388610_388632(internalOperation), f_306_388634_388674(internalOperation), f_306_388676_388704(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 388282, 388717);

                Microsoft.CodeAnalysis.IOperation
                f_306_388517_388542(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388517, 388542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_388511_388543(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388511, 388543);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_388545_388582(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388545, 388582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_388584_388608(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388584, 388608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_388610_388632(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388610, 388632);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_388634_388674(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388634, 388674);
                    return return_v;
                }


                bool
                f_306_388676_388704(Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388676, 388704);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ParenthesizedOperation
                f_306_388484_388705(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ParenthesizedOperation(operand, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388484, 388705);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 388282, 388717);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 388282, 388717);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitEventAssignment(IEventAssignmentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 388727, 389198);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 388854, 388914);

                var
                internalOperation = (EventAssignmentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 388928, 389187);

                return f_306_388935_389186(f_306_388964_389003(this, f_306_388970_389002(internalOperation)), f_306_389005_389042(this, f_306_389011_389041(internalOperation)), f_306_389044_389066(internalOperation), f_306_389068_389105(internalOperation), f_306_389107_389131(internalOperation), f_306_389133_389155(internalOperation), f_306_389157_389185(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 388727, 389198);

                Microsoft.CodeAnalysis.IOperation
                f_306_388970_389002(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.EventReference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 388970, 389002);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_388964_389003(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388964, 389003);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_389011_389041(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.HandlerValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389011, 389041);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_389005_389042(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 389005, 389042);
                    return return_v;
                }


                bool
                f_306_389044_389066(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Adds;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389044, 389066);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_389068_389105(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389068, 389105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_389107_389131(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389107, 389131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_389133_389155(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389133, 389155);
                    return return_v;
                }


                bool
                f_306_389157_389185(Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389157, 389185);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.EventAssignmentOperation
                f_306_388935_389186(Microsoft.CodeAnalysis.IOperation
                eventReference, Microsoft.CodeAnalysis.IOperation
                handlerValue, bool
                adds, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.EventAssignmentOperation(eventReference, handlerValue, adds, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 388935, 389186);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 388727, 389198);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 388727, 389198);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConditionalAccess(IConditionalAccessOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 389208, 389657);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 389339, 389401);

                var
                internalOperation = (ConditionalAccessOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 389415, 389646);

                return f_306_389422_389645(f_306_389453_389487(this, f_306_389459_389486(internalOperation)), f_306_389489_389525(this, f_306_389495_389524(internalOperation)), f_306_389527_389564(internalOperation), f_306_389566_389590(internalOperation), f_306_389592_389614(internalOperation), f_306_389616_389644(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 389208, 389657);

                Microsoft.CodeAnalysis.IOperation
                f_306_389459_389486(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.Operation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389459, 389486);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_389453_389487(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 389453, 389487);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_389495_389524(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.WhenNotNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389495, 389524);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_389489_389525(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 389489, 389525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_389527_389564(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389527, 389564);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_389566_389590(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389566, 389590);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_389592_389614(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389592, 389614);
                    return return_v;
                }


                bool
                f_306_389616_389644(Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389616, 389644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation
                f_306_389422_389645(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.IOperation
                whenNotNull, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalAccessOperation(operation, whenNotNull, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 389422, 389645);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 389208, 389657);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 389208, 389657);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConditionalAccessInstance(IConditionalAccessInstanceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 389667, 390074);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 389814, 389884);

                var
                internalOperation = (ConditionalAccessInstanceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 389898, 390063);

                return f_306_389905_390062(f_306_389944_389981(internalOperation), f_306_389983_390007(internalOperation), f_306_390009_390031(internalOperation), f_306_390033_390061(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 389667, 390074);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_389944_389981(Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389944, 389981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_389983_390007(Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 389983, 390007);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_390009_390031(Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390009, 390031);
                    return return_v;
                }


                bool
                f_306_390033_390061(Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390033, 390061);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation
                f_306_389905_390062(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConditionalAccessInstanceOperation(semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 389905, 390062);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 389667, 390074);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 389667, 390074);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitInterpolatedString(IInterpolatedStringOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 390084, 390542);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 390217, 390280);

                var
                internalOperation = (InterpolatedStringOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 390294, 390531);

                return f_306_390301_390530(f_306_390333_390368(this, f_306_390344_390367(internalOperation)), f_306_390370_390407(internalOperation), f_306_390409_390433(internalOperation), f_306_390435_390457(internalOperation), f_306_390459_390499(internalOperation), f_306_390501_390529(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 390084, 390542);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                f_306_390344_390367(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.Parts;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390344, 390367);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                f_306_390333_390368(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 390333, 390368);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_390370_390407(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390370, 390407);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_390409_390433(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390409, 390433);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_390435_390457(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390435, 390457);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_390459_390499(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390459, 390499);
                    return return_v;
                }


                bool
                f_306_390501_390529(Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390501, 390529);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation
                f_306_390301_390530(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation>
                parts, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolatedStringOperation(parts, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 390301, 390530);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 390084, 390542);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 390084, 390542);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitAnonymousObjectCreation(IAnonymousObjectCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 390552, 390995);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 390695, 390763);

                var
                internalOperation = (AnonymousObjectCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 390777, 390984);

                return f_306_390784_390983(f_306_390821_390863(this, f_306_390832_390862(internalOperation)), f_306_390865_390902(internalOperation), f_306_390904_390928(internalOperation), f_306_390930_390952(internalOperation), f_306_390954_390982(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 390552, 390995);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_390832_390862(Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390832, 390862);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_390821_390863(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 390821, 390863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_390865_390902(Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390865, 390902);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_390904_390928(Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390904, 390928);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_390930_390952(Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390930, 390952);
                    return return_v;
                }


                bool
                f_306_390954_390982(Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 390954, 390982);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation
                f_306_390784_390983(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AnonymousObjectCreationOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 390784, 390983);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 390552, 390995);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 390552, 390995);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitObjectOrCollectionInitializer(IObjectOrCollectionInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 391005, 391472);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 391160, 391234);

                var
                internalOperation = (ObjectOrCollectionInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 391248, 391461);

                return f_306_391255_391460(f_306_391298_391340(this, f_306_391309_391339(internalOperation)), f_306_391342_391379(internalOperation), f_306_391381_391405(internalOperation), f_306_391407_391429(internalOperation), f_306_391431_391459(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 391005, 391472);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_391309_391339(Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                this_param)
                {
                    var return_v = this_param.Initializers;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391309, 391339);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_391298_391340(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 391298, 391340);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_391342_391379(Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391342, 391379);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_391381_391405(Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391381, 391405);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_391407_391429(Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391407, 391429);
                    return return_v;
                }


                bool
                f_306_391431_391459(Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391431, 391459);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation
                f_306_391255_391460(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                initializers, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ObjectOrCollectionInitializerOperation(initializers, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 391255, 391460);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 391005, 391472);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 391005, 391472);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitMemberInitializer(IMemberInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 391482, 391939);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 391613, 391675);

                var
                internalOperation = (MemberInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 391689, 391928);

                return f_306_391696_391927(f_306_391727_391769(this, f_306_391733_391768(internalOperation)), f_306_391771_391807(this, f_306_391777_391806(internalOperation)), f_306_391809_391846(internalOperation), f_306_391848_391872(internalOperation), f_306_391874_391896(internalOperation), f_306_391898_391926(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 391482, 391939);

                Microsoft.CodeAnalysis.IOperation
                f_306_391733_391768(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.InitializedMember;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391733, 391768);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_391727_391769(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 391727, 391769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                f_306_391777_391806(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391777, 391806);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_391771_391807(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 391771, 391807);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_391809_391846(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391809, 391846);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_391848_391872(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391848, 391872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_391874_391896(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391874, 391896);
                    return return_v;
                }


                bool
                f_306_391898_391926(Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 391898, 391926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MemberInitializerOperation
                f_306_391696_391927(Microsoft.CodeAnalysis.IOperation
                initializedMember, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                initializer, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MemberInitializerOperation(initializedMember, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 391696, 391927);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 391482, 391939);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 391482, 391939);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitNameOf(INameOfOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 391949, 392357);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392058, 392109);

                var
                internalOperation = (NameOfOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392123, 392346);

                return f_306_392130_392345(f_306_392150_392183(this, f_306_392156_392182(internalOperation)), f_306_392185_392222(internalOperation), f_306_392224_392248(internalOperation), f_306_392250_392272(internalOperation), f_306_392274_392314(internalOperation), f_306_392316_392344(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 391949, 392357);

                Microsoft.CodeAnalysis.IOperation
                f_306_392156_392182(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.Argument;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392156, 392182);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_392150_392183(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 392150, 392183);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_392185_392222(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392185, 392222);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_392224_392248(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392224, 392248);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_392250_392272(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392250, 392272);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_392274_392314(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392274, 392314);
                    return return_v;
                }


                bool
                f_306_392316_392344(Microsoft.CodeAnalysis.Operations.NameOfOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392316, 392344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NameOfOperation
                f_306_392130_392345(Microsoft.CodeAnalysis.IOperation
                argument, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NameOfOperation(argument, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 392130, 392345);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 391949, 392357);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 391949, 392357);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTuple(ITupleOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 392367, 392765);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392474, 392524);

                var
                internalOperation = (TupleOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392538, 392754);

                return f_306_392545_392753(f_306_392564_392602(this, f_306_392575_392601(internalOperation)), f_306_392604_392633(internalOperation), f_306_392635_392672(internalOperation), f_306_392674_392698(internalOperation), f_306_392700_392722(internalOperation), f_306_392724_392752(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 392367, 392765);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_392575_392601(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.Elements;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392575, 392601);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_392564_392602(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 392564, 392602);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_392604_392633(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.NaturalType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392604, 392633);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_392635_392672(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392635, 392672);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_392674_392698(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392674, 392698);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_392700_392722(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392700, 392722);
                    return return_v;
                }


                bool
                f_306_392724_392752(Microsoft.CodeAnalysis.Operations.TupleOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 392724, 392752);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TupleOperation
                f_306_392545_392753(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                elements, Microsoft.CodeAnalysis.ITypeSymbol?
                naturalType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TupleOperation(elements, naturalType, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 392545, 392753);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 392367, 392765);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 392367, 392765);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDynamicMemberReference(IDynamicMemberReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 392775, 393302);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392916, 392983);

                var
                internalOperation = (DynamicMemberReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 392997, 393291);

                return f_306_393004_393290(f_306_393040_393073(this, f_306_393046_393072(internalOperation)), f_306_393075_393103(internalOperation), f_306_393105_393136(internalOperation), f_306_393138_393170(internalOperation), f_306_393172_393209(internalOperation), f_306_393211_393235(internalOperation), f_306_393237_393259(internalOperation), f_306_393261_393289(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 392775, 393302);

                Microsoft.CodeAnalysis.IOperation?
                f_306_393046_393072(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.Instance;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393046, 393072);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_393040_393073(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393040, 393073);
                    return return_v;
                }


                string
                f_306_393075_393103(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.MemberName;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393075, 393103);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol>
                f_306_393105_393136(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.TypeArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393105, 393136);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_393138_393170(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.ContainingType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393138, 393170);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_393172_393209(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393172, 393209);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_393211_393235(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393211, 393235);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_393237_393259(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393237, 393259);
                    return return_v;
                }


                bool
                f_306_393261_393289(Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393261, 393289);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation
                f_306_393004_393290(Microsoft.CodeAnalysis.IOperation?
                instance, string
                memberName, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ITypeSymbol>
                typeArguments, Microsoft.CodeAnalysis.ITypeSymbol?
                containingType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DynamicMemberReferenceOperation(instance, memberName, typeArguments, containingType, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393004, 393290);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 392775, 393302);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 392775, 393302);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTranslatedQuery(ITranslatedQueryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 393312, 393715);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 393439, 393499);

                var
                internalOperation = (TranslatedQueryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 393513, 393704);

                return f_306_393520_393703(f_306_393549_393583(this, f_306_393555_393582(internalOperation)), f_306_393585_393622(internalOperation), f_306_393624_393648(internalOperation), f_306_393650_393672(internalOperation), f_306_393674_393702(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 393312, 393715);

                Microsoft.CodeAnalysis.IOperation
                f_306_393555_393582(Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                this_param)
                {
                    var return_v = this_param.Operation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393555, 393582);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_393549_393583(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393549, 393583);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_393585_393622(Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393585, 393622);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_393624_393648(Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393624, 393648);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_393650_393672(Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393650, 393672);
                    return return_v;
                }


                bool
                f_306_393674_393702(Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393674, 393702);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation
                f_306_393520_393703(Microsoft.CodeAnalysis.IOperation
                operation, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TranslatedQueryOperation(operation, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393520, 393703);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 393312, 393715);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 393312, 393715);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDelegateCreation(IDelegateCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 393725, 394129);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 393854, 393915);

                var
                internalOperation = (DelegateCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 393929, 394118);

                return f_306_393936_394117(f_306_393966_393997(this, f_306_393972_393996(internalOperation)), f_306_393999_394036(internalOperation), f_306_394038_394062(internalOperation), f_306_394064_394086(internalOperation), f_306_394088_394116(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 393725, 394129);

                Microsoft.CodeAnalysis.IOperation
                f_306_393972_393996(Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393972, 393996);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_393966_393997(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393966, 393997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_393999_394036(Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 393999, 394036);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_394038_394062(Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394038, 394062);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_394064_394086(Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394064, 394086);
                    return return_v;
                }


                bool
                f_306_394088_394116(Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394088, 394116);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DelegateCreationOperation
                f_306_393936_394117(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DelegateCreationOperation(target, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 393936, 394117);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 393725, 394129);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 393725, 394129);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDefaultValue(IDefaultValueOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 394139, 394536);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 394260, 394317);

                var
                internalOperation = (DefaultValueOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 394331, 394525);

                return f_306_394338_394524(f_306_394364_394401(internalOperation), f_306_394403_394427(internalOperation), f_306_394429_394451(internalOperation), f_306_394453_394493(internalOperation), f_306_394495_394523(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 394139, 394536);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_394364_394401(Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394364, 394401);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_394403_394427(Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394403, 394427);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_394429_394451(Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394429, 394451);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_394453_394493(Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394453, 394493);
                    return return_v;
                }


                bool
                f_306_394495_394523(Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394495, 394523);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DefaultValueOperation
                f_306_394338_394524(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DefaultValueOperation(semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 394338, 394524);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 394139, 394536);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 394139, 394536);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTypeOf(ITypeOfOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 394546, 394908);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 394655, 394706);

                var
                internalOperation = (TypeOfOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 394720, 394897);

                return f_306_394727_394896(f_306_394747_394776(internalOperation), f_306_394778_394815(internalOperation), f_306_394817_394841(internalOperation), f_306_394843_394865(internalOperation), f_306_394867_394895(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 394546, 394908);

                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_394747_394776(Microsoft.CodeAnalysis.Operations.TypeOfOperation
                this_param)
                {
                    var return_v = this_param.TypeOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394747, 394776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_394778_394815(Microsoft.CodeAnalysis.Operations.TypeOfOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394778, 394815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_394817_394841(Microsoft.CodeAnalysis.Operations.TypeOfOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394817, 394841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_394843_394865(Microsoft.CodeAnalysis.Operations.TypeOfOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394843, 394865);
                    return return_v;
                }


                bool
                f_306_394867_394895(Microsoft.CodeAnalysis.Operations.TypeOfOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 394867, 394895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypeOfOperation
                f_306_394727_394896(Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypeOfOperation(typeOperand, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 394727, 394896);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 394546, 394908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 394546, 394908);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSizeOf(ISizeOfOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 394918, 395322);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395027, 395078);

                var
                internalOperation = (SizeOfOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395092, 395311);

                return f_306_395099_395310(f_306_395119_395148(internalOperation), f_306_395150_395187(internalOperation), f_306_395189_395213(internalOperation), f_306_395215_395237(internalOperation), f_306_395239_395279(internalOperation), f_306_395281_395309(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 394918, 395322);

                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_395119_395148(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.TypeOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395119, 395148);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_395150_395187(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395150, 395187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_395189_395213(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395189, 395213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_395215_395237(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395215, 395237);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_395239_395279(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395239, 395279);
                    return return_v;
                }


                bool
                f_306_395281_395309(Microsoft.CodeAnalysis.Operations.SizeOfOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395281, 395309);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SizeOfOperation
                f_306_395099_395310(Microsoft.CodeAnalysis.ITypeSymbol
                typeOperand, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SizeOfOperation(typeOperand, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395099, 395310);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 394918, 395322);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 394918, 395322);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitAddressOf(IAddressOfOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 395332, 395711);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395447, 395501);

                var
                internalOperation = (AddressOfOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395515, 395700);

                return f_306_395522_395699(f_306_395545_395579(this, f_306_395551_395578(internalOperation)), f_306_395581_395618(internalOperation), f_306_395620_395644(internalOperation), f_306_395646_395668(internalOperation), f_306_395670_395698(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 395332, 395711);

                Microsoft.CodeAnalysis.IOperation
                f_306_395551_395578(Microsoft.CodeAnalysis.Operations.AddressOfOperation
                this_param)
                {
                    var return_v = this_param.Reference;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395551, 395578);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_395545_395579(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395545, 395579);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_395581_395618(Microsoft.CodeAnalysis.Operations.AddressOfOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395581, 395618);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_395620_395644(Microsoft.CodeAnalysis.Operations.AddressOfOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395620, 395644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_395646_395668(Microsoft.CodeAnalysis.Operations.AddressOfOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395646, 395668);
                    return return_v;
                }


                bool
                f_306_395670_395698(Microsoft.CodeAnalysis.Operations.AddressOfOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395670, 395698);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AddressOfOperation
                f_306_395522_395699(Microsoft.CodeAnalysis.IOperation
                reference, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AddressOfOperation(reference, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395522, 395699);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 395332, 395711);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 395332, 395711);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitIsPattern(IIsPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 395721, 396130);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395836, 395890);

                var
                internalOperation = (IsPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 395904, 396119);

                return f_306_395911_396118(f_306_395934_395964(this, f_306_395940_395963(internalOperation)), f_306_395966_395998(this, f_306_395972_395997(internalOperation)), f_306_396000_396037(internalOperation), f_306_396039_396063(internalOperation), f_306_396065_396087(internalOperation), f_306_396089_396117(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 395721, 396130);

                Microsoft.CodeAnalysis.IOperation
                f_306_395940_395963(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395940, 395963);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_395934_395964(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395934, 395964);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_395972_395997(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 395972, 395997);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_395966_395998(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395966, 395998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_396000_396037(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396000, 396037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_396039_396063(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396039, 396063);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_396065_396087(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396065, 396087);
                    return return_v;
                }


                bool
                f_306_396089_396117(Microsoft.CodeAnalysis.Operations.IsPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396089, 396117);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IsPatternOperation
                f_306_395911_396118(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IsPatternOperation(value, pattern, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 395911, 396118);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 395721, 396130);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 395721, 396130);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitIncrementOrDecrement(IIncrementOrDecrementOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 396140, 396704);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 396277, 396342);

                var
                internalOperation = (IncrementOrDecrementOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 396356, 396693);

                return f_306_396363_396692(f_306_396397_396424(internalOperation), f_306_396426_396452(internalOperation), f_306_396454_396481(internalOperation), f_306_396483_396514(this, f_306_396489_396513(internalOperation)), f_306_396516_396548(internalOperation), f_306_396550_396572(internalOperation), f_306_396574_396611(internalOperation), f_306_396613_396637(internalOperation), f_306_396639_396661(internalOperation), f_306_396663_396691(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 396140, 396704);

                bool
                f_306_396397_396424(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.IsPostfix;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396397, 396424);
                    return return_v;
                }


                bool
                f_306_396426_396452(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.IsLifted;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396426, 396452);
                    return return_v;
                }


                bool
                f_306_396454_396481(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.IsChecked;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396454, 396481);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_396489_396513(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396489, 396513);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_396483_396514(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 396483, 396514);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_396516_396548(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.OperatorMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396516, 396548);
                    return return_v;
                }


                Microsoft.CodeAnalysis.OperationKind
                f_306_396550_396572(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.Kind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396550, 396572);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_396574_396611(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396574, 396611);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_396613_396637(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396613, 396637);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_396639_396661(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396639, 396661);
                    return return_v;
                }


                bool
                f_306_396663_396691(Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396663, 396691);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation
                f_306_396363_396692(bool
                isPostfix, bool
                isLifted, bool
                isChecked, Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IMethodSymbol?
                operatorMethod, Microsoft.CodeAnalysis.OperationKind
                kind, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.IncrementOrDecrementOperation(isPostfix, isLifted, isChecked, target, operatorMethod, kind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 396363, 396692);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 396140, 396704);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 396140, 396704);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitThrow(IThrowOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 396714, 397077);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 396821, 396871);

                var
                internalOperation = (ThrowOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 396885, 397066);

                return f_306_396892_397065(f_306_396911_396945(this, f_306_396917_396944(internalOperation)), f_306_396947_396984(internalOperation), f_306_396986_397010(internalOperation), f_306_397012_397034(internalOperation), f_306_397036_397064(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 396714, 397077);

                Microsoft.CodeAnalysis.IOperation?
                f_306_396917_396944(Microsoft.CodeAnalysis.Operations.ThrowOperation
                this_param)
                {
                    var return_v = this_param.Exception;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396917, 396944);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_396911_396945(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 396911, 396945);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_396947_396984(Microsoft.CodeAnalysis.Operations.ThrowOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396947, 396984);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_396986_397010(Microsoft.CodeAnalysis.Operations.ThrowOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 396986, 397010);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_397012_397034(Microsoft.CodeAnalysis.Operations.ThrowOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397012, 397034);
                    return return_v;
                }


                bool
                f_306_397036_397064(Microsoft.CodeAnalysis.Operations.ThrowOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397036, 397064);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ThrowOperation
                f_306_396892_397065(Microsoft.CodeAnalysis.IOperation?
                exception, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ThrowOperation(exception, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 396892, 397065);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 396714, 397077);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 396714, 397077);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDeconstructionAssignment(IDeconstructionAssignmentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 397087, 397555);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 397232, 397301);

                var
                internalOperation = (DeconstructionAssignmentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 397315, 397544);

                return f_306_397322_397543(f_306_397360_397391(this, f_306_397366_397390(internalOperation)), f_306_397393_397423(this, f_306_397399_397422(internalOperation)), f_306_397425_397462(internalOperation), f_306_397464_397488(internalOperation), f_306_397490_397512(internalOperation), f_306_397514_397542(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 397087, 397555);

                Microsoft.CodeAnalysis.IOperation
                f_306_397366_397390(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397366, 397390);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_397360_397391(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 397360, 397391);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_397399_397422(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397399, 397422);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_397393_397423(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 397393, 397423);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_397425_397462(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397425, 397462);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_397464_397488(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397464, 397488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_397490_397512(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397490, 397512);
                    return return_v;
                }


                bool
                f_306_397514_397542(Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397514, 397542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation
                f_306_397322_397543(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeconstructionAssignmentOperation(target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 397322, 397543);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 397087, 397555);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 397087, 397555);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDeclarationExpression(IDeclarationExpressionOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 397565, 397993);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 397704, 397770);

                var
                internalOperation = (DeclarationExpressionOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 397784, 397982);

                return f_306_397791_397981(f_306_397826_397861(this, f_306_397832_397860(internalOperation)), f_306_397863_397900(internalOperation), f_306_397902_397926(internalOperation), f_306_397928_397950(internalOperation), f_306_397952_397980(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 397565, 397993);

                Microsoft.CodeAnalysis.IOperation
                f_306_397832_397860(Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397832, 397860);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_397826_397861(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 397826, 397861);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_397863_397900(Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397863, 397900);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_397902_397926(Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397902, 397926);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_397928_397950(Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397928, 397950);
                    return return_v;
                }


                bool
                f_306_397952_397980(Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 397952, 397980);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation
                f_306_397791_397981(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationExpressionOperation(expression, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 397791, 397981);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 397565, 397993);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 397565, 397993);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitOmittedArgument(IOmittedArgumentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 398003, 398370);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 398130, 398190);

                var
                internalOperation = (OmittedArgumentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 398204, 398359);

                return f_306_398211_398358(f_306_398240_398277(internalOperation), f_306_398279_398303(internalOperation), f_306_398305_398327(internalOperation), f_306_398329_398357(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 398003, 398370);

                Microsoft.CodeAnalysis.SemanticModel?
                f_306_398240_398277(Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398240, 398277);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_398279_398303(Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398279, 398303);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_398305_398327(Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398305, 398327);
                    return return_v;
                }


                bool
                f_306_398329_398357(Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398329, 398357);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation
                f_306_398211_398358(Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.OmittedArgumentOperation(semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 398211, 398358);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 398003, 398370);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 398003, 398370);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitFieldInitializer(IFieldInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 398380, 398822);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 398509, 398570);

                var
                internalOperation = (FieldInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 398584, 398811);

                return f_306_398591_398810(f_306_398621_398656(internalOperation), f_306_398658_398682(internalOperation), f_306_398684_398714(this, f_306_398690_398713(internalOperation)), f_306_398716_398753(internalOperation), f_306_398755_398779(internalOperation), f_306_398781_398809(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 398380, 398822);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IFieldSymbol>
                f_306_398621_398656(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.InitializedFields;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398621, 398656);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_398658_398682(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398658, 398682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_398690_398713(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398690, 398713);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_398684_398714(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 398684, 398714);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_398716_398753(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398716, 398753);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_398755_398779(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398755, 398779);
                    return return_v;
                }


                bool
                f_306_398781_398809(Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 398781, 398809);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FieldInitializerOperation
                f_306_398591_398810(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IFieldSymbol>
                initializedFields, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FieldInitializerOperation(initializedFields, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 398591, 398810);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 398380, 398822);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 398380, 398822);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitVariableInitializer(IVariableInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 398832, 399249);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 398967, 399031);

                var
                internalOperation = (VariableInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 399045, 399238);

                return f_306_399052_399237(f_306_399085_399109(internalOperation), f_306_399111_399141(this, f_306_399117_399140(internalOperation)), f_306_399143_399180(internalOperation), f_306_399182_399206(internalOperation), f_306_399208_399236(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 398832, 399249);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_399085_399109(Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399085, 399109);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_399117_399140(Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399117, 399140);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_399111_399141(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 399111, 399141);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_399143_399180(Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399143, 399180);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_399182_399206(Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399182, 399206);
                    return return_v;
                }


                bool
                f_306_399208_399236(Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399208, 399236);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableInitializerOperation
                f_306_399052_399237(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableInitializerOperation(locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 399052, 399237);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 398832, 399249);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 398832, 399249);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitPropertyInitializer(IPropertyInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 399259, 399717);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 399394, 399458);

                var
                internalOperation = (PropertyInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 399472, 399706);

                return f_306_399479_399705(f_306_399512_399551(internalOperation), f_306_399553_399577(internalOperation), f_306_399579_399609(this, f_306_399585_399608(internalOperation)), f_306_399611_399648(internalOperation), f_306_399650_399674(internalOperation), f_306_399676_399704(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 399259, 399717);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IPropertySymbol>
                f_306_399512_399551(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.InitializedProperties;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399512, 399551);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_399553_399577(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399553, 399577);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_399585_399608(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399585, 399608);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_399579_399609(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 399579, 399609);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_399611_399648(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399611, 399648);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_399650_399674(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399650, 399674);
                    return return_v;
                }


                bool
                f_306_399676_399704(Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399676, 399704);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation
                f_306_399479_399705(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IPropertySymbol>
                initializedProperties, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertyInitializerOperation(initializedProperties, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 399479, 399705);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 399259, 399717);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 399259, 399717);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitParameterInitializer(IParameterInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 399727, 400177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 399864, 399929);

                var
                internalOperation = (ParameterInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 399943, 400166);

                return f_306_399950_400165(f_306_399984_400011(internalOperation), f_306_400013_400037(internalOperation), f_306_400039_400069(this, f_306_400045_400068(internalOperation)), f_306_400071_400108(internalOperation), f_306_400110_400134(internalOperation), f_306_400136_400164(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 399727, 400177);

                Microsoft.CodeAnalysis.IParameterSymbol
                f_306_399984_400011(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.Parameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 399984, 400011);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_400013_400037(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400013, 400037);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_400045_400068(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400045, 400068);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_400039_400069(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400039, 400069);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_400071_400108(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400071, 400108);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_400110_400134(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400110, 400134);
                    return return_v;
                }


                bool
                f_306_400136_400164(Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400136, 400164);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation
                f_306_399950_400165(Microsoft.CodeAnalysis.IParameterSymbol
                parameter, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ParameterInitializerOperation(parameter, locals, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 399950, 400165);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 399727, 400177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 399727, 400177);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitArrayInitializer(IArrayInitializerOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 400187, 400579);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 400316, 400377);

                var
                internalOperation = (ArrayInitializerOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 400391, 400568);

                return f_306_400398_400567(f_306_400428_400471(this, f_306_400439_400470(internalOperation)), f_306_400473_400510(internalOperation), f_306_400512_400536(internalOperation), f_306_400538_400566(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 400187, 400579);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_400439_400470(Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                this_param)
                {
                    var return_v = this_param.ElementValues;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400439, 400470);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_400428_400471(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400428, 400471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_400473_400510(Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400473, 400510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_400512_400536(Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400512, 400536);
                    return return_v;
                }


                bool
                f_306_400538_400566(Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400538, 400566);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation
                f_306_400398_400567(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                elementValues, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArrayInitializerOperation(elementValues, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400398, 400567);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 400187, 400579);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 400187, 400579);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitVariableDeclarator(IVariableDeclaratorOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 400589, 401056);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 400722, 400785);

                var
                internalOperation = (VariableDeclaratorOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 400799, 401045);

                return f_306_400806_401044(f_306_400838_400862(internalOperation), f_306_400864_400900(this, f_306_400870_400899(internalOperation)), f_306_400902_400948(this, f_306_400913_400947(internalOperation)), f_306_400950_400987(internalOperation), f_306_400989_401013(internalOperation), f_306_401015_401043(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 400589, 401056);

                Microsoft.CodeAnalysis.ILocalSymbol
                f_306_400838_400862(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.Symbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400838, 400862);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                f_306_400870_400899(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400870, 400899);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                f_306_400864_400900(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400864, 400900);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_400913_400947(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.IgnoredArguments;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400913, 400947);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_400902_400948(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400902, 400948);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_400950_400987(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400950, 400987);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_400989_401013(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 400989, 401013);
                    return return_v;
                }


                bool
                f_306_401015_401043(Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401015, 401043);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation
                f_306_400806_401044(Microsoft.CodeAnalysis.ILocalSymbol
                symbol, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                ignoredArguments, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclaratorOperation(symbol, initializer, ignoredArguments, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 400806, 401044);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 400589, 401056);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 400589, 401056);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitVariableDeclaration(IVariableDeclarationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 401066, 401555);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 401201, 401265);

                var
                internalOperation = (VariableDeclarationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 401279, 401544);

                return f_306_401286_401543(f_306_401319_401360(this, f_306_401330_401359(internalOperation)), f_306_401362_401398(this, f_306_401368_401397(internalOperation)), f_306_401400_401447(this, f_306_401411_401446(internalOperation)), f_306_401449_401486(internalOperation), f_306_401488_401512(internalOperation), f_306_401514_401542(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 401066, 401555);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_306_401330_401359(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.Declarators;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401330, 401359);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                f_306_401319_401360(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401319, 401360);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                f_306_401368_401397(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401368, 401397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                f_306_401362_401398(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401362, 401398);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_401411_401446(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.IgnoredDimensions;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401411, 401446);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_401400_401447(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401400, 401447);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_401449_401486(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401449, 401486);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_401488_401512(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401488, 401512);
                    return return_v;
                }


                bool
                f_306_401514_401542(Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401514, 401542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation
                f_306_401286_401543(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation>
                declarators, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation?
                initializer, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                ignoredDimensions, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.VariableDeclarationOperation(declarators, initializer, ignoredDimensions, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401286, 401543);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 401066, 401555);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 401066, 401555);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitArgument(IArgumentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 401565, 402060);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 401678, 401731);

                var
                internalOperation = (ArgumentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 401745, 402049);

                return f_306_401752_402048(f_306_401774_401804(internalOperation), f_306_401806_401833(internalOperation), f_306_401835_401865(this, f_306_401841_401864(internalOperation)), f_306_401867_401908(internalOperation), f_306_401910_401952(internalOperation), f_306_401954_401991(internalOperation), f_306_401993_402017(internalOperation), f_306_402019_402047(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 401565, 402060);

                Microsoft.CodeAnalysis.Operations.ArgumentKind
                f_306_401774_401804(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.ArgumentKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401774, 401804);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IParameterSymbol?
                f_306_401806_401833(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.Parameter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401806, 401833);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_401841_401864(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401841, 401864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_401835_401865(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401835, 401865);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_401867_401908(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.InConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401867, 401908);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                f_306_401910_401952(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.OutConversionConvertible;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401910, 401952);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_401954_401991(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401954, 401991);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_401993_402017(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 401993, 402017);
                    return return_v;
                }


                bool
                f_306_402019_402047(Microsoft.CodeAnalysis.Operations.ArgumentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402019, 402047);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ArgumentOperation
                f_306_401752_402048(Microsoft.CodeAnalysis.Operations.ArgumentKind
                argumentKind, Microsoft.CodeAnalysis.IParameterSymbol?
                parameter, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                inConversion, Microsoft.CodeAnalysis.Operations.IConvertibleConversion
                outConversion, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ArgumentOperation(argumentKind, parameter, value, inConversion, outConversion, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 401752, 402048);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 401565, 402060);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 401565, 402060);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitCatchClause(ICatchClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 402070, 402582);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 402189, 402245);

                var
                internalOperation = (CatchClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 402259, 402571);

                return f_306_402266_402570(f_306_402291_402348(this, f_306_402297_402347(internalOperation)), f_306_402350_402381(internalOperation), f_306_402383_402407(internalOperation), f_306_402409_402440(this, f_306_402415_402439(internalOperation)), f_306_402442_402474(this, f_306_402448_402473(internalOperation)), f_306_402476_402513(internalOperation), f_306_402515_402539(internalOperation), f_306_402541_402569(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 402070, 402582);

                Microsoft.CodeAnalysis.IOperation?
                f_306_402297_402347(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.ExceptionDeclarationOrExpression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402297, 402347);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_402291_402348(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402291, 402348);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_402350_402381(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.ExceptionType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402350, 402381);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_402383_402407(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402383, 402407);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_402415_402439(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.Filter;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402415, 402439);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_402409_402440(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402409, 402440);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation
                f_306_402448_402473(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.Handler;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402448, 402473);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_402442_402474(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402442, 402474);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_402476_402513(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402476, 402513);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_402515_402539(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402515, 402539);
                    return return_v;
                }


                bool
                f_306_402541_402569(Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402541, 402569);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CatchClauseOperation
                f_306_402266_402570(Microsoft.CodeAnalysis.IOperation?
                exceptionDeclarationOrExpression, Microsoft.CodeAnalysis.ITypeSymbol
                exceptionType, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                filter, Microsoft.CodeAnalysis.Operations.IBlockOperation
                handler, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CatchClauseOperation(exceptionDeclarationOrExpression, exceptionType, locals, filter, handler, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402266, 402570);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 402070, 402582);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 402070, 402582);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSwitchCase(ISwitchCaseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 402592, 403052);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 402709, 402764);

                var
                internalOperation = (SwitchCaseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 402778, 403041);

                return f_306_402785_403040(f_306_402809_402846(this, f_306_402820_402845(internalOperation)), f_306_402848_402882(this, f_306_402859_402881(internalOperation)), f_306_402884_402908(internalOperation), f_306_402910_402944(this, f_306_402916_402943(internalOperation)), f_306_402946_402983(internalOperation), f_306_402985_403009(internalOperation), f_306_403011_403039(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 402592, 403052);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                f_306_402820_402845(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.Clauses;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402820, 402845);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                f_306_402809_402846(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402809, 402846);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_402859_402881(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402859, 402881);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_402848_402882(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402848, 402882);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_402884_402908(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402884, 402908);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_402916_402943(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.Condition;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402916, 402943);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_402910_402944(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402910, 402944);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_402946_402983(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402946, 402983);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_402985_403009(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 402985, 403009);
                    return return_v;
                }


                bool
                f_306_403011_403039(Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403011, 403039);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchCaseOperation
                f_306_402785_403040(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ICaseClauseOperation>
                clauses, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                body, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                condition, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchCaseOperation(clauses, body, locals, condition, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 402785, 403040);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 402592, 403052);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 402592, 403052);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDefaultCaseClause(IDefaultCaseClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 403062, 403438);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 403193, 403255);

                var
                internalOperation = (DefaultCaseClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 403269, 403427);

                return f_306_403276_403426(f_306_403307_403330(internalOperation), f_306_403332_403369(internalOperation), f_306_403371_403395(internalOperation), f_306_403397_403425(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 403062, 403438);

                Microsoft.CodeAnalysis.ILabelSymbol?
                f_306_403307_403330(Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403307, 403330);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_403332_403369(Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403332, 403369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_403371_403395(Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403371, 403395);
                    return return_v;
                }


                bool
                f_306_403397_403425(Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403397, 403425);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation
                f_306_403276_403426(Microsoft.CodeAnalysis.ILabelSymbol?
                label, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DefaultCaseClauseOperation(label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 403276, 403426);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 403062, 403438);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 403062, 403438);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitPatternCaseClause(IPatternCaseClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 403448, 403890);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 403579, 403641);

                var
                internalOperation = (PatternCaseClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 403655, 403879);

                return f_306_403662_403878(f_306_403693_403716(internalOperation), f_306_403718_403750(this, f_306_403724_403749(internalOperation)), f_306_403752_403782(this, f_306_403758_403781(internalOperation)), f_306_403784_403821(internalOperation), f_306_403823_403847(internalOperation), f_306_403849_403877(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 403448, 403890);

                Microsoft.CodeAnalysis.ILabelSymbol
                f_306_403693_403716(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403693, 403716);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_403724_403749(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403724, 403749);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_403718_403750(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 403718, 403750);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_403758_403781(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Guard;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403758, 403781);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_403752_403782(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 403752, 403782);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_403784_403821(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403784, 403821);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_403823_403847(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403823, 403847);
                    return return_v;
                }


                bool
                f_306_403849_403877(Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 403849, 403877);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation
                f_306_403662_403878(Microsoft.CodeAnalysis.ILabelSymbol
                label, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.IOperation?
                guard, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PatternCaseClauseOperation(label, pattern, guard, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 403662, 403878);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 403448, 403890);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 403448, 403890);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRangeCaseClause(IRangeCaseClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 403900, 404346);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 404027, 404087);

                var
                internalOperation = (RangeCaseClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 404101, 404335);

                return f_306_404108_404334(f_306_404137_404174(this, f_306_404143_404173(internalOperation)), f_306_404176_404213(this, f_306_404182_404212(internalOperation)), f_306_404215_404238(internalOperation), f_306_404240_404277(internalOperation), f_306_404279_404303(internalOperation), f_306_404305_404333(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 403900, 404346);

                Microsoft.CodeAnalysis.IOperation
                f_306_404143_404173(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.MinimumValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404143, 404173);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_404137_404174(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 404137, 404174);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_404182_404212(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.MaximumValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404182, 404212);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_404176_404213(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 404176, 404213);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_306_404215_404238(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404215, 404238);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_404240_404277(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404240, 404277);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_404279_404303(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404279, 404303);
                    return return_v;
                }


                bool
                f_306_404305_404333(Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404305, 404333);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation
                f_306_404108_404334(Microsoft.CodeAnalysis.IOperation
                minimumValue, Microsoft.CodeAnalysis.IOperation
                maximumValue, Microsoft.CodeAnalysis.ILabelSymbol?
                label, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RangeCaseClauseOperation(minimumValue, maximumValue, label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 404108, 404334);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 403900, 404346);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 403900, 404346);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRelationalCaseClause(IRelationalCaseClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 404356, 404804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 404493, 404558);

                var
                internalOperation = (RelationalCaseClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 404572, 404793);

                return f_306_404579_404792(f_306_404613_404643(this, f_306_404619_404642(internalOperation)), f_306_404645_404671(internalOperation), f_306_404673_404696(internalOperation), f_306_404698_404735(internalOperation), f_306_404737_404761(internalOperation), f_306_404763_404791(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 404356, 404804);

                Microsoft.CodeAnalysis.IOperation
                f_306_404619_404642(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404619, 404642);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_404613_404643(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 404613, 404643);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_404645_404671(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Relation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404645, 404671);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_306_404673_404696(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404673, 404696);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_404698_404735(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404698, 404735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_404737_404761(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404737, 404761);
                    return return_v;
                }


                bool
                f_306_404763_404791(Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 404763, 404791);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation
                f_306_404579_404792(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                relation, Microsoft.CodeAnalysis.ILabelSymbol?
                label, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RelationalCaseClauseOperation(value, relation, label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 404579, 404792);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 404356, 404804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 404356, 404804);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSingleValueCaseClause(ISingleValueCaseClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 404814, 405238);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 404953, 405019);

                var
                internalOperation = (SingleValueCaseClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 405033, 405227);

                return f_306_405040_405226(f_306_405075_405105(this, f_306_405081_405104(internalOperation)), f_306_405107_405130(internalOperation), f_306_405132_405169(internalOperation), f_306_405171_405195(internalOperation), f_306_405197_405225(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 404814, 405238);

                Microsoft.CodeAnalysis.IOperation
                f_306_405081_405104(Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405081, 405104);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405075_405105(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405075, 405105);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ILabelSymbol?
                f_306_405107_405130(Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Label;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405107, 405130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_405132_405169(Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405132, 405169);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_405171_405195(Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405171, 405195);
                    return return_v;
                }


                bool
                f_306_405197_405225(Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405197, 405225);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation
                f_306_405040_405226(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ILabelSymbol?
                label, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SingleValueCaseClauseOperation(value, label, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405040, 405226);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 404814, 405238);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 404814, 405238);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitInterpolatedStringText(IInterpolatedStringTextOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 405248, 405650);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 405389, 405456);

                var
                internalOperation = (InterpolatedStringTextOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 405470, 405639);

                return f_306_405477_405638(f_306_405513_405542(this, f_306_405519_405541(internalOperation)), f_306_405544_405581(internalOperation), f_306_405583_405607(internalOperation), f_306_405609_405637(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 405248, 405650);

                Microsoft.CodeAnalysis.IOperation
                f_306_405519_405541(Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                this_param)
                {
                    var return_v = this_param.Text;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405519, 405541);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405513_405542(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405513, 405542);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_405544_405581(Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405544, 405581);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_405583_405607(Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405583, 405607);
                    return return_v;
                }


                bool
                f_306_405609_405637(Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405609, 405637);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation
                f_306_405477_405638(Microsoft.CodeAnalysis.IOperation
                text, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolatedStringTextOperation(text, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405477, 405638);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 405248, 405650);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 405248, 405650);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitInterpolation(IInterpolationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 405660, 406107);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 405783, 405841);

                var
                internalOperation = (InterpolationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 405855, 406096);

                return f_306_405862_406095(f_306_405889_405924(this, f_306_405895_405923(internalOperation)), f_306_405926_405960(this, f_306_405932_405959(internalOperation)), f_306_405962_405999(this, f_306_405968_405998(internalOperation)), f_306_406001_406038(internalOperation), f_306_406040_406064(internalOperation), f_306_406066_406094(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 405660, 406107);

                Microsoft.CodeAnalysis.IOperation
                f_306_405895_405923(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.Expression;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405895, 405923);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405889_405924(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405889, 405924);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405932_405959(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.Alignment;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405932, 405959);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405926_405960(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405926, 405960);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405968_405998(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.FormatString;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 405968, 405998);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_405962_405999(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405962, 405999);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_406001_406038(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406001, 406038);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_406040_406064(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406040, 406064);
                    return return_v;
                }


                bool
                f_306_406066_406094(Microsoft.CodeAnalysis.Operations.InterpolationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406066, 406094);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.InterpolationOperation
                f_306_405862_406095(Microsoft.CodeAnalysis.IOperation
                expression, Microsoft.CodeAnalysis.IOperation?
                alignment, Microsoft.CodeAnalysis.IOperation?
                formatString, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.InterpolationOperation(expression, alignment, formatString, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 405862, 406095);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 405660, 406107);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 405660, 406107);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConstantPattern(IConstantPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 406117, 406553);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 406244, 406304);

                var
                internalOperation = (ConstantPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 406318, 406542);

                return f_306_406325_406541(f_306_406354_406384(this, f_306_406360_406383(internalOperation)), f_306_406386_406413(internalOperation), f_306_406415_406445(internalOperation), f_306_406447_406484(internalOperation), f_306_406486_406510(internalOperation), f_306_406512_406540(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 406117, 406553);

                Microsoft.CodeAnalysis.IOperation
                f_306_406360_406383(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406360, 406383);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_406354_406384(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 406354, 406384);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_406386_406413(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406386, 406413);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_406415_406445(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406415, 406445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_406447_406484(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406447, 406484);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_406486_406510(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406486, 406510);
                    return return_v;
                }


                bool
                f_306_406512_406540(Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406512, 406540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConstantPatternOperation
                f_306_406325_406541(Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConstantPatternOperation(value, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 406325, 406541);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 406117, 406553);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 406117, 406553);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDeclarationPattern(IDeclarationPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 406563, 407075);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 406696, 406759);

                var
                internalOperation = (DeclarationPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 406773, 407064);

                return f_306_406780_407063(f_306_406812_406841(internalOperation), f_306_406843_406872(internalOperation), f_306_406874_406906(internalOperation), f_306_406908_406935(internalOperation), f_306_406937_406967(internalOperation), f_306_406969_407006(internalOperation), f_306_407008_407032(internalOperation), f_306_407034_407062(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 406563, 407075);

                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_406812_406841(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.MatchedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406812, 406841);
                    return return_v;
                }


                bool
                f_306_406843_406872(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.MatchesNull;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406843, 406872);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_306_406874_406906(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.DeclaredSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406874, 406906);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_406908_406935(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406908, 406935);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_406937_406967(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406937, 406967);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_406969_407006(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 406969, 407006);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_407008_407032(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407008, 407032);
                    return return_v;
                }


                bool
                f_306_407034_407062(Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407034, 407062);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation
                f_306_406780_407063(Microsoft.CodeAnalysis.ITypeSymbol?
                matchedType, bool
                matchesNull, Microsoft.CodeAnalysis.ISymbol?
                declaredSymbol, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DeclarationPatternOperation(matchedType, matchesNull, declaredSymbol, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 406780, 407063);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 406563, 407075);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 406563, 407075);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTupleBinaryOperator(ITupleBinaryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 407085, 407553);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 407212, 407268);

                var
                internalOperation = (TupleBinaryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 407282, 407542);

                return f_306_407289_407541(f_306_407314_407344(internalOperation), f_306_407346_407382(this, f_306_407352_407381(internalOperation)), f_306_407384_407421(this, f_306_407390_407420(internalOperation)), f_306_407423_407460(internalOperation), f_306_407462_407486(internalOperation), f_306_407488_407510(internalOperation), f_306_407512_407540(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 407085, 407553);

                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_407314_407344(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407314, 407344);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_407352_407381(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407352, 407381);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_407346_407382(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407346, 407382);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_407390_407420(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407390, 407420);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_407384_407421(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407384, 407421);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_407423_407460(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407423, 407460);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_407462_407486(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407462, 407486);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_407488_407510(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407488, 407510);
                    return return_v;
                }


                bool
                f_306_407512_407540(Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407512, 407540);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TupleBinaryOperation
                f_306_407289_407541(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                leftOperand, Microsoft.CodeAnalysis.IOperation
                rightOperand, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TupleBinaryOperation(operatorKind, leftOperand, rightOperand, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407289, 407541);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 407085, 407553);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 407085, 407553);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitMethodBodyOperation(IMethodBodyOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 407563, 407972);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 407689, 407744);

                var
                internalOperation = (MethodBodyOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 407758, 407961);

                return f_306_407765_407960(f_306_407789_407823(this, f_306_407795_407822(internalOperation)), f_306_407825_407864(this, f_306_407831_407863(internalOperation)), f_306_407866_407903(internalOperation), f_306_407905_407929(internalOperation), f_306_407931_407959(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 407563, 407972);

                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_407795_407822(Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                this_param)
                {
                    var return_v = this_param.BlockBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407795, 407822);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_407789_407823(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407789, 407823);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_407831_407863(Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                this_param)
                {
                    var return_v = this_param.ExpressionBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407831, 407863);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_407825_407864(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407825, 407864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_407866_407903(Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407866, 407903);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_407905_407929(Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407905, 407929);
                    return return_v;
                }


                bool
                f_306_407931_407959(Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 407931, 407959);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.MethodBodyOperation
                f_306_407765_407960(Microsoft.CodeAnalysis.Operations.IBlockOperation?
                blockBody, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                expressionBody, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.MethodBodyOperation(blockBody, expressionBody, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 407765, 407960);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 407563, 407972);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 407563, 407972);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitConstructorBodyOperation(IConstructorBodyOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 407982, 408475);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 408118, 408178);

                var
                internalOperation = (ConstructorBodyOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 408192, 408464);

                return f_306_408199_408463(f_306_408228_408252(internalOperation), f_306_408254_408290(this, f_306_408260_408289(internalOperation)), f_306_408292_408326(this, f_306_408298_408325(internalOperation)), f_306_408328_408367(this, f_306_408334_408366(internalOperation)), f_306_408369_408406(internalOperation), f_306_408408_408432(internalOperation), f_306_408434_408462(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 407982, 408475);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_408228_408252(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408228, 408252);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_408260_408289(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408260, 408289);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_408254_408290(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 408254, 408290);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_408298_408325(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.BlockBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408298, 408325);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_408292_408326(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 408292, 408326);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_408334_408366(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.ExpressionBody;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408334, 408366);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IBlockOperation?
                f_306_408328_408367(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IBlockOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 408328, 408367);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_408369_408406(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408369, 408406);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_408408_408432(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408408, 408432);
                    return return_v;
                }


                bool
                f_306_408434_408462(Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408434, 408462);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation
                f_306_408199_408463(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.IOperation?
                initializer, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                blockBody, Microsoft.CodeAnalysis.Operations.IBlockOperation?
                expressionBody, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ConstructorBodyOperation(locals, initializer, blockBody, expressionBody, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 408199, 408463);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 407982, 408475);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 407982, 408475);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDiscardOperation(IDiscardOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 408485, 408862);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 408605, 408657);

                var
                internalOperation = (DiscardOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 408671, 408851);

                return f_306_408678_408850(f_306_408699_408730(internalOperation), f_306_408732_408769(internalOperation), f_306_408771_408795(internalOperation), f_306_408797_408819(internalOperation), f_306_408821_408849(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 408485, 408862);

                Microsoft.CodeAnalysis.IDiscardSymbol
                f_306_408699_408730(Microsoft.CodeAnalysis.Operations.DiscardOperation
                this_param)
                {
                    var return_v = this_param.DiscardSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408699, 408730);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_408732_408769(Microsoft.CodeAnalysis.Operations.DiscardOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408732, 408769);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_408771_408795(Microsoft.CodeAnalysis.Operations.DiscardOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408771, 408795);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_408797_408819(Microsoft.CodeAnalysis.Operations.DiscardOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408797, 408819);
                    return return_v;
                }


                bool
                f_306_408821_408849(Microsoft.CodeAnalysis.Operations.DiscardOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 408821, 408849);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DiscardOperation
                f_306_408678_408850(Microsoft.CodeAnalysis.IDiscardSymbol
                discardSymbol, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DiscardOperation(discardSymbol, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 408678, 408850);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 408485, 408862);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 408485, 408862);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitFlowCaptureReference(IFlowCaptureReferenceOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 408872, 409323);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409009, 409074);

                var
                internalOperation = (FlowCaptureReferenceOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409088, 409312);

                return f_306_409095_409311(f_306_409129_409149(internalOperation), f_306_409151_409188(internalOperation), f_306_409190_409214(internalOperation), f_306_409216_409238(internalOperation), f_306_409240_409280(internalOperation), f_306_409282_409310(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 408872, 409323);

                Microsoft.CodeAnalysis.FlowAnalysis.CaptureId
                f_306_409129_409149(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.Id;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409129, 409149);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_409151_409188(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409151, 409188);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_409190_409214(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409190, 409214);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_409216_409238(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409216, 409238);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ConstantValue?
                f_306_409240_409280(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.OperationConstantValue;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409240, 409280);
                    return return_v;
                }


                bool
                f_306_409282_409310(Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409282, 409310);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation
                f_306_409095_409311(Microsoft.CodeAnalysis.FlowAnalysis.CaptureId
                id, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, Microsoft.CodeAnalysis.ConstantValue?
                constantValue, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FlowCaptureReferenceOperation(id, semanticModel, syntax, type, constantValue, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409095, 409311);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 408872, 409323);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 408872, 409323);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitCoalesceAssignment(ICoalesceAssignmentOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 409333, 409777);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409466, 409529);

                var
                internalOperation = (CoalesceAssignmentOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409543, 409766);

                return f_306_409550_409765(f_306_409582_409613(this, f_306_409588_409612(internalOperation)), f_306_409615_409645(this, f_306_409621_409644(internalOperation)), f_306_409647_409684(internalOperation), f_306_409686_409710(internalOperation), f_306_409712_409734(internalOperation), f_306_409736_409764(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 409333, 409777);

                Microsoft.CodeAnalysis.IOperation
                f_306_409588_409612(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Target;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409588, 409612);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_409582_409613(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409582, 409613);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_409621_409644(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409621, 409644);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_409615_409645(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409615, 409645);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_409647_409684(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409647, 409684);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_409686_409710(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409686, 409710);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_409712_409734(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409712, 409734);
                    return return_v;
                }


                bool
                f_306_409736_409764(Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409736, 409764);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation
                f_306_409550_409765(Microsoft.CodeAnalysis.IOperation
                target, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.CoalesceAssignmentOperation(target, value, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409550, 409765);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 409333, 409777);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 409333, 409777);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRangeOperation(IRangeOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 409787, 410254);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409903, 409953);

                var
                internalOperation = (RangeOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 409967, 410243);

                return f_306_409974_410242(f_306_409993_410029(this, f_306_409999_410028(internalOperation)), f_306_410031_410068(this, f_306_410037_410067(internalOperation)), f_306_410070_410096(internalOperation), f_306_410098_410122(internalOperation), f_306_410124_410161(internalOperation), f_306_410163_410187(internalOperation), f_306_410189_410211(internalOperation), f_306_410213_410241(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 409787, 410254);

                Microsoft.CodeAnalysis.IOperation?
                f_306_409999_410028(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.LeftOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 409999, 410028);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_409993_410029(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409993, 410029);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_410037_410067(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.RightOperand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410037, 410067);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_410031_410068(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410031, 410068);
                    return return_v;
                }


                bool
                f_306_410070_410096(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.IsLifted;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410070, 410096);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_410098_410122(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.Method;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410098, 410122);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_410124_410161(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410124, 410161);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_410163_410187(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410163, 410187);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_410189_410211(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410189, 410211);
                    return return_v;
                }


                bool
                f_306_410213_410241(Microsoft.CodeAnalysis.Operations.RangeOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410213, 410241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RangeOperation
                f_306_409974_410242(Microsoft.CodeAnalysis.IOperation?
                leftOperand, Microsoft.CodeAnalysis.IOperation?
                rightOperand, bool
                isLifted, Microsoft.CodeAnalysis.IMethodSymbol?
                method, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RangeOperation(leftOperand, rightOperand, isLifted, method, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 409974, 410242);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 409787, 410254);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 409787, 410254);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitReDim(IReDimOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 410264, 410634);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 410371, 410421);

                var
                internalOperation = (ReDimOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 410435, 410623);

                return f_306_410442_410622(f_306_410461_410498(this, f_306_410472_410497(internalOperation)), f_306_410500_410526(internalOperation), f_306_410528_410565(internalOperation), f_306_410567_410591(internalOperation), f_306_410593_410621(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 410264, 410634);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
                f_306_410472_410497(Microsoft.CodeAnalysis.Operations.ReDimOperation
                this_param)
                {
                    var return_v = this_param.Clauses;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410472, 410497);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
                f_306_410461_410498(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410461, 410498);
                    return return_v;
                }


                bool
                f_306_410500_410526(Microsoft.CodeAnalysis.Operations.ReDimOperation
                this_param)
                {
                    var return_v = this_param.Preserve;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410500, 410526);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_410528_410565(Microsoft.CodeAnalysis.Operations.ReDimOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410528, 410565);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_410567_410591(Microsoft.CodeAnalysis.Operations.ReDimOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410567, 410591);
                    return return_v;
                }


                bool
                f_306_410593_410621(Microsoft.CodeAnalysis.Operations.ReDimOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410593, 410621);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReDimOperation
                f_306_410442_410622(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IReDimClauseOperation>
                clauses, bool
                preserve, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReDimOperation(clauses, preserve, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410442, 410622);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 410264, 410634);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 410264, 410634);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitReDimClause(IReDimClauseOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 410644, 411051);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 410763, 410819);

                var
                internalOperation = (ReDimClauseOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 410833, 411040);

                return f_306_410840_411039(f_306_410865_410897(this, f_306_410871_410896(internalOperation)), f_306_410899_410943(this, f_306_410910_410942(internalOperation)), f_306_410945_410982(internalOperation), f_306_410984_411008(internalOperation), f_306_411010_411038(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 410644, 411051);

                Microsoft.CodeAnalysis.IOperation
                f_306_410871_410896(Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410871, 410896);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_410865_410897(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410865, 410897);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_410910_410942(Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                this_param)
                {
                    var return_v = this_param.DimensionSizes;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410910, 410942);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                f_306_410899_410943(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.IOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410899, 410943);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_410945_410982(Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410945, 410982);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_410984_411008(Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 410984, 411008);
                    return return_v;
                }


                bool
                f_306_411010_411038(Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411010, 411038);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.ReDimClauseOperation
                f_306_410840_411039(Microsoft.CodeAnalysis.IOperation
                operand, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.IOperation>
                dimensionSizes, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.ReDimClauseOperation(operand, dimensionSizes, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 410840, 411039);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 410644, 411051);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 410644, 411051);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRecursivePattern(IRecursivePatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 411061, 411679);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 411190, 411251);

                var
                internalOperation = (RecursivePatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 411265, 411668);

                return f_306_411272_411667(f_306_411302_411331(internalOperation), f_306_411333_411368(internalOperation), f_306_411370_411425(this, f_306_411381_411424(internalOperation)), f_306_411427_411476(this, f_306_411438_411475(internalOperation)), f_306_411478_411510(internalOperation), f_306_411512_411539(internalOperation), f_306_411541_411571(internalOperation), f_306_411573_411610(internalOperation), f_306_411612_411636(internalOperation), f_306_411638_411666(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 411061, 411679);

                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_411302_411331(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.MatchedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411302, 411331);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_306_411333_411368(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.DeconstructSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411333, 411368);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                f_306_411381_411424(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.DeconstructionSubpatterns;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411381, 411424);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                f_306_411370_411425(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 411370, 411425);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                f_306_411438_411475(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.PropertySubpatterns;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411438, 411475);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                f_306_411427_411476(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 411427, 411476);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ISymbol?
                f_306_411478_411510(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.DeclaredSymbol;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411478, 411510);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_411512_411539(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411512, 411539);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_411541_411571(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411541, 411571);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_411573_411610(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411573, 411610);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_411612_411636(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411612, 411636);
                    return return_v;
                }


                bool
                f_306_411638_411666(Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411638, 411666);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RecursivePatternOperation
                f_306_411272_411667(Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.ISymbol?
                deconstructSymbol, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPatternOperation>
                deconstructionSubpatterns, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation>
                propertySubpatterns, Microsoft.CodeAnalysis.ISymbol?
                declaredSymbol, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RecursivePatternOperation(matchedType, deconstructSymbol, deconstructionSubpatterns, propertySubpatterns, declaredSymbol, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 411272, 411667);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 411061, 411679);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 411061, 411679);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitDiscardPattern(IDiscardPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 411689, 412089);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 411814, 411873);

                var
                internalOperation = (DiscardPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 411887, 412078);

                return f_306_411894_412077(f_306_411922_411949(internalOperation), f_306_411951_411981(internalOperation), f_306_411983_412020(internalOperation), f_306_412022_412046(internalOperation), f_306_412048_412076(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 411689, 412089);

                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_411922_411949(Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411922, 411949);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_411951_411981(Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411951, 411981);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_411983_412020(Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 411983, 412020);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_412022_412046(Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412022, 412046);
                    return return_v;
                }


                bool
                f_306_412048_412076(Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412048, 412076);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DiscardPatternOperation
                f_306_411894_412077(Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.DiscardPatternOperation(inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 411894, 412077);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 411689, 412089);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 411689, 412089);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSwitchExpression(ISwitchExpressionOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 412099, 412538);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 412228, 412289);

                var
                internalOperation = (SwitchExpressionOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 412303, 412527);

                return f_306_412310_412526(f_306_412340_412370(this, f_306_412346_412369(internalOperation)), f_306_412372_412406(this, f_306_412383_412405(internalOperation)), f_306_412408_412445(internalOperation), f_306_412447_412471(internalOperation), f_306_412473_412495(internalOperation), f_306_412497_412525(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 412099, 412538);

                Microsoft.CodeAnalysis.IOperation
                f_306_412346_412369(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412346, 412369);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_412340_412370(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412340, 412370);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                f_306_412383_412405(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.Arms;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412383, 412405);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                f_306_412372_412406(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                nodes)
                {
                    var return_v = this_param.VisitArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>(nodes);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412372, 412406);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_412408_412445(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412408, 412445);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_412447_412471(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412447, 412471);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_412473_412495(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412473, 412495);
                    return return_v;
                }


                bool
                f_306_412497_412525(Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412497, 412525);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation
                f_306_412310_412526(Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation>
                arms, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchExpressionOperation(value, arms, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412310, 412526);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 412099, 412538);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 412099, 412538);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitSwitchExpressionArm(ISwitchExpressionArmOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 412548, 413031);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 412683, 412747);

                var
                internalOperation = (SwitchExpressionArmOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 412761, 413020);

                return f_306_412768_413019(f_306_412801_412833(this, f_306_412807_412832(internalOperation)), f_306_412835_412865(this, f_306_412841_412864(internalOperation)), f_306_412867_412897(this, f_306_412873_412896(internalOperation)), f_306_412899_412923(internalOperation), f_306_412925_412962(internalOperation), f_306_412964_412988(internalOperation), f_306_412990_413018(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 412548, 413031);

                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_412807_412832(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412807, 412832);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_412801_412833(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412801, 412833);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_412841_412864(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.Guard;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412841, 412864);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_412835_412865(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation?
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412835, 412865);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_412873_412896(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412873, 412896);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_412867_412897(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412867, 412897);
                    return return_v;
                }


                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_412899_412923(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412899, 412923);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_412925_412962(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412925, 412962);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_412964_412988(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412964, 412988);
                    return return_v;
                }


                bool
                f_306_412990_413018(Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 412990, 413018);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation
                f_306_412768_413019(Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.IOperation?
                guard, Microsoft.CodeAnalysis.IOperation
                value, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.SwitchExpressionArmOperation(pattern, guard, value, locals, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 412768, 413019);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 412548, 413031);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 412548, 413031);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitPropertySubpattern(IPropertySubpatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 413041, 413463);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 413174, 413237);

                var
                internalOperation = (PropertySubpatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 413251, 413452);

                return f_306_413258_413451(f_306_413290_413321(this, f_306_413296_413320(internalOperation)), f_306_413323_413355(this, f_306_413329_413354(internalOperation)), f_306_413357_413394(internalOperation), f_306_413396_413420(internalOperation), f_306_413422_413450(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 413041, 413463);

                Microsoft.CodeAnalysis.IOperation
                f_306_413296_413320(Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                this_param)
                {
                    var return_v = this_param.Member;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413296, 413320);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_413290_413321(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413290, 413321);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_413329_413354(Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413329, 413354);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_413323_413355(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413323, 413355);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_413357_413394(Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413357, 413394);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_413396_413420(Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413396, 413420);
                    return return_v;
                }


                bool
                f_306_413422_413450(Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413422, 413450);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation
                f_306_413258_413451(Microsoft.CodeAnalysis.IOperation
                member, Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PropertySubpatternOperation(member, pattern, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413258, 413451);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 413041, 413463);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 413041, 413463);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IOperation VisitAggregateQuery(IAggregateQueryOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 413473, 413908);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 413600, 413659);

                var
                internalOperation = (AggregateQueryOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 413673, 413897);

                return f_306_413680_413896(f_306_413708_413738(this, f_306_413714_413737(internalOperation)), f_306_413740_413776(this, f_306_413746_413775(internalOperation)), f_306_413778_413815(internalOperation), f_306_413817_413841(internalOperation), f_306_413843_413865(internalOperation), f_306_413867_413895(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 413473, 413908);

                Microsoft.CodeAnalysis.IOperation
                f_306_413714_413737(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.Group;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413714, 413737);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_413708_413738(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413708, 413738);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_413746_413775(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.Aggregation;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413746, 413775);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_413740_413776(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413740, 413776);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_413778_413815(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413778, 413815);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_413817_413841(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413817, 413841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_413843_413865(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413843, 413865);
                    return return_v;
                }


                bool
                f_306_413867_413895(Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 413867, 413895);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.AggregateQueryOperation
                f_306_413680_413896(Microsoft.CodeAnalysis.IOperation
                group, Microsoft.CodeAnalysis.IOperation
                aggregation, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.AggregateQueryOperation(group, aggregation, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 413680, 413896);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 413473, 413908);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 413473, 413908);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IOperation VisitFixed(IFixedOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 413918, 414316);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414027, 414077);

                var
                internalOperation = (FixedOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414091, 414305);

                return f_306_414098_414304(f_306_414117_414141(internalOperation), f_306_414143_414177(this, f_306_414149_414176(internalOperation)), f_306_414179_414208(this, f_306_414185_414207(internalOperation)), f_306_414210_414247(internalOperation), f_306_414249_414273(internalOperation), f_306_414275_414303(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 413918, 414316);

                System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                f_306_414117_414141(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.Locals;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414117, 414141);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                f_306_414149_414176(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.Variables;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414149, 414176);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation?
                f_306_414143_414177(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414143, 414177);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_414185_414207(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414185, 414207);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_414179_414208(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414179, 414208);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_414210_414247(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414210, 414247);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_414249_414273(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414249, 414273);
                    return return_v;
                }


                bool
                f_306_414275_414303(Microsoft.CodeAnalysis.Operations.FixedOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414275, 414303);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.FixedOperation
                f_306_414098_414304(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ILocalSymbol>
                locals, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                variables, Microsoft.CodeAnalysis.IOperation
                body, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.FixedOperation(locals, variables, body, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414098, 414304);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 413918, 414316);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 413918, 414316);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IOperation VisitNoPiaObjectCreation(INoPiaObjectCreationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 414326, 414749);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414463, 414527);

                var
                internalOperation = (NoPiaObjectCreationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414541, 414738);

                return f_306_414548_414737(f_306_414581_414617(this, f_306_414587_414616(internalOperation)), f_306_414619_414656(internalOperation), f_306_414658_414682(internalOperation), f_306_414684_414706(internalOperation), f_306_414708_414736(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 414326, 414749);

                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_414587_414616(Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414587, 414616);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_414581_414617(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414581, 414617);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_414619_414656(Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414619, 414656);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_414658_414682(Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414658, 414682);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_414684_414706(Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414684, 414706);
                    return return_v;
                }


                bool
                f_306_414708_414736(Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414708, 414736);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation
                f_306_414548_414737(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                initializer, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NoPiaObjectCreationOperation(initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414548, 414737);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 414326, 414749);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 414326, 414749);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IOperation VisitPlaceholder(IPlaceholderOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 414759, 415147);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414880, 414936);

                var
                internalOperation = (PlaceholderOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 414950, 415136);

                return f_306_414957_415135(f_306_414982_415015(internalOperation), f_306_415017_415054(internalOperation), f_306_415056_415080(internalOperation), f_306_415082_415104(internalOperation), f_306_415106_415134(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 414759, 415147);

                Microsoft.CodeAnalysis.Operations.PlaceholderKind
                f_306_414982_415015(Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                this_param)
                {
                    var return_v = this_param.PlaceholderKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 414982, 415015);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_415017_415054(Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415017, 415054);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_415056_415080(Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415056, 415080);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_415082_415104(Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415082, 415104);
                    return return_v;
                }


                bool
                f_306_415106_415134(Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415106, 415134);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.PlaceholderOperation
                f_306_414957_415135(Microsoft.CodeAnalysis.Operations.PlaceholderKind
                placeholderKind, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.PlaceholderOperation(placeholderKind, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 414957, 415135);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 414759, 415147);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 414759, 415147);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal override IOperation VisitWithStatement(IWithStatementOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 415157, 415557);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 415282, 415340);

                var
                internalOperation = (WithStatementOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 415354, 415546);

                return f_306_415361_415545(f_306_415388_415417(this, f_306_415394_415416(internalOperation)), f_306_415419_415449(this, f_306_415425_415448(internalOperation)), f_306_415451_415488(internalOperation), f_306_415490_415514(internalOperation), f_306_415516_415544(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 415157, 415557);

                Microsoft.CodeAnalysis.IOperation
                f_306_415394_415416(Microsoft.CodeAnalysis.Operations.WithStatementOperation
                this_param)
                {
                    var return_v = this_param.Body;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415394, 415416);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_415388_415417(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 415388, 415417);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_415425_415448(Microsoft.CodeAnalysis.Operations.WithStatementOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415425, 415448);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_415419_415449(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 415419, 415449);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_415451_415488(Microsoft.CodeAnalysis.Operations.WithStatementOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415451, 415488);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_415490_415514(Microsoft.CodeAnalysis.Operations.WithStatementOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415490, 415514);
                    return return_v;
                }


                bool
                f_306_415516_415544(Microsoft.CodeAnalysis.Operations.WithStatementOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415516, 415544);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WithStatementOperation
                f_306_415361_415545(Microsoft.CodeAnalysis.IOperation
                body, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WithStatementOperation(body, value, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 415361, 415545);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 415157, 415557);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 415157, 415557);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitUsingDeclaration(IUsingDeclarationOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 415567, 416022);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 415696, 415757);

                var
                internalOperation = (UsingDeclarationOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 415771, 416011);

                return f_306_415778_416010(f_306_415808_415849(this, f_306_415814_415848(internalOperation)), f_306_415851_415883(internalOperation), f_306_415885_415914(internalOperation), f_306_415916_415953(internalOperation), f_306_415955_415979(internalOperation), f_306_415981_416009(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 415567, 416022);

                Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                f_306_415814_415848(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.DeclarationGroup;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415814, 415848);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation?
                f_306_415808_415849(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 415808, 415849);
                    return return_v;
                }


                bool
                f_306_415851_415883(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.IsAsynchronous;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415851, 415883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                f_306_415885_415914(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.DisposeInfo;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415885, 415914);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_415916_415953(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415916, 415953);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_415955_415979(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415955, 415979);
                    return return_v;
                }


                bool
                f_306_415981_416009(Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 415981, 416009);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation
                f_306_415778_416010(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
                declarationGroup, bool
                isAsynchronous, Microsoft.CodeAnalysis.Operations.DisposeOperationInfo
                disposeInfo, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.UsingDeclarationOperation(declarationGroup, isAsynchronous, disposeInfo, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 415778, 416010);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 415567, 416022);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 415567, 416022);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitNegatedPattern(INegatedPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 416032, 416466);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 416157, 416216);

                var
                internalOperation = (NegatedPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 416230, 416455);

                return f_306_416237_416454(f_306_416265_416297(this, f_306_416271_416296(internalOperation)), f_306_416299_416326(internalOperation), f_306_416328_416358(internalOperation), f_306_416360_416397(internalOperation), f_306_416399_416423(internalOperation), f_306_416425_416453(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 416032, 416466);

                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_416271_416296(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.Pattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416271, 416296);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_416265_416297(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 416265, 416297);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_416299_416326(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416299, 416326);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_416328_416358(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416328, 416358);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_416360_416397(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416360, 416397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_416399_416423(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416399, 416423);
                    return return_v;
                }


                bool
                f_306_416425_416453(Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416425, 416453);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.NegatedPatternOperation
                f_306_416237_416454(Microsoft.CodeAnalysis.Operations.IPatternOperation
                pattern, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.NegatedPatternOperation(pattern, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 416237, 416454);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 416032, 416466);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 416032, 416466);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitBinaryPattern(IBinaryPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 416476, 416981);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 416599, 416657);

                var
                internalOperation = (BinaryPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 416671, 416970);

                return f_306_416678_416969(f_306_416705_416735(internalOperation), f_306_416737_416773(this, f_306_416743_416772(internalOperation)), f_306_416775_416812(this, f_306_416781_416811(internalOperation)), f_306_416814_416841(internalOperation), f_306_416843_416873(internalOperation), f_306_416875_416912(internalOperation), f_306_416914_416938(internalOperation), f_306_416940_416968(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 416476, 416981);

                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_416705_416735(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416705, 416735);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_416743_416772(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.LeftPattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416743, 416772);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_416737_416773(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 416737, 416773);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation
                f_306_416781_416811(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.RightPattern;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416781, 416811);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IPatternOperation?
                f_306_416775_416812(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IPatternOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IPatternOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 416775, 416812);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_416814_416841(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416814, 416841);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_416843_416873(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416843, 416873);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_416875_416912(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416875, 416912);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_416914_416938(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416914, 416938);
                    return return_v;
                }


                bool
                f_306_416940_416968(Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 416940, 416968);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.BinaryPatternOperation
                f_306_416678_416969(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.Operations.IPatternOperation
                leftPattern, Microsoft.CodeAnalysis.Operations.IPatternOperation
                rightPattern, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.BinaryPatternOperation(operatorKind, leftPattern, rightPattern, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 416678, 416969);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 416476, 416981);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 416476, 416981);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitTypePattern(ITypePatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 416991, 417410);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 417110, 417166);

                var
                internalOperation = (TypePatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 417180, 417399);

                return f_306_417187_417398(f_306_417212_417241(internalOperation), f_306_417243_417270(internalOperation), f_306_417272_417302(internalOperation), f_306_417304_417341(internalOperation), f_306_417343_417367(internalOperation), f_306_417369_417397(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 416991, 417410);

                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_417212_417241(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.MatchedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417212, 417241);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_417243_417270(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417243, 417270);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_417272_417302(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417272, 417302);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_417304_417341(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417304, 417341);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_417343_417367(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417343, 417367);
                    return return_v;
                }


                bool
                f_306_417369_417397(Microsoft.CodeAnalysis.Operations.TypePatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417369, 417397);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.TypePatternOperation
                f_306_417187_417398(Microsoft.CodeAnalysis.ITypeSymbol
                matchedType, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.TypePatternOperation(matchedType, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 417187, 417398);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 416991, 417410);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 416991, 417410);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitRelationalPattern(IRelationalPatternOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 417420, 417896);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 417551, 417613);

                var
                internalOperation = (RelationalPatternOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 417627, 417885);

                return f_306_417634_417884(f_306_417665_417695(internalOperation), f_306_417697_417727(this, f_306_417703_417726(internalOperation)), f_306_417729_417756(internalOperation), f_306_417758_417788(internalOperation), f_306_417790_417827(internalOperation), f_306_417829_417853(internalOperation), f_306_417855_417883(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 417420, 417896);

                Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                f_306_417665_417695(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.OperatorKind;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417665, 417695);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation
                f_306_417703_417726(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.Value;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417703, 417726);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_417697_417727(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 417697, 417727);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_417729_417756(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.InputType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417729, 417756);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol
                f_306_417758_417788(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.NarrowedType;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417758, 417788);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_417790_417827(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417790, 417827);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_417829_417853(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417829, 417853);
                    return return_v;
                }


                bool
                f_306_417855_417883(Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 417855, 417883);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.RelationalPatternOperation
                f_306_417634_417884(Microsoft.CodeAnalysis.Operations.BinaryOperatorKind
                operatorKind, Microsoft.CodeAnalysis.IOperation
                value, Microsoft.CodeAnalysis.ITypeSymbol
                inputType, Microsoft.CodeAnalysis.ITypeSymbol
                narrowedType, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.RelationalPatternOperation(operatorKind, value, inputType, narrowedType, semanticModel, syntax, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 417634, 417884);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 417420, 417896);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 417420, 417896);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        public override IOperation VisitWith(IWithOperation operation, object? argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 417906, 418332);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418011, 418060);

                var
                internalOperation = (WithOperation)operation
                ;
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418074, 418321);

                return f_306_418081_418320(f_306_418099_418131(this, f_306_418105_418130(internalOperation)), f_306_418133_418162(internalOperation), f_306_418164_418200(this, f_306_418170_418199(internalOperation)), f_306_418202_418239(internalOperation), f_306_418241_418265(internalOperation), f_306_418267_418289(internalOperation), f_306_418291_418319(internalOperation));
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 417906, 418332);

                Microsoft.CodeAnalysis.IOperation
                f_306_418105_418130(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.Operand;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418105, 418130);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IOperation?
                f_306_418099_418131(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.IOperation
                operation)
                {
                    var return_v = this_param.Visit(operation);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418099, 418131);
                    return return_v;
                }


                Microsoft.CodeAnalysis.IMethodSymbol?
                f_306_418133_418162(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.CloneMethod;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418133, 418162);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                f_306_418170_418199(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.Initializer;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418170, 418199);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation?
                f_306_418164_418200(Microsoft.CodeAnalysis.Operations.OperationCloner
                this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                node)
                {
                    var return_v = this_param.Visit<Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation>(node);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418164, 418200);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SemanticModel?
                f_306_418202_418239(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.OwningSemanticModel;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418202, 418239);
                    return return_v;
                }


                Microsoft.CodeAnalysis.SyntaxNode
                f_306_418241_418265(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.Syntax;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418241, 418265);
                    return return_v;
                }


                Microsoft.CodeAnalysis.ITypeSymbol?
                f_306_418267_418289(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.Type;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418267, 418289);
                    return return_v;
                }


                bool
                f_306_418291_418319(Microsoft.CodeAnalysis.Operations.WithOperation
                this_param)
                {
                    var return_v = this_param.IsImplicit;
                    DynAbs.Tracing.TraceSender.TraceEndMemberAccess(306, 418291, 418319);
                    return return_v;
                }


                Microsoft.CodeAnalysis.Operations.WithOperation
                f_306_418081_418320(Microsoft.CodeAnalysis.IOperation
                operand, Microsoft.CodeAnalysis.IMethodSymbol?
                cloneMethod, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
                initializer, Microsoft.CodeAnalysis.SemanticModel?
                semanticModel, Microsoft.CodeAnalysis.SyntaxNode
                syntax, Microsoft.CodeAnalysis.ITypeSymbol?
                type, bool
                isImplicit)
                {
                    var return_v = new Microsoft.CodeAnalysis.Operations.WithOperation(operand, cloneMethod, initializer, semanticModel, syntax, type, isImplicit);
                    DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418081, 418320);
                    return return_v;
                }

            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 417906, 418332);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 417906, 418332);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        static OperationCloner()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 367636, 418339);
            DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 367778, 367812);
            s_instance = f_306_367791_367812(); DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 367636, 418339);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 367636, 418339);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 367636, 418339);

        static Microsoft.CodeAnalysis.Operations.OperationCloner
        f_306_367791_367812()
        {
            var return_v = new Microsoft.CodeAnalysis.Operations.OperationCloner();
            DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 367791, 367812);
            return return_v;
        }

    }
    public abstract partial class OperationVisitor
    {
        public virtual void Visit(IOperation? operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418501, 418527);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418504, 418527);
                DynAbs.Tracing.TraceSender.TraceInvocationWrapper(() => DynAbs.Tracing.TraceSender.TraceConditionalAccessExpression(operation, 306, 418504, 418527)?.Accept(this), 306, 418514, 418527); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418501, 418527);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418501, 418527);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418501, 418527);
            }
        }

        public virtual void DefaultVisit(IOperation operation)
        {
            try
            { /* no-op */
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418538, 418608);
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418538, 418608);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418538, 418608);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418538, 418608);
            }
        }

        internal virtual void VisitNoneOperation(IOperation operation)
        {
            try
            { /* no-op */
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418618, 418696);
                DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418618, 418696);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418618, 418696);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418618, 418696);
            }
        }

        public virtual void VisitInvalid(IInvalidOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418768, 418794);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418771, 418794);
                f_306_418771_418794(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418768, 418794);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418768, 418794);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418768, 418794);
            }

            int
            f_306_418771_418794(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInvalidOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418771, 418794);
                return 0;
            }

        }

        public virtual void VisitBlock(IBlockOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418863, 418889);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418866, 418889);
                f_306_418866_418889(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418863, 418889);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418863, 418889);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418863, 418889);
            }

            int
            f_306_418866_418889(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418866, 418889);
                return 0;
            }

        }

        public virtual void VisitVariableDeclarationGroup(IVariableDeclarationGroupOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 418996, 419022);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 418999, 419022);
                f_306_418999_419022(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 418996, 419022);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 418996, 419022);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418996, 419022);
            }

            int
            f_306_418999_419022(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 418999, 419022);
                return 0;
            }

        }

        public virtual void VisitSwitch(ISwitchOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419093, 419119);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419096, 419119);
                f_306_419096_419119(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419093, 419119);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419093, 419119);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419093, 419119);
            }

            int
            f_306_419096_419119(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419096, 419119);
                return 0;
            }

        }

        public virtual void VisitForEachLoop(IForEachLoopOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419200, 419226);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419203, 419226);
                f_306_419203_419226(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419200, 419226);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419200, 419226);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419200, 419226);
            }

            int
            f_306_419203_419226(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IForEachLoopOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419203, 419226);
                return 0;
            }

        }

        public virtual void VisitForLoop(IForLoopOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419299, 419325);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419302, 419325);
                f_306_419302_419325(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419299, 419325);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419299, 419325);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419299, 419325);
            }

            int
            f_306_419302_419325(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IForLoopOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419302, 419325);
                return 0;
            }

        }

        public virtual void VisitForToLoop(IForToLoopOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419402, 419428);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419405, 419428);
                f_306_419405_419428(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419402, 419428);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419402, 419428);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419402, 419428);
            }

            int
            f_306_419405_419428(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IForToLoopOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419405, 419428);
                return 0;
            }

        }

        public virtual void VisitWhileLoop(IWhileLoopOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419505, 419531);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419508, 419531);
                f_306_419508_419531(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419505, 419531);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419505, 419531);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419505, 419531);
            }

            int
            f_306_419508_419531(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IWhileLoopOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419508, 419531);
                return 0;
            }

        }

        public virtual void VisitLabeled(ILabeledOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419604, 419630);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419607, 419630);
                f_306_419607_419630(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419604, 419630);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419604, 419630);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419604, 419630);
            }

            int
            f_306_419607_419630(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ILabeledOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419607, 419630);
                return 0;
            }

        }

        public virtual void VisitBranch(IBranchOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419701, 419727);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419704, 419727);
                f_306_419704_419727(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419701, 419727);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419701, 419727);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419701, 419727);
            }

            int
            f_306_419704_419727(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IBranchOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419704, 419727);
                return 0;
            }

        }

        public virtual void VisitEmpty(IEmptyOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419796, 419822);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419799, 419822);
                f_306_419799_419822(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419796, 419822);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419796, 419822);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419796, 419822);
            }

            int
            f_306_419799_419822(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IEmptyOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419799, 419822);
                return 0;
            }

        }

        public virtual void VisitReturn(IReturnOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419893, 419919);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419896, 419919);
                f_306_419896_419919(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419893, 419919);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419893, 419919);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419893, 419919);
            }

            int
            f_306_419896_419919(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IReturnOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419896, 419919);
                return 0;
            }

        }

        public virtual void VisitLock(ILockOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 419986, 420012);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 419989, 420012);
                f_306_419989_420012(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 419986, 420012);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 419986, 420012);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 419986, 420012);
            }

            int
            f_306_419989_420012(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ILockOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 419989, 420012);
                return 0;
            }

        }

        public virtual void VisitTry(ITryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420077, 420103);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420080, 420103);
                f_306_420080_420103(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420077, 420103);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420077, 420103);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420077, 420103);
            }

            int
            f_306_420080_420103(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420080, 420103);
                return 0;
            }

        }

        public virtual void VisitUsing(IUsingOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420172, 420198);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420175, 420198);
                f_306_420175_420198(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420172, 420198);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420172, 420198);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420172, 420198);
            }

            int
            f_306_420175_420198(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IUsingOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420175, 420198);
                return 0;
            }

        }

        public virtual void VisitExpressionStatement(IExpressionStatementOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420295, 420321);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420298, 420321);
                f_306_420298_420321(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420295, 420321);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420295, 420321);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420295, 420321);
            }

            int
            f_306_420298_420321(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420298, 420321);
                return 0;
            }

        }

        public virtual void VisitLocalFunction(ILocalFunctionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420406, 420432);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420409, 420432);
                f_306_420409_420432(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420406, 420432);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420406, 420432);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420406, 420432);
            }

            int
            f_306_420409_420432(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420409, 420432);
                return 0;
            }

        }

        public virtual void VisitStop(IStopOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420499, 420525);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420502, 420525);
                f_306_420502_420525(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420499, 420525);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420499, 420525);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420499, 420525);
            }

            int
            f_306_420502_420525(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IStopOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420502, 420525);
                return 0;
            }

        }

        public virtual void VisitEnd(IEndOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420590, 420616);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420593, 420616);
                f_306_420593_420616(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420590, 420616);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420590, 420616);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420590, 420616);
            }

            int
            f_306_420593_420616(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IEndOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420593, 420616);
                return 0;
            }

        }

        public virtual void VisitRaiseEvent(IRaiseEventOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420695, 420721);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420698, 420721);
                f_306_420698_420721(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420695, 420721);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420695, 420721);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420695, 420721);
            }

            int
            f_306_420698_420721(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRaiseEventOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420698, 420721);
                return 0;
            }

        }

        public virtual void VisitLiteral(ILiteralOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420794, 420820);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420797, 420820);
                f_306_420797_420820(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420794, 420820);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420794, 420820);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420794, 420820);
            }

            int
            f_306_420797_420820(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ILiteralOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420797, 420820);
                return 0;
            }

        }

        public virtual void VisitConversion(IConversionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 420899, 420925);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 420902, 420925);
                f_306_420902_420925(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 420899, 420925);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 420899, 420925);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 420899, 420925);
            }

            int
            f_306_420902_420925(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConversionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 420902, 420925);
                return 0;
            }

        }

        public virtual void VisitInvocation(IInvocationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421004, 421030);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421007, 421030);
                f_306_421007_421030(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421004, 421030);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421004, 421030);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421004, 421030);
            }

            int
            f_306_421007_421030(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInvocationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421007, 421030);
                return 0;
            }

        }

        public virtual void VisitArrayElementReference(IArrayElementReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421131, 421157);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421134, 421157);
                f_306_421134_421157(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421131, 421157);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421131, 421157);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421131, 421157);
            }

            int
            f_306_421134_421157(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421134, 421157);
                return 0;
            }

        }

        public virtual void VisitLocalReference(ILocalReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421244, 421270);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421247, 421270);
                f_306_421247_421270(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421244, 421270);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421244, 421270);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421244, 421270);
            }

            int
            f_306_421247_421270(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421247, 421270);
                return 0;
            }

        }

        public virtual void VisitParameterReference(IParameterReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421365, 421391);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421368, 421391);
                f_306_421368_421391(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421365, 421391);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421365, 421391);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421365, 421391);
            }

            int
            f_306_421368_421391(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421368, 421391);
                return 0;
            }

        }

        public virtual void VisitFieldReference(IFieldReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421478, 421504);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421481, 421504);
                f_306_421481_421504(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421478, 421504);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421478, 421504);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421478, 421504);
            }

            int
            f_306_421481_421504(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421481, 421504);
                return 0;
            }

        }

        public virtual void VisitMethodReference(IMethodReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421593, 421619);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421596, 421619);
                f_306_421596_421619(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421593, 421619);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421593, 421619);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421593, 421619);
            }

            int
            f_306_421596_421619(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421596, 421619);
                return 0;
            }

        }

        public virtual void VisitPropertyReference(IPropertyReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421712, 421738);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421715, 421738);
                f_306_421715_421738(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421712, 421738);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421712, 421738);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421712, 421738);
            }

            int
            f_306_421715_421738(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421715, 421738);
                return 0;
            }

        }

        public virtual void VisitEventReference(IEventReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421825, 421851);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421828, 421851);
                f_306_421828_421851(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421825, 421851);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421825, 421851);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421825, 421851);
            }

            int
            f_306_421828_421851(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421828, 421851);
                return 0;
            }

        }

        public virtual void VisitUnaryOperator(IUnaryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 421928, 421954);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 421931, 421954);
                f_306_421931_421954(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 421928, 421954);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 421928, 421954);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 421928, 421954);
            }

            int
            f_306_421931_421954(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IUnaryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 421931, 421954);
                return 0;
            }

        }

        public virtual void VisitBinaryOperator(IBinaryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422033, 422059);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422036, 422059);
                f_306_422036_422059(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422033, 422059);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422033, 422059);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422033, 422059);
            }

            int
            f_306_422036_422059(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IBinaryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422036, 422059);
                return 0;
            }

        }

        public virtual void VisitConditional(IConditionalOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422140, 422166);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422143, 422166);
                f_306_422143_422166(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422140, 422166);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422140, 422166);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422140, 422166);
            }

            int
            f_306_422143_422166(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422143, 422166);
                return 0;
            }

        }

        public virtual void VisitCoalesce(ICoalesceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422241, 422267);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422244, 422267);
                f_306_422244_422267(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422241, 422267);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422241, 422267);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422241, 422267);
            }

            int
            f_306_422244_422267(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ICoalesceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422244, 422267);
                return 0;
            }

        }

        public virtual void VisitAnonymousFunction(IAnonymousFunctionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422360, 422386);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422363, 422386);
                f_306_422363_422386(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422360, 422386);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422360, 422386);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422360, 422386);
            }

            int
            f_306_422363_422386(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422363, 422386);
                return 0;
            }

        }

        public virtual void VisitObjectCreation(IObjectCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422473, 422499);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422476, 422499);
                f_306_422476_422499(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422473, 422499);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422473, 422499);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422473, 422499);
            }

            int
            f_306_422476_422499(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IObjectCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422476, 422499);
                return 0;
            }

        }

        public virtual void VisitTypeParameterObjectCreation(ITypeParameterObjectCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422612, 422638);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422615, 422638);
                f_306_422615_422638(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422612, 422638);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422612, 422638);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422612, 422638);
            }

            int
            f_306_422615_422638(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422615, 422638);
                return 0;
            }

        }

        public virtual void VisitArrayCreation(IArrayCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422723, 422749);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422726, 422749);
                f_306_422726_422749(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422723, 422749);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422723, 422749);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422723, 422749);
            }

            int
            f_306_422726_422749(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IArrayCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422726, 422749);
                return 0;
            }

        }

        public virtual void VisitInstanceReference(IInstanceReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422842, 422868);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422845, 422868);
                f_306_422845_422868(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422842, 422868);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422842, 422868);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422842, 422868);
            }

            int
            f_306_422845_422868(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422845, 422868);
                return 0;
            }

        }

        public virtual void VisitIsType(IIsTypeOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 422939, 422965);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 422942, 422965);
                f_306_422942_422965(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 422939, 422965);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 422939, 422965);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 422939, 422965);
            }

            int
            f_306_422942_422965(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IIsTypeOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 422942, 422965);
                return 0;
            }

        }

        public virtual void VisitAwait(IAwaitOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423034, 423060);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423037, 423060);
                f_306_423037_423060(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423034, 423060);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423034, 423060);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423034, 423060);
            }

            int
            f_306_423037_423060(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IAwaitOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423037, 423060);
                return 0;
            }

        }

        public virtual void VisitSimpleAssignment(ISimpleAssignmentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423151, 423177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423154, 423177);
                f_306_423154_423177(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423151, 423177);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423151, 423177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423151, 423177);
            }

            int
            f_306_423154_423177(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423154, 423177);
                return 0;
            }

        }

        public virtual void VisitCompoundAssignment(ICompoundAssignmentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423272, 423298);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423275, 423298);
                f_306_423275_423298(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423272, 423298);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423272, 423298);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423272, 423298);
            }

            int
            f_306_423275_423298(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423275, 423298);
                return 0;
            }

        }

        public virtual void VisitParenthesized(IParenthesizedOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423383, 423409);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423386, 423409);
                f_306_423386_423409(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423383, 423409);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423383, 423409);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423383, 423409);
            }

            int
            f_306_423386_423409(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IParenthesizedOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423386, 423409);
                return 0;
            }

        }

        public virtual void VisitEventAssignment(IEventAssignmentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423498, 423524);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423501, 423524);
                f_306_423501_423524(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423498, 423524);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423498, 423524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423498, 423524);
            }

            int
            f_306_423501_423524(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423501, 423524);
                return 0;
            }

        }

        public virtual void VisitConditionalAccess(IConditionalAccessOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423617, 423643);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423620, 423643);
                f_306_423620_423643(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423617, 423643);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423617, 423643);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423617, 423643);
            }

            int
            f_306_423620_423643(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423620, 423643);
                return 0;
            }

        }

        public virtual void VisitConditionalAccessInstance(IConditionalAccessInstanceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423752, 423778);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423755, 423778);
                f_306_423755_423778(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423752, 423778);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423752, 423778);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423752, 423778);
            }

            int
            f_306_423755_423778(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423755, 423778);
                return 0;
            }

        }

        public virtual void VisitInterpolatedString(IInterpolatedStringOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 423873, 423899);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 423876, 423899);
                f_306_423876_423899(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 423873, 423899);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 423873, 423899);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 423873, 423899);
            }

            int
            f_306_423876_423899(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 423876, 423899);
                return 0;
            }

        }

        public virtual void VisitAnonymousObjectCreation(IAnonymousObjectCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424004, 424030);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424007, 424030);
                f_306_424007_424030(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424004, 424030);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424004, 424030);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424004, 424030);
            }

            int
            f_306_424007_424030(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424007, 424030);
                return 0;
            }

        }

        public virtual void VisitObjectOrCollectionInitializer(IObjectOrCollectionInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424147, 424173);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424150, 424173);
                f_306_424150_424173(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424147, 424173);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424147, 424173);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424147, 424173);
            }

            int
            f_306_424150_424173(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424150, 424173);
                return 0;
            }

        }

        public virtual void VisitMemberInitializer(IMemberInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424266, 424292);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424269, 424292);
                f_306_424269_424292(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424266, 424292);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424266, 424292);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424266, 424292);
            }

            int
            f_306_424269_424292(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424269, 424292);
                return 0;
            }

        }

        [Obsolete("ICollectionElementInitializerOperation has been replaced with " + nameof(IInvocationOperation) + " and " + nameof(IDynamicInvocationOperation), error: true)]
        public virtual void VisitCollectionElementInitializer(ICollectionElementInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424585, 424611);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424588, 424611);
                f_306_424588_424611(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424585, 424611);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424585, 424611);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424585, 424611);
            }

            int
            f_306_424588_424611(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424588, 424611);
                return 0;
            }

        }

        public virtual void VisitNameOf(INameOfOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424682, 424708);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424685, 424708);
                f_306_424685_424708(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424682, 424708);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424682, 424708);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424682, 424708);
            }

            int
            f_306_424685_424708(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.INameOfOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424685, 424708);
                return 0;
            }

        }

        public virtual void VisitTuple(ITupleOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424777, 424803);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424780, 424803);
                f_306_424780_424803(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424777, 424803);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424777, 424803);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424777, 424803);
            }

            int
            f_306_424780_424803(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITupleOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424780, 424803);
                return 0;
            }

        }

        public virtual void VisitDynamicObjectCreation(IDynamicObjectCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 424904, 424930);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 424907, 424930);
                f_306_424907_424930(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 424904, 424930);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 424904, 424930);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 424904, 424930);
            }

            int
            f_306_424907_424930(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 424907, 424930);
                return 0;
            }

        }

        public virtual void VisitDynamicMemberReference(IDynamicMemberReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425033, 425059);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425036, 425059);
                f_306_425036_425059(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425033, 425059);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425033, 425059);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425033, 425059);
            }

            int
            f_306_425036_425059(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425036, 425059);
                return 0;
            }

        }

        public virtual void VisitDynamicInvocation(IDynamicInvocationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425152, 425178);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425155, 425178);
                f_306_425155_425178(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425152, 425178);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425152, 425178);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425152, 425178);
            }

            int
            f_306_425155_425178(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425155, 425178);
                return 0;
            }

        }

        public virtual void VisitDynamicIndexerAccess(IDynamicIndexerAccessOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425277, 425303);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425280, 425303);
                f_306_425280_425303(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425277, 425303);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425277, 425303);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425277, 425303);
            }

            int
            f_306_425280_425303(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425280, 425303);
                return 0;
            }

        }

        public virtual void VisitTranslatedQuery(ITranslatedQueryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425392, 425418);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425395, 425418);
                f_306_425395_425418(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425392, 425418);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425392, 425418);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425392, 425418);
            }

            int
            f_306_425395_425418(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425395, 425418);
                return 0;
            }

        }

        public virtual void VisitDelegateCreation(IDelegateCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425509, 425535);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425512, 425535);
                f_306_425512_425535(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425509, 425535);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425509, 425535);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425509, 425535);
            }

            int
            f_306_425512_425535(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425512, 425535);
                return 0;
            }

        }

        public virtual void VisitDefaultValue(IDefaultValueOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425618, 425644);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425621, 425644);
                f_306_425621_425644(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425618, 425644);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425618, 425644);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425618, 425644);
            }

            int
            f_306_425621_425644(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDefaultValueOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425621, 425644);
                return 0;
            }

        }

        public virtual void VisitTypeOf(ITypeOfOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425715, 425741);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425718, 425741);
                f_306_425718_425741(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425715, 425741);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425715, 425741);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425715, 425741);
            }

            int
            f_306_425718_425741(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITypeOfOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425718, 425741);
                return 0;
            }

        }

        public virtual void VisitSizeOf(ISizeOfOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425812, 425838);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425815, 425838);
                f_306_425815_425838(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425812, 425838);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425812, 425838);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425812, 425838);
            }

            int
            f_306_425815_425838(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISizeOfOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425815, 425838);
                return 0;
            }

        }

        public virtual void VisitAddressOf(IAddressOfOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 425915, 425941);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 425918, 425941);
                f_306_425918_425941(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 425915, 425941);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 425915, 425941);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 425915, 425941);
            }

            int
            f_306_425918_425941(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IAddressOfOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 425918, 425941);
                return 0;
            }

        }

        public virtual void VisitIsPattern(IIsPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426018, 426044);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426021, 426044);
                f_306_426021_426044(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426018, 426044);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426018, 426044);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426018, 426044);
            }

            int
            f_306_426021_426044(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IIsPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426021, 426044);
                return 0;
            }

        }

        public virtual void VisitIncrementOrDecrement(IIncrementOrDecrementOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426143, 426169);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426146, 426169);
                f_306_426146_426169(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426143, 426169);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426143, 426169);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426143, 426169);
            }

            int
            f_306_426146_426169(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426146, 426169);
                return 0;
            }

        }

        public virtual void VisitThrow(IThrowOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426238, 426264);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426241, 426264);
                f_306_426241_426264(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426238, 426264);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426238, 426264);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426238, 426264);
            }

            int
            f_306_426241_426264(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IThrowOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426241, 426264);
                return 0;
            }

        }

        public virtual void VisitDeconstructionAssignment(IDeconstructionAssignmentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426371, 426397);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426374, 426397);
                f_306_426374_426397(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426371, 426397);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426371, 426397);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426371, 426397);
            }

            int
            f_306_426374_426397(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426374, 426397);
                return 0;
            }

        }

        public virtual void VisitDeclarationExpression(IDeclarationExpressionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426498, 426524);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426501, 426524);
                f_306_426501_426524(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426498, 426524);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426498, 426524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426498, 426524);
            }

            int
            f_306_426501_426524(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426501, 426524);
                return 0;
            }

        }

        public virtual void VisitOmittedArgument(IOmittedArgumentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426613, 426639);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426616, 426639);
                f_306_426616_426639(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426613, 426639);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426613, 426639);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426613, 426639);
            }

            int
            f_306_426616_426639(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426616, 426639);
                return 0;
            }

        }

        public virtual void VisitFieldInitializer(IFieldInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426730, 426756);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426733, 426756);
                f_306_426733_426756(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426730, 426756);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426730, 426756);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426730, 426756);
            }

            int
            f_306_426733_426756(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426733, 426756);
                return 0;
            }

        }

        public virtual void VisitVariableInitializer(IVariableInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426853, 426879);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426856, 426879);
                f_306_426856_426879(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426853, 426879);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426853, 426879);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426853, 426879);
            }

            int
            f_306_426856_426879(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426856, 426879);
                return 0;
            }

        }

        public virtual void VisitPropertyInitializer(IPropertyInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 426976, 427002);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 426979, 427002);
                f_306_426979_427002(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 426976, 427002);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 426976, 427002);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 426976, 427002);
            }

            int
            f_306_426979_427002(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 426979, 427002);
                return 0;
            }

        }

        public virtual void VisitParameterInitializer(IParameterInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427101, 427127);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427104, 427127);
                f_306_427104_427127(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427101, 427127);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427101, 427127);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427101, 427127);
            }

            int
            f_306_427104_427127(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427104, 427127);
                return 0;
            }

        }

        public virtual void VisitArrayInitializer(IArrayInitializerOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427218, 427244);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427221, 427244);
                f_306_427221_427244(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427218, 427244);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427218, 427244);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427218, 427244);
            }

            int
            f_306_427221_427244(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427221, 427244);
                return 0;
            }

        }

        public virtual void VisitVariableDeclarator(IVariableDeclaratorOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427339, 427365);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427342, 427365);
                f_306_427342_427365(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427339, 427365);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427339, 427365);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427339, 427365);
            }

            int
            f_306_427342_427365(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427342, 427365);
                return 0;
            }

        }

        public virtual void VisitVariableDeclaration(IVariableDeclarationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427462, 427488);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427465, 427488);
                f_306_427465_427488(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427462, 427488);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427462, 427488);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427462, 427488);
            }

            int
            f_306_427465_427488(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427465, 427488);
                return 0;
            }

        }

        public virtual void VisitArgument(IArgumentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427563, 427589);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427566, 427589);
                f_306_427566_427589(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427563, 427589);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427563, 427589);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427563, 427589);
            }

            int
            f_306_427566_427589(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IArgumentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427566, 427589);
                return 0;
            }

        }

        public virtual void VisitCatchClause(ICatchClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427670, 427696);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427673, 427696);
                f_306_427673_427696(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427670, 427696);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427670, 427696);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427670, 427696);
            }

            int
            f_306_427673_427696(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ICatchClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427673, 427696);
                return 0;
            }

        }

        public virtual void VisitSwitchCase(ISwitchCaseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427775, 427801);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427778, 427801);
                f_306_427778_427801(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427775, 427801);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427775, 427801);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427775, 427801);
            }

            int
            f_306_427778_427801(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427778, 427801);
                return 0;
            }

        }

        public virtual void VisitDefaultCaseClause(IDefaultCaseClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 427894, 427920);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 427897, 427920);
                f_306_427897_427920(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 427894, 427920);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 427894, 427920);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 427894, 427920);
            }

            int
            f_306_427897_427920(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 427897, 427920);
                return 0;
            }

        }

        public virtual void VisitPatternCaseClause(IPatternCaseClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428013, 428039);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428016, 428039);
                f_306_428016_428039(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428013, 428039);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428013, 428039);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428013, 428039);
            }

            int
            f_306_428016_428039(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428016, 428039);
                return 0;
            }

        }

        public virtual void VisitRangeCaseClause(IRangeCaseClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428128, 428154);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428131, 428154);
                f_306_428131_428154(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428128, 428154);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428128, 428154);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428128, 428154);
            }

            int
            f_306_428131_428154(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428131, 428154);
                return 0;
            }

        }

        public virtual void VisitRelationalCaseClause(IRelationalCaseClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428253, 428279);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428256, 428279);
                f_306_428256_428279(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428253, 428279);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428253, 428279);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428253, 428279);
            }

            int
            f_306_428256_428279(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428256, 428279);
                return 0;
            }

        }

        public virtual void VisitSingleValueCaseClause(ISingleValueCaseClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428380, 428406);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428383, 428406);
                f_306_428383_428406(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428380, 428406);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428380, 428406);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428380, 428406);
            }

            int
            f_306_428383_428406(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428383, 428406);
                return 0;
            }

        }

        public virtual void VisitInterpolatedStringText(IInterpolatedStringTextOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428509, 428535);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428512, 428535);
                f_306_428512_428535(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428509, 428535);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428509, 428535);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428509, 428535);
            }

            int
            f_306_428512_428535(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428512, 428535);
                return 0;
            }

        }

        public virtual void VisitInterpolation(IInterpolationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428620, 428646);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428623, 428646);
                f_306_428623_428646(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428620, 428646);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428620, 428646);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428620, 428646);
            }

            int
            f_306_428623_428646(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428623, 428646);
                return 0;
            }

        }

        public virtual void VisitConstantPattern(IConstantPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428735, 428761);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428738, 428761);
                f_306_428738_428761(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428735, 428761);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428735, 428761);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428735, 428761);
            }

            int
            f_306_428738_428761(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConstantPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428738, 428761);
                return 0;
            }

        }

        public virtual void VisitDeclarationPattern(IDeclarationPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428856, 428882);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428859, 428882);
                f_306_428859_428882(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428856, 428882);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428856, 428882);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428856, 428882);
            }

            int
            f_306_428859_428882(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428859, 428882);
                return 0;
            }

        }

        public virtual void VisitTupleBinaryOperator(ITupleBinaryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 428971, 428997);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 428974, 428997);
                f_306_428974_428997(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 428971, 428997);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 428971, 428997);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 428971, 428997);
            }

            int
            f_306_428974_428997(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 428974, 428997);
                return 0;
            }

        }

        public virtual void VisitMethodBodyOperation(IMethodBodyOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429085, 429111);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429088, 429111);
                f_306_429088_429111(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429085, 429111);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429085, 429111);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429085, 429111);
            }

            int
            f_306_429088_429111(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IMethodBodyOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429088, 429111);
                return 0;
            }

        }

        public virtual void VisitConstructorBodyOperation(IConstructorBodyOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429209, 429235);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429212, 429235);
                f_306_429212_429235(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429209, 429235);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429209, 429235);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429209, 429235);
            }

            int
            f_306_429212_429235(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429212, 429235);
                return 0;
            }

        }

        public virtual void VisitDiscardOperation(IDiscardOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429317, 429343);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429320, 429343);
                f_306_429320_429343(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429317, 429343);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429317, 429343);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429317, 429343);
            }

            int
            f_306_429320_429343(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDiscardOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429320, 429343);
                return 0;
            }

        }

        public virtual void VisitFlowCapture(IFlowCaptureOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429424, 429450);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429427, 429450);
                f_306_429427_429450(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429424, 429450);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429424, 429450);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429424, 429450);
            }

            int
            f_306_429427_429450(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429427, 429450);
                return 0;
            }

        }

        public virtual void VisitFlowCaptureReference(IFlowCaptureReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429549, 429575);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429552, 429575);
                f_306_429552_429575(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429549, 429575);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429549, 429575);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429549, 429575);
            }

            int
            f_306_429552_429575(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429552, 429575);
                return 0;
            }

        }

        public virtual void VisitIsNull(IIsNullOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429646, 429672);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429649, 429672);
                f_306_429649_429672(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429646, 429672);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429646, 429672);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429646, 429672);
            }

            int
            f_306_429649_429672(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429649, 429672);
                return 0;
            }

        }

        public virtual void VisitCaughtException(ICaughtExceptionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429761, 429787);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429764, 429787);
                f_306_429764_429787(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429761, 429787);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429761, 429787);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429761, 429787);
            }

            int
            f_306_429764_429787(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429764, 429787);
                return 0;
            }

        }

        public virtual void VisitStaticLocalInitializationSemaphore(IStaticLocalInitializationSemaphoreOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 429914, 429940);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 429917, 429940);
                f_306_429917_429940(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 429914, 429940);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 429914, 429940);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 429914, 429940);
            }

            int
            f_306_429917_429940(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 429917, 429940);
                return 0;
            }

        }

        public virtual void VisitFlowAnonymousFunction(IFlowAnonymousFunctionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430041, 430067);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430044, 430067);
                f_306_430044_430067(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430041, 430067);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430041, 430067);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430041, 430067);
            }

            int
            f_306_430044_430067(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430044, 430067);
                return 0;
            }

        }

        public virtual void VisitCoalesceAssignment(ICoalesceAssignmentOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430162, 430188);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430165, 430188);
                f_306_430165_430188(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430162, 430188);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430162, 430188);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430162, 430188);
            }

            int
            f_306_430165_430188(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ICoalesceAssignmentOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430165, 430188);
                return 0;
            }

        }

        public virtual void VisitRangeOperation(IRangeOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430266, 430292);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430269, 430292);
                f_306_430269_430292(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430266, 430292);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430266, 430292);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430266, 430292);
            }

            int
            f_306_430269_430292(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRangeOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430269, 430292);
                return 0;
            }

        }

        public virtual void VisitReDim(IReDimOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430361, 430387);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430364, 430387);
                f_306_430364_430387(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430361, 430387);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430361, 430387);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430361, 430387);
            }

            int
            f_306_430364_430387(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IReDimOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430364, 430387);
                return 0;
            }

        }

        public virtual void VisitReDimClause(IReDimClauseOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430468, 430494);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430471, 430494);
                f_306_430471_430494(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430468, 430494);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430468, 430494);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430468, 430494);
            }

            int
            f_306_430471_430494(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IReDimClauseOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430471, 430494);
                return 0;
            }

        }

        public virtual void VisitRecursivePattern(IRecursivePatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430585, 430611);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430588, 430611);
                f_306_430588_430611(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430585, 430611);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430585, 430611);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430585, 430611);
            }

            int
            f_306_430588_430611(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430588, 430611);
                return 0;
            }

        }

        public virtual void VisitDiscardPattern(IDiscardPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430698, 430724);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430701, 430724);
                f_306_430701_430724(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430698, 430724);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430698, 430724);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430698, 430724);
            }

            int
            f_306_430701_430724(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IDiscardPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430701, 430724);
                return 0;
            }

        }

        public virtual void VisitSwitchExpression(ISwitchExpressionOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430815, 430841);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430818, 430841);
                f_306_430818_430841(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430815, 430841);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430815, 430841);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430815, 430841);
            }

            int
            f_306_430818_430841(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchExpressionOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430818, 430841);
                return 0;
            }

        }

        public virtual void VisitSwitchExpressionArm(ISwitchExpressionArmOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 430938, 430964);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 430941, 430964);
                f_306_430941_430964(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 430938, 430964);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 430938, 430964);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 430938, 430964);
            }

            int
            f_306_430941_430964(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 430941, 430964);
                return 0;
            }

        }

        public virtual void VisitPropertySubpattern(IPropertySubpatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431059, 431085);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431062, 431085);
                f_306_431062_431085(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431059, 431085);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431059, 431085);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431059, 431085);
            }

            int
            f_306_431062_431085(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431062, 431085);
                return 0;
            }

        }

        internal virtual void VisitAggregateQuery(IAggregateQueryOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431174, 431200);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431177, 431200);
                f_306_431177_431200(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431174, 431200);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431174, 431200);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431174, 431200);
            }

            int
            f_306_431177_431200(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IAggregateQueryOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431177, 431200);
                return 0;
            }

        }

        internal virtual void VisitNoPiaObjectCreation(INoPiaObjectCreationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431299, 431325);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431302, 431325);
                f_306_431302_431325(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431299, 431325);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431299, 431325);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431299, 431325);
            }

            int
            f_306_431302_431325(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.INoPiaObjectCreationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431302, 431325);
                return 0;
            }

        }

        internal virtual void VisitPlaceholder(IPlaceholderOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431408, 431434);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431411, 431434);
                f_306_431411_431434(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431408, 431434);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431408, 431434);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431408, 431434);
            }

            int
            f_306_431411_431434(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPlaceholderOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431411, 431434);
                return 0;
            }

        }

        internal virtual void VisitPointerIndirectionReference(IPointerIndirectionReferenceOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431549, 431575);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431552, 431575);
                f_306_431552_431575(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431549, 431575);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431549, 431575);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431549, 431575);
            }

            int
            f_306_431552_431575(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IPointerIndirectionReferenceOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431552, 431575);
                return 0;
            }

        }

        internal virtual void VisitWithStatement(IWithStatementOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431662, 431688);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431665, 431688);
                f_306_431665_431688(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431662, 431688);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431662, 431688);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431662, 431688);
            }

            int
            f_306_431665_431688(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IWithStatementOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431665, 431688);
                return 0;
            }

        }

        public virtual void VisitUsingDeclaration(IUsingDeclarationOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431779, 431805);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431782, 431805);
                f_306_431782_431805(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431779, 431805);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431779, 431805);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431779, 431805);
            }

            int
            f_306_431782_431805(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431782, 431805);
                return 0;
            }

        }

        public virtual void VisitNegatedPattern(INegatedPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 431892, 431918);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 431895, 431918);
                f_306_431895_431918(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 431892, 431918);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 431892, 431918);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 431892, 431918);
            }

            int
            f_306_431895_431918(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.INegatedPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 431895, 431918);
                return 0;
            }

        }

        public virtual void VisitBinaryPattern(IBinaryPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432003, 432029);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432006, 432029);
                f_306_432006_432029(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432003, 432029);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432003, 432029);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432003, 432029);
            }

            int
            f_306_432006_432029(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IBinaryPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432006, 432029);
                return 0;
            }

        }

        public virtual void VisitTypePattern(ITypePatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432110, 432136);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432113, 432136);
                f_306_432113_432136(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432110, 432136);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432110, 432136);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432110, 432136);
            }

            int
            f_306_432113_432136(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.ITypePatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432113, 432136);
                return 0;
            }

        }

        public virtual void VisitRelationalPattern(IRelationalPatternOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432229, 432255);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432232, 432255);
                f_306_432232_432255(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432229, 432255);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432229, 432255);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432229, 432255);
            }

            int
            f_306_432232_432255(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432232, 432255);
                return 0;
            }

        }

        public virtual void VisitWith(IWithOperation operation)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432322, 432348);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432325, 432348);
                f_306_432325_432348(this, operation); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432322, 432348);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432322, 432348);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432322, 432348);
            }

            int
            f_306_432325_432348(Microsoft.CodeAnalysis.Operations.OperationVisitor
            this_param, Microsoft.CodeAnalysis.Operations.IWithOperation
            operation)
            {
                this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432325, 432348);
                return 0;
            }

        }

        public OperationVisitor()
        {
            DynAbs.Tracing.TraceSender.TraceEnterConstructor(306, 418389, 432356);
            DynAbs.Tracing.TraceSender.TraceExitConstructor(306, 418389, 432356);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418389, 432356);
        }


        static OperationVisitor()
        {
            DynAbs.Tracing.TraceSender.TraceEnterStaticConstructor(306, 418389, 432356);
            DynAbs.Tracing.TraceSender.TraceExitStaticConstructor(306, 418389, 432356);

            DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 418389, 432356);
        }

        int ___ignore_me___ = DynAbs.Tracing.TraceSender.TraceBeforeConstructor(306, 418389, 432356);
    }
    public abstract partial class OperationVisitor<TArgument, TResult>
    {
        public virtual TResult? Visit(IOperation? operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432518, 432592);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432521, 432592);
                return (DynAbs.Tracing.TraceSender.Conditional_F1(306, 432521, 432538) || ((operation is null && DynAbs.Tracing.TraceSender.Conditional_F2(306, 432541, 432557)) || DynAbs.Tracing.TraceSender.Conditional_F3(306, 432560, 432592))) ? default(TResult) : f_306_432560_432592(operation, this, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432518, 432592);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432518, 432592);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432518, 432592);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_432560_432592(Microsoft.CodeAnalysis.IOperation
            this_param, Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            visitor, TArgument?
            argument)
            {
                var return_v = this_param.Accept<TArgument, TResult>(visitor, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432560, 432592);
                return return_v;
            }

        }


        public virtual TResult? DefaultVisit(IOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432682, 432701);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432685, 432701);
                return default(TResult); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432682, 432701);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432682, 432701);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432682, 432701);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }

        internal virtual TResult? VisitNoneOperation(IOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432799, 432818);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432802, 432818);
                return default(TResult); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432799, 432818);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432799, 432818);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432799, 432818);
            }
            throw new System.Exception("Slicer error: unreachable code");
        }
        public virtual TResult? VisitInvalid(IInvalidOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 432915, 432951);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 432918, 432951);
                return f_306_432918_432951(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 432915, 432951);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 432915, 432951);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 432915, 432951);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_432918_432951(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInvalidOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 432918, 432951);
                return return_v;
            }

        }

        public virtual TResult? VisitBlock(IBlockOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433044, 433080);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433047, 433080);
                return f_306_433047_433080(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433044, 433080);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433044, 433080);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433044, 433080);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433047_433080(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IBlockOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433047, 433080);
                return return_v;
            }

        }

        public virtual TResult? VisitVariableDeclarationGroup(IVariableDeclarationGroupOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433211, 433247);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433214, 433247);
                return f_306_433214_433247(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433211, 433247);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433211, 433247);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433211, 433247);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433214_433247(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433214, 433247);
                return return_v;
            }

        }

        public virtual TResult? VisitSwitch(ISwitchOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433342, 433378);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433345, 433378);
                return f_306_433345_433378(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433342, 433378);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433342, 433378);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433342, 433378);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433345_433378(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433345, 433378);
                return return_v;
            }

        }

        public virtual TResult? VisitForEachLoop(IForEachLoopOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433483, 433519);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433486, 433519);
                return f_306_433486_433519(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433483, 433519);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433483, 433519);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433483, 433519);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433486_433519(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IForEachLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433486, 433519);
                return return_v;
            }

        }

        public virtual TResult? VisitForLoop(IForLoopOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433616, 433652);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433619, 433652);
                return f_306_433619_433652(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433616, 433652);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433616, 433652);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433616, 433652);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433619_433652(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IForLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433619, 433652);
                return return_v;
            }

        }

        public virtual TResult? VisitForToLoop(IForToLoopOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433753, 433789);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433756, 433789);
                return f_306_433756_433789(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433753, 433789);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433753, 433789);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433753, 433789);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433756_433789(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IForToLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433756, 433789);
                return return_v;
            }

        }

        public virtual TResult? VisitWhileLoop(IWhileLoopOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 433890, 433926);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 433893, 433926);
                return f_306_433893_433926(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 433890, 433926);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 433890, 433926);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 433890, 433926);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_433893_433926(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IWhileLoopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 433893, 433926);
                return return_v;
            }

        }

        public virtual TResult? VisitLabeled(ILabeledOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434023, 434059);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434026, 434059);
                return f_306_434026_434059(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434023, 434059);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434023, 434059);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434023, 434059);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434026_434059(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ILabeledOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434026, 434059);
                return return_v;
            }

        }

        public virtual TResult? VisitBranch(IBranchOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434154, 434190);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434157, 434190);
                return f_306_434157_434190(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434154, 434190);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434154, 434190);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434154, 434190);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434157_434190(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IBranchOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434157, 434190);
                return return_v;
            }

        }

        public virtual TResult? VisitEmpty(IEmptyOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434283, 434319);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434286, 434319);
                return f_306_434286_434319(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434283, 434319);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434283, 434319);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434283, 434319);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434286_434319(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IEmptyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434286, 434319);
                return return_v;
            }

        }

        public virtual TResult? VisitReturn(IReturnOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434414, 434450);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434417, 434450);
                return f_306_434417_434450(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434414, 434450);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434414, 434450);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434414, 434450);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434417_434450(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IReturnOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434417, 434450);
                return return_v;
            }

        }

        public virtual TResult? VisitLock(ILockOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434541, 434577);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434544, 434577);
                return f_306_434544_434577(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434541, 434577);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434541, 434577);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434541, 434577);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434544_434577(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ILockOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434544, 434577);
                return return_v;
            }

        }

        public virtual TResult? VisitTry(ITryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434666, 434702);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434669, 434702);
                return f_306_434669_434702(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434666, 434702);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434666, 434702);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434666, 434702);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434669_434702(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434669, 434702);
                return return_v;
            }

        }

        public virtual TResult? VisitUsing(IUsingOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434795, 434831);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434798, 434831);
                return f_306_434798_434831(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434795, 434831);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434795, 434831);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434795, 434831);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434798_434831(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IUsingOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434798, 434831);
                return return_v;
            }

        }

        public virtual TResult? VisitExpressionStatement(IExpressionStatementOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 434952, 434988);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 434955, 434988);
                return f_306_434955_434988(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 434952, 434988);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 434952, 434988);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 434952, 434988);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_434955_434988(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 434955, 434988);
                return return_v;
            }

        }

        public virtual TResult? VisitLocalFunction(ILocalFunctionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435097, 435133);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435100, 435133);
                return f_306_435100_435133(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435097, 435133);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435097, 435133);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435097, 435133);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435100_435133(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435100, 435133);
                return return_v;
            }

        }

        public virtual TResult? VisitStop(IStopOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435224, 435260);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435227, 435260);
                return f_306_435227_435260(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435224, 435260);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435224, 435260);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435224, 435260);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435227_435260(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IStopOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435227, 435260);
                return return_v;
            }

        }

        public virtual TResult? VisitEnd(IEndOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435349, 435385);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435352, 435385);
                return f_306_435352_435385(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435349, 435385);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435349, 435385);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435349, 435385);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435352_435385(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IEndOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435352, 435385);
                return return_v;
            }

        }

        public virtual TResult? VisitRaiseEvent(IRaiseEventOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435488, 435524);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435491, 435524);
                return f_306_435491_435524(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435488, 435524);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435488, 435524);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435488, 435524);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435491_435524(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRaiseEventOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435491, 435524);
                return return_v;
            }

        }

        public virtual TResult? VisitLiteral(ILiteralOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435621, 435657);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435624, 435657);
                return f_306_435624_435657(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435621, 435657);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435621, 435657);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435621, 435657);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435624_435657(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ILiteralOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435624, 435657);
                return return_v;
            }

        }

        public virtual TResult? VisitConversion(IConversionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435760, 435796);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435763, 435796);
                return f_306_435763_435796(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435760, 435796);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435760, 435796);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435760, 435796);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435763_435796(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConversionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435763, 435796);
                return return_v;
            }

        }

        public virtual TResult? VisitInvocation(IInvocationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 435899, 435935);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 435902, 435935);
                return f_306_435902_435935(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 435899, 435935);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 435899, 435935);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 435899, 435935);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_435902_435935(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInvocationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 435902, 435935);
                return return_v;
            }

        }

        public virtual TResult? VisitArrayElementReference(IArrayElementReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436060, 436096);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436063, 436096);
                return f_306_436063_436096(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436060, 436096);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436060, 436096);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436060, 436096);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436063_436096(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436063, 436096);
                return return_v;
            }

        }

        public virtual TResult? VisitLocalReference(ILocalReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436207, 436243);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436210, 436243);
                return f_306_436210_436243(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436207, 436243);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436207, 436243);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436207, 436243);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436210_436243(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436210, 436243);
                return return_v;
            }

        }

        public virtual TResult? VisitParameterReference(IParameterReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436362, 436398);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436365, 436398);
                return f_306_436365_436398(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436362, 436398);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436362, 436398);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436362, 436398);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436365_436398(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436365, 436398);
                return return_v;
            }

        }

        public virtual TResult? VisitFieldReference(IFieldReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436509, 436545);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436512, 436545);
                return f_306_436512_436545(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436509, 436545);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436509, 436545);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436509, 436545);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436512_436545(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436512, 436545);
                return return_v;
            }

        }

        public virtual TResult? VisitMethodReference(IMethodReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436658, 436694);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436661, 436694);
                return f_306_436661_436694(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436658, 436694);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436658, 436694);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436658, 436694);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436661_436694(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436661, 436694);
                return return_v;
            }

        }

        public virtual TResult? VisitPropertyReference(IPropertyReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436811, 436847);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436814, 436847);
                return f_306_436814_436847(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436811, 436847);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436811, 436847);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436811, 436847);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436814_436847(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436814, 436847);
                return return_v;
            }

        }

        public virtual TResult? VisitEventReference(IEventReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 436958, 436994);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 436961, 436994);
                return f_306_436961_436994(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 436958, 436994);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 436958, 436994);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 436958, 436994);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_436961_436994(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IEventReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 436961, 436994);
                return return_v;
            }

        }

        public virtual TResult? VisitUnaryOperator(IUnaryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437095, 437131);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437098, 437131);
                return f_306_437098_437131(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437095, 437131);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437095, 437131);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437095, 437131);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437098_437131(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IUnaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437098, 437131);
                return return_v;
            }

        }

        public virtual TResult? VisitBinaryOperator(IBinaryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437234, 437270);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437237, 437270);
                return f_306_437237_437270(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437234, 437270);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437234, 437270);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437234, 437270);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437237_437270(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IBinaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437237, 437270);
                return return_v;
            }

        }

        public virtual TResult? VisitConditional(IConditionalOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437375, 437411);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437378, 437411);
                return f_306_437378_437411(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437375, 437411);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437375, 437411);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437375, 437411);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437378_437411(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437378, 437411);
                return return_v;
            }

        }

        public virtual TResult? VisitCoalesce(ICoalesceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437510, 437546);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437513, 437546);
                return f_306_437513_437546(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437510, 437546);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437510, 437546);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437510, 437546);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437513_437546(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ICoalesceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437513, 437546);
                return return_v;
            }

        }

        public virtual TResult? VisitAnonymousFunction(IAnonymousFunctionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437663, 437699);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437666, 437699);
                return f_306_437666_437699(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437663, 437699);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437663, 437699);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437663, 437699);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437666_437699(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437666, 437699);
                return return_v;
            }

        }

        public virtual TResult? VisitObjectCreation(IObjectCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437810, 437846);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437813, 437846);
                return f_306_437813_437846(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437810, 437846);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437810, 437846);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437810, 437846);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437813_437846(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437813, 437846);
                return return_v;
            }

        }

        public virtual TResult? VisitTypeParameterObjectCreation(ITypeParameterObjectCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 437983, 438019);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 437986, 438019);
                return f_306_437986_438019(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 437983, 438019);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 437983, 438019);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 437983, 438019);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_437986_438019(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 437986, 438019);
                return return_v;
            }

        }

        public virtual TResult? VisitArrayCreation(IArrayCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438128, 438164);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438131, 438164);
                return f_306_438131_438164(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438128, 438164);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438128, 438164);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438128, 438164);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438131_438164(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IArrayCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438131, 438164);
                return return_v;
            }

        }

        public virtual TResult? VisitInstanceReference(IInstanceReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438281, 438317);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438284, 438317);
                return f_306_438284_438317(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438281, 438317);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438281, 438317);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438281, 438317);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438284_438317(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438284, 438317);
                return return_v;
            }

        }

        public virtual TResult? VisitIsType(IIsTypeOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438412, 438448);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438415, 438448);
                return f_306_438415_438448(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438412, 438448);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438412, 438448);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438412, 438448);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438415_438448(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IIsTypeOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438415, 438448);
                return return_v;
            }

        }

        public virtual TResult? VisitAwait(IAwaitOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438541, 438577);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438544, 438577);
                return f_306_438544_438577(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438541, 438577);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438541, 438577);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438541, 438577);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438544_438577(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IAwaitOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438544, 438577);
                return return_v;
            }

        }

        public virtual TResult? VisitSimpleAssignment(ISimpleAssignmentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438692, 438728);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438695, 438728);
                return f_306_438695_438728(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438692, 438728);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438692, 438728);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438692, 438728);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438695_438728(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438695, 438728);
                return return_v;
            }

        }

        public virtual TResult? VisitCompoundAssignment(ICompoundAssignmentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438847, 438883);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438850, 438883);
                return f_306_438850_438883(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438847, 438883);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438847, 438883);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438847, 438883);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438850_438883(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438850, 438883);
                return return_v;
            }

        }

        public virtual TResult? VisitParenthesized(IParenthesizedOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 438992, 439028);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 438995, 439028);
                return f_306_438995_439028(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 438992, 439028);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 438992, 439028);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 438992, 439028);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_438995_439028(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IParenthesizedOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 438995, 439028);
                return return_v;
            }

        }

        public virtual TResult? VisitEventAssignment(IEventAssignmentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439141, 439177);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439144, 439177);
                return f_306_439144_439177(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439141, 439177);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439141, 439177);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439141, 439177);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439144_439177(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439144, 439177);
                return return_v;
            }

        }

        public virtual TResult? VisitConditionalAccess(IConditionalAccessOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439294, 439330);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439297, 439330);
                return f_306_439297_439330(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439294, 439330);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439294, 439330);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439294, 439330);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439297_439330(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439297, 439330);
                return return_v;
            }

        }

        public virtual TResult? VisitConditionalAccessInstance(IConditionalAccessInstanceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439463, 439499);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439466, 439499);
                return f_306_439466_439499(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439463, 439499);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439463, 439499);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439463, 439499);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439466_439499(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439466, 439499);
                return return_v;
            }

        }

        public virtual TResult? VisitInterpolatedString(IInterpolatedStringOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439618, 439654);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439621, 439654);
                return f_306_439621_439654(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439618, 439654);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439618, 439654);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439618, 439654);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439621_439654(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439621, 439654);
                return return_v;
            }

        }

        public virtual TResult? VisitAnonymousObjectCreation(IAnonymousObjectCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439783, 439819);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439786, 439819);
                return f_306_439786_439819(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439783, 439819);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439783, 439819);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439783, 439819);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439786_439819(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439786, 439819);
                return return_v;
            }

        }

        public virtual TResult? VisitObjectOrCollectionInitializer(IObjectOrCollectionInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 439960, 439996);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 439963, 439996);
                return f_306_439963_439996(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 439960, 439996);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 439960, 439996);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 439960, 439996);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_439963_439996(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 439963, 439996);
                return return_v;
            }

        }

        public virtual TResult? VisitMemberInitializer(IMemberInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 440113, 440149);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 440116, 440149);
                return f_306_440116_440149(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 440113, 440149);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 440113, 440149);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 440113, 440149);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_440116_440149(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 440116, 440149);
                return return_v;
            }

        }

        //[Obsolete("ICollectionElementInitializerOperation has been replaced with " + nameof(IInvocationOperation) + " and " + nameof(IDynamicInvocationOperation), error: true)]
        public virtual TResult? VisitNameOf(INameOfOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 440597, 440633);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 440600, 440633);
                return f_306_440600_440633(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 440597, 440633);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 440597, 440633);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 440597, 440633);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_440600_440633(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.INameOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 440600, 440633);
                return return_v;
            }

        }

        public virtual TResult? VisitTuple(ITupleOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 440726, 440762);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 440729, 440762);
                return f_306_440729_440762(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 440726, 440762);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 440726, 440762);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 440726, 440762);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_440729_440762(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITupleOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 440729, 440762);
                return return_v;
            }

        }

        public virtual TResult? VisitDynamicObjectCreation(IDynamicObjectCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 440887, 440923);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 440890, 440923);
                return f_306_440890_440923(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 440887, 440923);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 440887, 440923);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 440887, 440923);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_440890_440923(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 440890, 440923);
                return return_v;
            }

        }

        public virtual TResult? VisitDynamicMemberReference(IDynamicMemberReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441050, 441086);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441053, 441086);
                return f_306_441053_441086(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441050, 441086);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441050, 441086);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441050, 441086);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441053_441086(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441053, 441086);
                return return_v;
            }

        }

        public virtual TResult? VisitDynamicInvocation(IDynamicInvocationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441203, 441239);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441206, 441239);
                return f_306_441206_441239(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441203, 441239);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441203, 441239);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441203, 441239);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441206_441239(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441206, 441239);
                return return_v;
            }

        }

        public virtual TResult? VisitDynamicIndexerAccess(IDynamicIndexerAccessOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441362, 441398);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441365, 441398);
                return f_306_441365_441398(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441362, 441398);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441362, 441398);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441362, 441398);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441365_441398(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441365, 441398);
                return return_v;
            }

        }

        public virtual TResult? VisitTranslatedQuery(ITranslatedQueryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441511, 441547);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441514, 441547);
                return f_306_441514_441547(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441511, 441547);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441511, 441547);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441511, 441547);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441514_441547(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441514, 441547);
                return return_v;
            }

        }

        public virtual TResult? VisitDelegateCreation(IDelegateCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441662, 441698);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441665, 441698);
                return f_306_441665_441698(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441662, 441698);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441662, 441698);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441662, 441698);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441665_441698(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441665, 441698);
                return return_v;
            }

        }

        public virtual TResult? VisitDefaultValue(IDefaultValueOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441805, 441841);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441808, 441841);
                return f_306_441808_441841(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441805, 441841);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441805, 441841);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441805, 441841);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441808_441841(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDefaultValueOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441808, 441841);
                return return_v;
            }

        }

        public virtual TResult? VisitTypeOf(ITypeOfOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 441936, 441972);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 441939, 441972);
                return f_306_441939_441972(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 441936, 441972);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 441936, 441972);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 441936, 441972);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_441939_441972(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITypeOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 441939, 441972);
                return return_v;
            }

        }

        public virtual TResult? VisitSizeOf(ISizeOfOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442067, 442103);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442070, 442103);
                return f_306_442070_442103(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442067, 442103);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442067, 442103);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442067, 442103);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442070_442103(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISizeOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442070, 442103);
                return return_v;
            }

        }

        public virtual TResult? VisitAddressOf(IAddressOfOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442204, 442240);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442207, 442240);
                return f_306_442207_442240(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442204, 442240);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442204, 442240);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442204, 442240);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442207_442240(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IAddressOfOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442207, 442240);
                return return_v;
            }

        }

        public virtual TResult? VisitIsPattern(IIsPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442341, 442377);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442344, 442377);
                return f_306_442344_442377(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442341, 442377);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442341, 442377);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442341, 442377);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442344_442377(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IIsPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442344, 442377);
                return return_v;
            }

        }

        public virtual TResult? VisitIncrementOrDecrement(IIncrementOrDecrementOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442500, 442536);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442503, 442536);
                return f_306_442503_442536(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442500, 442536);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442500, 442536);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442500, 442536);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442503_442536(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442503, 442536);
                return return_v;
            }

        }

        public virtual TResult? VisitThrow(IThrowOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442629, 442665);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442632, 442665);
                return f_306_442632_442665(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442629, 442665);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442629, 442665);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442629, 442665);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442632_442665(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IThrowOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442632, 442665);
                return return_v;
            }

        }

        public virtual TResult? VisitDeconstructionAssignment(IDeconstructionAssignmentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442796, 442832);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442799, 442832);
                return f_306_442799_442832(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442796, 442832);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442796, 442832);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442796, 442832);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442799_442832(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442799, 442832);
                return return_v;
            }

        }

        public virtual TResult? VisitDeclarationExpression(IDeclarationExpressionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 442957, 442993);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 442960, 442993);
                return f_306_442960_442993(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 442957, 442993);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 442957, 442993);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 442957, 442993);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_442960_442993(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 442960, 442993);
                return return_v;
            }

        }

        public virtual TResult? VisitOmittedArgument(IOmittedArgumentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443106, 443142);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443109, 443142);
                return f_306_443109_443142(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443106, 443142);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443106, 443142);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443106, 443142);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443109_443142(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443109, 443142);
                return return_v;
            }

        }

        public virtual TResult? VisitFieldInitializer(IFieldInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443257, 443293);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443260, 443293);
                return f_306_443260_443293(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443257, 443293);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443257, 443293);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443257, 443293);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443260_443293(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443260, 443293);
                return return_v;
            }

        }

        public virtual TResult? VisitVariableInitializer(IVariableInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443414, 443450);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443417, 443450);
                return f_306_443417_443450(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443414, 443450);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443414, 443450);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443414, 443450);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443417_443450(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443417, 443450);
                return return_v;
            }

        }

        public virtual TResult? VisitPropertyInitializer(IPropertyInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443571, 443607);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443574, 443607);
                return f_306_443574_443607(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443571, 443607);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443571, 443607);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443571, 443607);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443574_443607(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443574, 443607);
                return return_v;
            }

        }

        public virtual TResult? VisitParameterInitializer(IParameterInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443730, 443766);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443733, 443766);
                return f_306_443733_443766(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443730, 443766);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443730, 443766);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443730, 443766);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443733_443766(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443733, 443766);
                return return_v;
            }

        }

        public virtual TResult? VisitArrayInitializer(IArrayInitializerOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 443881, 443917);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 443884, 443917);
                return f_306_443884_443917(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 443881, 443917);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 443881, 443917);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 443881, 443917);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_443884_443917(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 443884, 443917);
                return return_v;
            }

        }

        public virtual TResult? VisitVariableDeclarator(IVariableDeclaratorOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444036, 444072);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444039, 444072);
                return f_306_444039_444072(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444036, 444072);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444036, 444072);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444036, 444072);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444039_444072(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444039, 444072);
                return return_v;
            }

        }

        public virtual TResult? VisitVariableDeclaration(IVariableDeclarationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444193, 444229);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444196, 444229);
                return f_306_444196_444229(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444193, 444229);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444193, 444229);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444193, 444229);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444196_444229(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444196, 444229);
                return return_v;
            }

        }

        public virtual TResult? VisitArgument(IArgumentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444328, 444364);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444331, 444364);
                return f_306_444331_444364(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444328, 444364);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444328, 444364);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444328, 444364);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444331_444364(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IArgumentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444331, 444364);
                return return_v;
            }

        }

        public virtual TResult? VisitCatchClause(ICatchClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444469, 444505);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444472, 444505);
                return f_306_444472_444505(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444469, 444505);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444469, 444505);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444469, 444505);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444472_444505(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ICatchClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444472, 444505);
                return return_v;
            }

        }

        public virtual TResult? VisitSwitchCase(ISwitchCaseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444608, 444644);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444611, 444644);
                return f_306_444611_444644(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444608, 444644);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444608, 444644);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444608, 444644);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444611_444644(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444611, 444644);
                return return_v;
            }

        }

        public virtual TResult? VisitDefaultCaseClause(IDefaultCaseClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444761, 444797);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444764, 444797);
                return f_306_444764_444797(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444761, 444797);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444761, 444797);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444761, 444797);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444764_444797(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444764, 444797);
                return return_v;
            }

        }

        public virtual TResult? VisitPatternCaseClause(IPatternCaseClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 444914, 444950);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 444917, 444950);
                return f_306_444917_444950(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 444914, 444950);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 444914, 444950);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 444914, 444950);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_444917_444950(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 444917, 444950);
                return return_v;
            }

        }

        public virtual TResult? VisitRangeCaseClause(IRangeCaseClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445063, 445099);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445066, 445099);
                return f_306_445066_445099(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445063, 445099);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445063, 445099);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445063, 445099);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445066_445099(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445066, 445099);
                return return_v;
            }

        }

        public virtual TResult? VisitRelationalCaseClause(IRelationalCaseClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445222, 445258);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445225, 445258);
                return f_306_445225_445258(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445222, 445258);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445222, 445258);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445222, 445258);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445225_445258(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445225, 445258);
                return return_v;
            }

        }

        public virtual TResult? VisitSingleValueCaseClause(ISingleValueCaseClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445383, 445419);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445386, 445419);
                return f_306_445386_445419(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445383, 445419);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445383, 445419);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445383, 445419);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445386_445419(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445386, 445419);
                return return_v;
            }

        }

        public virtual TResult? VisitInterpolatedStringText(IInterpolatedStringTextOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445546, 445582);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445549, 445582);
                return f_306_445549_445582(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445546, 445582);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445546, 445582);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445546, 445582);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445549_445582(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445549, 445582);
                return return_v;
            }

        }

        public virtual TResult? VisitInterpolation(IInterpolationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445691, 445727);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445694, 445727);
                return f_306_445694_445727(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445691, 445727);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445691, 445727);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445691, 445727);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445694_445727(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IInterpolationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445694, 445727);
                return return_v;
            }

        }

        public virtual TResult? VisitConstantPattern(IConstantPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445840, 445876);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445843, 445876);
                return f_306_445843_445876(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445840, 445876);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445840, 445876);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445840, 445876);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445843_445876(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConstantPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445843, 445876);
                return return_v;
            }

        }

        public virtual TResult? VisitDeclarationPattern(IDeclarationPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 445995, 446031);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 445998, 446031);
                return f_306_445998_446031(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 445995, 446031);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 445995, 446031);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 445995, 446031);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_445998_446031(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 445998, 446031);
                return return_v;
            }

        }

        public virtual TResult? VisitTupleBinaryOperator(ITupleBinaryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446144, 446180);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446147, 446180);
                return f_306_446147_446180(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446144, 446180);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446144, 446180);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446144, 446180);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446147_446180(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446147, 446180);
                return return_v;
            }

        }

        public virtual TResult? VisitMethodBodyOperation(IMethodBodyOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446292, 446328);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446295, 446328);
                return f_306_446295_446328(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446292, 446328);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446292, 446328);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446292, 446328);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446295_446328(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IMethodBodyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446295, 446328);
                return return_v;
            }

        }

        public virtual TResult? VisitConstructorBodyOperation(IConstructorBodyOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446450, 446486);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446453, 446486);
                return f_306_446453_446486(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446450, 446486);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446450, 446486);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446450, 446486);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446453_446486(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446453, 446486);
                return return_v;
            }

        }

        public virtual TResult? VisitDiscardOperation(IDiscardOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446592, 446628);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446595, 446628);
                return f_306_446595_446628(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446592, 446628);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446592, 446628);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446592, 446628);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446595_446628(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDiscardOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446595, 446628);
                return return_v;
            }

        }

        public virtual TResult? VisitFlowCapture(IFlowCaptureOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446733, 446769);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446736, 446769);
                return f_306_446736_446769(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446733, 446769);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446733, 446769);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446733, 446769);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446736_446769(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446736, 446769);
                return return_v;
            }

        }

        public virtual TResult? VisitFlowCaptureReference(IFlowCaptureReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 446892, 446928);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 446895, 446928);
                return f_306_446895_446928(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 446892, 446928);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 446892, 446928);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 446892, 446928);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_446895_446928(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 446895, 446928);
                return return_v;
            }

        }

        public virtual TResult? VisitIsNull(IIsNullOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447023, 447059);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447026, 447059);
                return f_306_447026_447059(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447023, 447059);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447023, 447059);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447023, 447059);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447026_447059(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447026, 447059);
                return return_v;
            }

        }

        public virtual TResult? VisitCaughtException(ICaughtExceptionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447172, 447208);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447175, 447208);
                return f_306_447175_447208(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447172, 447208);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447172, 447208);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447172, 447208);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447175_447208(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447175, 447208);
                return return_v;
            }

        }

        public virtual TResult? VisitStaticLocalInitializationSemaphore(IStaticLocalInitializationSemaphoreOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447359, 447395);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447362, 447395);
                return f_306_447362_447395(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447359, 447395);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447359, 447395);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447359, 447395);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447362_447395(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447362, 447395);
                return return_v;
            }

        }

        public virtual TResult? VisitFlowAnonymousFunction(IFlowAnonymousFunctionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447520, 447556);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447523, 447556);
                return f_306_447523_447556(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447520, 447556);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447520, 447556);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447520, 447556);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447523_447556(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447523, 447556);
                return return_v;
            }

        }

        public virtual TResult? VisitCoalesceAssignment(ICoalesceAssignmentOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447675, 447711);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447678, 447711);
                return f_306_447678_447711(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447675, 447711);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447675, 447711);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447675, 447711);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447678_447711(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ICoalesceAssignmentOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447678, 447711);
                return return_v;
            }

        }

        public virtual TResult? VisitRangeOperation(IRangeOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447813, 447849);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447816, 447849);
                return f_306_447816_447849(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447813, 447849);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447813, 447849);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447813, 447849);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447816_447849(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRangeOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447816, 447849);
                return return_v;
            }

        }

        public virtual TResult? VisitReDim(IReDimOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 447942, 447978);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 447945, 447978);
                return f_306_447945_447978(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 447942, 447978);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 447942, 447978);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 447942, 447978);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_447945_447978(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IReDimOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 447945, 447978);
                return return_v;
            }

        }

        public virtual TResult? VisitReDimClause(IReDimClauseOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448083, 448119);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448086, 448119);
                return f_306_448086_448119(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448083, 448119);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448083, 448119);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448083, 448119);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448086_448119(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IReDimClauseOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448086, 448119);
                return return_v;
            }

        }

        public virtual TResult? VisitRecursivePattern(IRecursivePatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448234, 448270);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448237, 448270);
                return f_306_448237_448270(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448234, 448270);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448234, 448270);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448234, 448270);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448237_448270(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRecursivePatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448237, 448270);
                return return_v;
            }

        }

        public virtual TResult? VisitDiscardPattern(IDiscardPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448381, 448417);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448384, 448417);
                return f_306_448384_448417(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448381, 448417);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448381, 448417);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448381, 448417);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448384_448417(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IDiscardPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448384, 448417);
                return return_v;
            }

        }

        public virtual TResult? VisitSwitchExpression(ISwitchExpressionOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448532, 448568);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448535, 448568);
                return f_306_448535_448568(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448532, 448568);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448532, 448568);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448532, 448568);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448535_448568(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchExpressionOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448535, 448568);
                return return_v;
            }

        }

        public virtual TResult? VisitSwitchExpressionArm(ISwitchExpressionArmOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448689, 448725);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448692, 448725);
                return f_306_448692_448725(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448689, 448725);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448689, 448725);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448689, 448725);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448692_448725(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ISwitchExpressionArmOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448692, 448725);
                return return_v;
            }

        }

        public virtual TResult? VisitPropertySubpattern(IPropertySubpatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448844, 448880);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448847, 448880);
                return f_306_448847_448880(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448844, 448880);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448844, 448880);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448844, 448880);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448847_448880(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPropertySubpatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448847, 448880);
                return return_v;
            }

        }

        internal virtual TResult? VisitAggregateQuery(IAggregateQueryOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 448993, 449029);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 448996, 449029);
                return f_306_448996_449029(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 448993, 449029);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 448993, 449029);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 448993, 449029);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_448996_449029(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IAggregateQueryOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 448996, 449029);
                return return_v;
            }

        }

        internal virtual TResult? VisitNoPiaObjectCreation(INoPiaObjectCreationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449152, 449188);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449155, 449188);
                return f_306_449155_449188(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449152, 449188);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449152, 449188);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449152, 449188);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449155_449188(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.INoPiaObjectCreationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449155, 449188);
                return return_v;
            }

        }

        internal virtual TResult? VisitPlaceholder(IPlaceholderOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449295, 449331);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449298, 449331);
                return f_306_449298_449331(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449295, 449331);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449295, 449331);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449295, 449331);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449298_449331(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPlaceholderOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449298, 449331);
                return return_v;
            }

        }

        internal virtual TResult? VisitPointerIndirectionReference(IPointerIndirectionReferenceOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449470, 449506);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449473, 449506);
                return f_306_449473_449506(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449470, 449506);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449470, 449506);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449470, 449506);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449473_449506(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IPointerIndirectionReferenceOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449473, 449506);
                return return_v;
            }

        }

        internal virtual TResult? VisitWithStatement(IWithStatementOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449617, 449653);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449620, 449653);
                return f_306_449620_449653(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449617, 449653);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449617, 449653);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449617, 449653);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449620_449653(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IWithStatementOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449620, 449653);
                return return_v;
            }

        }

        public virtual TResult? VisitUsingDeclaration(IUsingDeclarationOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449768, 449804);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449771, 449804);
                return f_306_449771_449804(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449768, 449804);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449768, 449804);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449768, 449804);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449771_449804(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IUsingDeclarationOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449771, 449804);
                return return_v;
            }

        }

        public virtual TResult? VisitNegatedPattern(INegatedPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 449915, 449951);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 449918, 449951);
                return f_306_449918_449951(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 449915, 449951);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 449915, 449951);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 449915, 449951);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_449918_449951(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.INegatedPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 449918, 449951);
                return return_v;
            }

        }

        public virtual TResult? VisitBinaryPattern(IBinaryPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 450060, 450096);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 450063, 450096);
                return f_306_450063_450096(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 450060, 450096);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 450060, 450096);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 450060, 450096);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_450063_450096(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IBinaryPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 450063, 450096);
                return return_v;
            }

        }

        public virtual TResult? VisitTypePattern(ITypePatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 450201, 450237);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 450204, 450237);
                return f_306_450204_450237(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 450201, 450237);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 450201, 450237);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 450201, 450237);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_450204_450237(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.ITypePatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 450204, 450237);
                return return_v;
            }

        }

        public virtual TResult? VisitRelationalPattern(IRelationalPatternOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 450354, 450390);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 450357, 450390);
                return f_306_450357_450390(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 450354, 450390);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 450354, 450390);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 450354, 450390);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_450357_450390(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IRelationalPatternOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 450357, 450390);
                return return_v;
            }

        }

        public virtual TResult? VisitWith(IWithOperation operation, TArgument argument)
        {
            try
            {
                DynAbs.Tracing.TraceSender.TraceEnterMethod(306, 450481, 450517);
                DynAbs.Tracing.TraceSender.TraceSimpleStatement(306, 450484, 450517);
                return f_306_450484_450517(this, operation, argument); DynAbs.Tracing.TraceSender.TraceExitMethod(306, 450481, 450517);
            }
            catch
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalCatch(306, 450481, 450517);
                throw;
            }
            finally
            {
                DynAbs.Tracing.TraceSender.TraceEnterFinalFinally(306, 450481, 450517);
            }
            throw new System.Exception("Slicer error: unreachable code");

            TResult?
            f_306_450484_450517(Microsoft.CodeAnalysis.Operations.OperationVisitor<TArgument, TResult>
            this_param, Microsoft.CodeAnalysis.Operations.IWithOperation
            operation, TArgument?
            argument)
            {
                var return_v = this_param.DefaultVisit((Microsoft.CodeAnalysis.IOperation)operation, argument);
                DynAbs.Tracing.TraceSender.TraceEndInvocation(306, 450484, 450517);
                return return_v;
            }

        }

    }
}
